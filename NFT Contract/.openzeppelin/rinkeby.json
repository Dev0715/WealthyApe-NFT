{
  "manifestVersion": "3.2",
  "admin": {
    "address": "0x85A577d95da3A536f9eD75f62C07486eB2E21690",
    "txHash": "0xa3f84a1c46903684debc9c446298e5714cb92aaf19deab63b5a88d7fde779d17",
    "deployTransaction": {
      "hash": "0xa3f84a1c46903684debc9c446298e5714cb92aaf19deab63b5a88d7fde779d17",
      "type": 2,
      "accessList": [],
      "blockHash": null,
      "blockNumber": null,
      "transactionIndex": null,
      "confirmations": 0,
      "from": "0x41f532bED9dF43eb4895c4ddc9A756ED568E761d",
      "gasPrice": {
        "type": "BigNumber",
        "hex": "0x3b9aca0c"
      },
      "maxPriorityFeePerGas": {
        "type": "BigNumber",
        "hex": "0x3b9aca00"
      },
      "maxFeePerGas": {
        "type": "BigNumber",
        "hex": "0x3b9aca0c"
      },
      "gasLimit": {
        "type": "BigNumber",
        "hex": "0x0762b4"
      },
      "to": null,
      "value": {
        "type": "BigNumber",
        "hex": "0x00"
      },
      "nonce": 63,
      "data": "0x608060405234801561001057600080fd5b50600080546001600160a01b031916339081178255604051909182917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908290a350610759806100616000396000f3fe60806040526004361061007b5760003560e01c80639623609d1161004e5780639623609d1461011157806399a88ec414610124578063f2fde38b14610144578063f3b7dead146101645761007b565b8063204e1c7a14610080578063715018a6146100bc5780637eff275e146100d35780638da5cb5b146100f3575b600080fd5b34801561008c57600080fd5b506100a061009b366004610515565b610184565b6040516001600160a01b03909116815260200160405180910390f35b3480156100c857600080fd5b506100d1610215565b005b3480156100df57600080fd5b506100d16100ee366004610554565b610292565b3480156100ff57600080fd5b506000546001600160a01b03166100a0565b6100d161011f36600461058c565b61031c565b34801561013057600080fd5b506100d161013f366004610554565b6103ad565b34801561015057600080fd5b506100d161015f366004610515565b610405565b34801561017057600080fd5b506100a061017f366004610515565b6104ef565b6000806000836001600160a01b03166040516101aa90635c60da1b60e01b815260040190565b600060405180830381855afa9150503d80600081146101e5576040519150601f19603f3d011682016040523d82523d6000602084013e6101ea565b606091505b5091509150816101f957600080fd5b8080602001905181019061020d9190610538565b949350505050565b6000546001600160a01b031633146102485760405162461bcd60e51b815260040161023f906106c0565b60405180910390fd5b600080546040516001600160a01b03909116907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a3600080546001600160a01b0319169055565b6000546001600160a01b031633146102bc5760405162461bcd60e51b815260040161023f906106c0565b6040516308f2839760e41b81526001600160a01b038281166004830152831690638f283970906024015b600060405180830381600087803b15801561030057600080fd5b505af1158015610314573d6000803e3d6000fd5b505050505050565b6000546001600160a01b031633146103465760405162461bcd60e51b815260040161023f906106c0565b60405163278f794360e11b81526001600160a01b03841690634f1ef286903490610376908690869060040161065d565b6000604051808303818588803b15801561038f57600080fd5b505af11580156103a3573d6000803e3d6000fd5b5050505050505050565b6000546001600160a01b031633146103d75760405162461bcd60e51b815260040161023f906106c0565b604051631b2ce7f360e11b81526001600160a01b038281166004830152831690633659cfe6906024016102e6565b6000546001600160a01b0316331461042f5760405162461bcd60e51b815260040161023f906106c0565b6001600160a01b0381166104945760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b606482015260840161023f565b600080546040516001600160a01b03808516939216917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a3600080546001600160a01b0319166001600160a01b0392909216919091179055565b6000806000836001600160a01b03166040516101aa906303e1469160e61b815260040190565b600060208284031215610526578081fd5b81356105318161070b565b9392505050565b600060208284031215610549578081fd5b81516105318161070b565b60008060408385031215610566578081fd5b82356105718161070b565b915060208301356105818161070b565b809150509250929050565b6000806000606084860312156105a0578081fd5b83356105ab8161070b565b925060208401356105bb8161070b565b9150604084013567ffffffffffffffff808211156105d7578283fd5b818601915086601f8301126105ea578283fd5b8135818111156105fc576105fc6106f5565b604051601f8201601f19908116603f01168101908382118183101715610624576106246106f5565b8160405282815289602084870101111561063c578586fd5b82602086016020830137856020848301015280955050505050509250925092565b600060018060a01b038416825260206040818401528351806040850152825b818110156106985785810183015185820160600152820161067c565b818111156106a95783606083870101525b50601f01601f191692909201606001949350505050565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b634e487b7160e01b600052604160045260246000fd5b6001600160a01b038116811461072057600080fd5b5056fea2646970667358221220d849f96f3086b9f82cdcf665adb8c697ace05638da1c7c16ab2d26293717af6764736f6c63430008020033",
      "r": "0xa3c493ea027a8fed2d8bc03107173b508e86eac20083b454b65c36abcf4d1fa2",
      "s": "0x1c8161a403a21a1c349d03246f1640fd9a262b220cb7b5517df8b7761254ced8",
      "v": 1,
      "creates": "0x85A577d95da3A536f9eD75f62C07486eB2E21690",
      "chainId": 4
    }
  },
  "proxies": [
    {
      "address": "0x423De9cDB0f11F7e77F6b4AE57840D40DBb6e7D4",
      "txHash": "0x43cb7aeed656ddfa0fd60211527e4313e38792e69e4abcc2462c549cf9ff1842",
      "kind": "transparent"
    },
    {
      "address": "0xB43bb2D1D7854B18e4c154a1f7814844Eb4800e9",
      "txHash": "0x08fee09a5381e0d2bb1c83abddacd6e6f33df20f474b023d10b1d1052a812c7e",
      "kind": "transparent"
    },
    {
      "address": "0x1d0208EF9962e19bf37Fb0dcA20e0BdD133a7f42",
      "txHash": "0xbfba3c0f1f877f0241d7e4f32a1a024667f83bfb54c978224e0ab7feb24f0e3f",
      "kind": "transparent"
    },
    {
      "address": "0x2a96AAcA2EA887B64C3B955482541568CAF2d8d8",
      "txHash": "0xfdf6dd73e9e755b9eab6d2ce5ce43c02157ac2c1d1beeb0b875dcee6203b2f1d",
      "kind": "transparent"
    },
    {
      "address": "0x628f8402fA3Dbd2decaaf309938E05649d854186",
      "txHash": "0xb7aef1f20e95eaf39f1c71e846af80a6e3d31144150f5426a255a776329c9dfd",
      "kind": "transparent"
    },
    {
      "address": "0x82384fa2aE9Dd791E0CbD1142eF8fC49ad7a336C",
      "txHash": "0xa4d15c9e86d7f5df4e5ed7284b69ed68dbd0d8ce2cacaecb1c0ddcc669273655",
      "kind": "transparent"
    },
    {
      "address": "0xbBdCD15106d3491B8c5c75F9B0992371a9090752",
      "txHash": "0x59f339175dcc5dc7eeabee413ca0b6e15aca42061f42107639956067f13292a3",
      "kind": "transparent"
    },
    {
      "address": "0x8fF9767EE43e56892DA874d81991B127E5089162",
      "txHash": "0x1719d3622833e18ae4c3ee20850d1d2f02dc704e870f440b40187414c9b80e79",
      "kind": "transparent"
    },
    {
      "address": "0xfb429a900E9DC449144e46D5812833eC09C772Fa",
      "txHash": "0x495cb87f8cc05fb4edb8d5b2835923b8fd45d41d093403b1c36f49c2b993031a",
      "kind": "transparent"
    },
    {
      "address": "0xCA1bA2839D02fD1fe9F0dc2869F47F9887044919",
      "txHash": "0xcd9f8c3353cd29087afae157e79115445e31cba3a55564bf7b76cd3560bed435",
      "kind": "transparent"
    },
    {
      "address": "0x0B1eD518B3321249546d1E15BcFAca892f0Bff76",
      "txHash": "0xc8b1b909ec82ac93bd83bad3400e2fc316002e591761205257f2e49100106e0a",
      "kind": "transparent"
    },
    {
      "address": "0x02c4fffCA6dBB38CC87b5f4e7106E48747B430Ca",
      "txHash": "0xf45a37fe35ab453fa435c78ac0f92b120404b3f7abe11d612041572e0a7e935d",
      "kind": "transparent"
    },
    {
      "address": "0x185249CA649431892904F7CDd4454589FAef73d2",
      "txHash": "0x75ebfee728558e4fbf94260435fc594496c64b8a487a6af2ffdcd2d04c3b5479",
      "kind": "transparent"
    },
    {
      "address": "0x8Cd05373A33D02fa45090F9617B98B66cA2817CA",
      "txHash": "0x76eb45755ce94a7cbdd747e2cb2cfaa88323ab9e8c65f621e7519c761a008c8b",
      "kind": "transparent"
    },
    {
      "address": "0xB7480D2468c8f3eb97Bb989Bcc996fb1dddfC4a6",
      "txHash": "0x4e752b613c97b2e82f5e416d96971021ef0fbe4bfe4e26876de0f79842dbcbed",
      "kind": "transparent"
    },
    {
      "address": "0x8b0d2b991Df0C9361097B137AB0A444Cc632061a",
      "txHash": "0xaadcdcd460ae32b6f29757c8f4fb1b0c6023d02a220281c0a421a7d7534fa815",
      "kind": "transparent"
    },
    {
      "address": "0x81182183210E6d3Db36Ab3fFbd944E91949421b2",
      "txHash": "0x733038929057e3bc4cc0275d56e349de15276339ec0ca9b2fba7fe81c8b9da6d",
      "kind": "transparent"
    },
    {
      "address": "0xDDbEde0017a545492A5796328f5aC3284C086dd0",
      "txHash": "0x679c579df5fee397a99aac38654224c2ec05d61da9f99a0e90a6e0d077949462",
      "kind": "transparent"
    },
    {
      "address": "0x9020DE62D9b8793a678B1DD97ba06c5d0058c709",
      "txHash": "0x1240d2d0133d479373e670b30160fa929e038cddca29d4484acfa680a477193d",
      "kind": "transparent"
    },
    {
      "address": "0xee235e97E52F10e30462ae37C5aFBADeE33E2292",
      "txHash": "0xf978a64253462d58a2c12232dd871553ce583a6e2571d0b5385f160e4fff8552",
      "kind": "transparent"
    },
    {
      "address": "0xa27B1bc1D9AEDF2912FC2959026f09527f35cd26",
      "txHash": "0x9a1e0f625ebfb9295705036be2c72bf01532fdc347b1781190ddce7f8188ba28",
      "kind": "transparent"
    },
    {
      "address": "0x1C5a7A9677DF8D770CaFD424207065c52105aB6a",
      "txHash": "0x041cfbf2fc002057c4ff7b3a070ade1ab7d8d2583c5d3c801d2249c83aec086d",
      "kind": "transparent"
    },
    {
      "address": "0x9eFc119f21dF24bC42222d87d620426E4BBe981f",
      "txHash": "0x542584802325774ef62c20aca64f3a6a947adb79affb64f6f2c78bea1abee5cd",
      "kind": "transparent"
    },
    {
      "address": "0x661024adC23003953395181F6520ad14DfD90974",
      "txHash": "0x07adff9db0cf6591fd7853319b3b3d1bf1323ced8551b6998c6b2fc18dc11464",
      "kind": "transparent"
    },
    {
      "address": "0xC4cb8bcA317Cefc5cc8A287e2DC0f9144480dc30",
      "txHash": "0x1a207e4c67e39cb7074c5f145722044d01d3e1daf1b566f3cc7f1e7ddaccfe5e",
      "kind": "transparent"
    },
    {
      "address": "0xdbCa38BC383e53BA5075EBB5889218aB6f43B343",
      "txHash": "0x8d1261ff907831989a88691cbc15eca4d7f62aa06fc4fd845d46225a3039dc28",
      "kind": "transparent"
    },
    {
      "address": "0x9dC2C906D38fed146dc6F1b5819323a44024F601",
      "txHash": "0xc934a3ec18c73673dda9657c649c59f3bc9fe5aaa3e214cffa487e1db0f6e02d",
      "kind": "transparent"
    },
    {
      "address": "0xdd8eEC1f88C3eCa8e037D53B9F1A044fEb22f1Eb",
      "txHash": "0xa9df629cd3d3092dd4a00c244cb8b27ffc1e2756c1793a20be56bb5d3887679f",
      "kind": "transparent"
    },
    {
      "address": "0x66E4FaFCAFb1c6eD6Ea16484e93080b6430CB961",
      "txHash": "0xcab9fccc819e6b517f1cf91e7d0946c733acded6d848599c0867001de5d2173e",
      "kind": "transparent"
    },
    {
      "address": "0xCb1833a8F23261F49e6397117220813Ce053c8BE",
      "txHash": "0x4bf5f553c7d63e0967c1f7e5e0406e743d3c0a73571cf4efee66f26c46760d99",
      "kind": "transparent"
    },
    {
      "address": "0x077CA05dE6D0035603F06233212f08513Bb54B63",
      "txHash": "0x70f84abad717d56ec8c1866220aaaacce3ea7ada795b432c60bee12d933f6ed7",
      "kind": "transparent"
    },
    {
      "address": "0x20b2C4d66f6b57f7888F3a8cA640E937c3473381",
      "txHash": "0xfc401f9396b773d82cd1bd7c2c607081dc084a6615f618557d50b47c7f52817f",
      "kind": "transparent"
    },
    {
      "address": "0xa4ec1237f746C79A31a6B59Cb88Bf0B88ba2eb01",
      "txHash": "0x95b3ede67fa9dab3d6efc14ae3ff6d8b3bdf1020f096992041381d74cc51678e",
      "kind": "transparent"
    },
    {
      "address": "0x751F0BEc8e20B1d2C4A3d10Bc0eD187fE6233bcf",
      "txHash": "0x5afd45d8b33ccb6bad4745986d083dca72e8fff71df33c02d54ade5d775226cc",
      "kind": "transparent"
    },
    {
      "address": "0x435A4D78F5A1273f3668Dd2A95D95EcAf2f22501",
      "txHash": "0x50832e260114356879c7dfbff7cedfecc89c41ef97f1fc5e9ef5214eab1554f5",
      "kind": "transparent"
    },
    {
      "address": "0xa3dB692b3069735c2764cb487A7a96075A8feE36",
      "txHash": "0xe8bbabc7a009f888b8ab3315b11988e54bc6e807cf8f41dbef0e82fb5d8f24b0",
      "kind": "transparent"
    },
    {
      "address": "0x3157Ad216fe313988B20C6fFf94E3ec39D234a13",
      "txHash": "0x831ad8dcf7df05253c8f8def0f5f1031e2549ed01b036c84d1c77431497f465d",
      "kind": "transparent"
    },
    {
      "address": "0x72f6aA308945Bb2B4e853965b0a92A35c16Dd490",
      "txHash": "0x1ab5413c898c8befa2807ae2f19be349d5d3948c07f88d424699f95dd151fa8e",
      "kind": "transparent"
    },
    {
      "address": "0xEbd1EE04c0572FD63785088D7076b8379a3DdA32",
      "txHash": "0x6c1cc36ac39ffdff0ead43eda9ae920116ffb10b76cdee76a4bcd99161964f04",
      "kind": "transparent"
    },
    {
      "address": "0xa1f6Aa70c8d5F6A59D6a91B2e62CbE6Fb2619645",
      "txHash": "0x4f6dd5720f56e4db814329e53c94c1b6dafee9b93c137aad343f9010b67ccba7",
      "kind": "transparent"
    },
    {
      "address": "0x17727de53F8346f6D894F501B7cED0055cB236b7",
      "txHash": "0xd600b672372cebfc565bcb480992e3d258e599d71ec30dcbbd212360d817e6b7",
      "kind": "transparent"
    },
    {
      "address": "0x0f95566022C7E05cCE1Ae21fA44C1B45c48e9559",
      "txHash": "0x00acc0331306efab22430641d9805720ce0d57205842860e625ca4640949c32c",
      "kind": "transparent"
    },
    {
      "address": "0xc768688eC0a5e75Cb944738bD6892E6CdB2667e5",
      "txHash": "0x6691950a8fb7244729b7231e0c9ac5d4f6de63d84b7e17a9535c70597e28d444",
      "kind": "transparent"
    },
    {
      "address": "0xB3D5a2Bd86428d02c8563BA3D79aB1E3df1526e6",
      "txHash": "0xa60302bda3c18a83d3b911a012f226d906e55dd890b68557b785c4ae82030fd9",
      "kind": "transparent"
    },
    {
      "address": "0x2f57e5e0D01a919eb9e838DA7BAcd22405c7412f",
      "txHash": "0x0688f690105f66d3f869330e72d083d893f42b1575898d6af215f8e6b452cba8",
      "kind": "transparent"
    },
    {
      "address": "0x607aA1920734a557ccb3306b6A8D0Aa51c215f83",
      "txHash": "0x01df640201d12328ed155aae9a53221c63a5c436de4c5724bedabc7979ff539a",
      "kind": "transparent"
    },
    {
      "address": "0x93af6fd48121b87310B9Dd88262158aEB8e4F308",
      "txHash": "0xf4ddfe7e391d4b9e76351b04685a5052b193f8843d5d3a6c75435f215f008076",
      "kind": "transparent"
    },
    {
      "address": "0x96Be4a9a895af9584DcD23f32cf271D895B2696D",
      "txHash": "0xb3708d1dd31b683448def49aaaa6e26daec34bd8e611c80f1b2250a87754b506",
      "kind": "transparent"
    },
    {
      "address": "0x2Ab3AC0bD819552066edE766B262beeD5F0eb7bf",
      "txHash": "0x9aff2a0a4e78364f9502cac86265ebac0198c84287cfe1451b812a8da9aff8b3",
      "kind": "transparent"
    },
    {
      "address": "0x515e5C6f7da51793c1Ec2C21516033Ef2DDA3d51",
      "txHash": "0x4c8d7e1ad4ea92de6ae6f8dc7fb15c1ac6d32c64b5d36e7d7f24aaffa8ee07a6",
      "kind": "transparent"
    },
    {
      "address": "0x87CB2fbA726e3dA7f9DD98EbBEd8C9a2C69f7019",
      "txHash": "0xeea910cb706984068d4e2ce0dcb1ecc0c039f7f93eae097e38d8e32f6cf7b6d2",
      "kind": "transparent"
    },
    {
      "address": "0x9D3C49bD9A27F299cB2435eBE86114b7D63c71Dd",
      "txHash": "0x417d4145b7851bb3d5333f36485f3ea1a9af652c4e888f7f8ceddefc65b4a2ce",
      "kind": "transparent"
    },
    {
      "address": "0xd6aC69d8d7d3EdB143CBaaC12C15A563D4A4475C",
      "txHash": "0x84e445587ecabe8944ebdeb000742798575ff7b34a15c6302c9bda3fb46fa1af",
      "kind": "transparent"
    },
    {
      "address": "0xe8eF008B39bec181ab8EFA82365A950Fa0733fF5",
      "txHash": "0x7fc34dd20faa8b7e72f699855c49d98f92f706b66bfe5cd73725a7e365756e32",
      "kind": "transparent"
    },
    {
      "address": "0xc85F991f07B51A8100464F3932FFf7F265D4c16A",
      "txHash": "0x2f7a67c9257ff9392300ac0dc71e8c9e9227ebb16aaa851cb035c704a0d6349f",
      "kind": "transparent"
    },
    {
      "address": "0xFB7Cac6Eb99399d78D615cbde79782f573C78E9C",
      "txHash": "0xacf2014f3f11ff3cd3eb746175328dc576888ad820900dd785cd72e667a9882e",
      "kind": "transparent"
    },
    {
      "address": "0x736fEdA8eaDdAa2d7e61670d8026F8b7F59028e5",
      "txHash": "0xf4b7927e828c55904585ba49479f86a8bbf8db8f7b6058778eb949a909592e99",
      "kind": "transparent"
    },
    {
      "address": "0x14d6cA98069141DB56eF8751a5E9Ba5A7C31C74C",
      "txHash": "0x0dbaff0786606206dfe92d5fcc3c18e4942764302dfc6d3adee13f9bc225b695",
      "kind": "transparent"
    }
  ],
  "impls": {
    "c37a77bb7dc5c72992cdfe8be6ce145cf3f58ae88d5b3ec81c370b4bad02e157": {
      "address": "0x6bd18B2fcbD8b5dd3a475D2EA59b6A4bdFeeDb78",
      "txHash": "0x6bed13e1986370c767644368046e8db3175fa73d96f47d965fb025b784f1daf8",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:44"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:31"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\introspection\\ERC165Upgradeable.sol:36"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:25"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:28"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_owners",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:31"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:34"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenApprovals",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:37"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_operatorApprovals",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:40"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)44_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:431"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_ownedTokens",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721EnumerableUpgradeable.sol:25"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_ownedTokensIndex",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721EnumerableUpgradeable.sol:28"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_allTokens",
            "type": "t_array(t_uint256)dyn_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721EnumerableUpgradeable.sol:31"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_allTokensIndex",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721EnumerableUpgradeable.sol:34"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)46_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721EnumerableUpgradeable.sol:172"
          },
          {
            "contract": "Profile",
            "label": "bio",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "src": "contracts\\Apes.sol:18"
          },
          {
            "contract": "Profile",
            "label": "_tokenName",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "src": "contracts\\Apes.sol:21"
          },
          {
            "contract": "Profile",
            "label": "_nameReserved",
            "type": "t_mapping(t_string_memory_ptr,t_bool)",
            "src": "contracts\\Apes.sol:24"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:82"
          },
          {
            "contract": "ApesNFT",
            "label": "START_ID_BY_TYPE",
            "type": "t_array(t_uint256)dyn_storage",
            "src": "contracts\\Apes.sol:164"
          },
          {
            "contract": "ApesNFT",
            "label": "MAX_SUPPLY_BY_TYPE",
            "type": "t_array(t_uint256)dyn_storage",
            "src": "contracts\\Apes.sol:165"
          },
          {
            "contract": "ApesNFT",
            "label": "totalSupplyByType",
            "type": "t_array(t_uint256)dyn_storage",
            "src": "contracts\\Apes.sol:166"
          },
          {
            "contract": "ApesNFT",
            "label": "claimForFree",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts\\Apes.sol:170"
          },
          {
            "contract": "ApesNFT",
            "label": "totalSupplyForFree",
            "type": "t_uint256",
            "src": "contracts\\Apes.sol:171"
          },
          {
            "contract": "ApesNFT",
            "label": "royaltyReceiver",
            "type": "t_address",
            "src": "contracts\\Apes.sol:173"
          },
          {
            "contract": "ApesNFT",
            "label": "royaltyPercent",
            "type": "t_uint256",
            "src": "contracts\\Apes.sol:174"
          },
          {
            "contract": "ApesNFT",
            "label": "DENOMINATOR",
            "type": "t_uint256",
            "src": "contracts\\Apes.sol:175"
          },
          {
            "contract": "ApesNFT",
            "label": "bMintAvailable",
            "type": "t_bool",
            "src": "contracts\\Apes.sol:177"
          },
          {
            "contract": "ApesNFT",
            "label": "bStakingAvailable",
            "type": "t_bool",
            "src": "contracts\\Apes.sol:178"
          },
          {
            "contract": "ApesNFT",
            "label": "bBreedingAvailable",
            "type": "t_bool",
            "src": "contracts\\Apes.sol:179"
          },
          {
            "contract": "ApesNFT",
            "label": "apes",
            "type": "t_mapping(t_uint256,t_struct(ApesInfo)2632_storage)",
            "src": "contracts\\Apes.sol:181"
          },
          {
            "contract": "ApesNFT",
            "label": "_baseTokenURI",
            "type": "t_string_storage",
            "src": "contracts\\Apes.sol:183"
          },
          {
            "contract": "ApesNFT",
            "label": "_utilityToken",
            "type": "t_contract(IUtilityToken)2603",
            "src": "contracts\\Apes.sol:185"
          },
          {
            "contract": "ApesNFT",
            "label": "_pool",
            "type": "t_contract(IStakingPool)2618",
            "src": "contracts\\Apes.sol:186"
          }
        ],
        "types": {
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_address": {
            "label": "address"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_uint256,t_struct(ApesInfo)2632_storage)": {
            "label": "mapping(uint256 => struct ApesNFT.ApesInfo)"
          },
          "t_struct(ApesInfo)2632_storage": {
            "label": "struct ApesNFT.ApesInfo",
            "members": [
              {
                "label": "aType",
                "type": "t_enum(ApesType)2626"
              },
              {
                "label": "bStaked",
                "type": "t_bool"
              }
            ]
          },
          "t_enum(ApesType)2626": {
            "label": "enum ApesNFT.ApesType",
            "members": [
              "M1",
              "M2",
              "M3"
            ]
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_contract(IUtilityToken)2603": {
            "label": "contract IUtilityToken"
          },
          "t_contract(IStakingPool)2618": {
            "label": "contract IStakingPool"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)"
          },
          "t_mapping(t_string_memory_ptr,t_bool)": {
            "label": "mapping(string => bool)"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_array(t_uint256)46_storage": {
            "label": "uint256[46]"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "bf1ae001b986709be6237763ca248bc7c6c03e8641b74887c80dff136748548f": {
      "address": "0x4fA4B18e4709AF80AFb39171bE07Cec76944701E",
      "txHash": "0xa6b54167cc9dc2c160185805e31de1c858ebc29a5ff8097bedba773b7db55e36",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:44"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:31"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\introspection\\ERC165Upgradeable.sol:36"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:25"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:28"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_owners",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:31"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:34"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenApprovals",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:37"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_operatorApprovals",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:40"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)44_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:431"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_ownedTokens",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721EnumerableUpgradeable.sol:25"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_ownedTokensIndex",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721EnumerableUpgradeable.sol:28"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_allTokens",
            "type": "t_array(t_uint256)dyn_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721EnumerableUpgradeable.sol:31"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_allTokensIndex",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721EnumerableUpgradeable.sol:34"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)46_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721EnumerableUpgradeable.sol:172"
          },
          {
            "contract": "Profile",
            "label": "bio",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "src": "contracts\\Apes.sol:18"
          },
          {
            "contract": "Profile",
            "label": "_tokenName",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "src": "contracts\\Apes.sol:21"
          },
          {
            "contract": "Profile",
            "label": "_nameReserved",
            "type": "t_mapping(t_string_memory_ptr,t_bool)",
            "src": "contracts\\Apes.sol:24"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:82"
          },
          {
            "contract": "ApesNFT",
            "label": "START_ID_BY_TYPE",
            "type": "t_array(t_uint256)dyn_storage",
            "src": "contracts\\Apes.sol:164"
          },
          {
            "contract": "ApesNFT",
            "label": "MAX_SUPPLY_BY_TYPE",
            "type": "t_array(t_uint256)dyn_storage",
            "src": "contracts\\Apes.sol:165"
          },
          {
            "contract": "ApesNFT",
            "label": "totalSupplyByType",
            "type": "t_array(t_uint256)dyn_storage",
            "src": "contracts\\Apes.sol:166"
          },
          {
            "contract": "ApesNFT",
            "label": "claimForFree",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts\\Apes.sol:170"
          },
          {
            "contract": "ApesNFT",
            "label": "totalSupplyForFree",
            "type": "t_uint256",
            "src": "contracts\\Apes.sol:171"
          },
          {
            "contract": "ApesNFT",
            "label": "royaltyReceiver",
            "type": "t_address",
            "src": "contracts\\Apes.sol:173"
          },
          {
            "contract": "ApesNFT",
            "label": "royaltyPercent",
            "type": "t_uint256",
            "src": "contracts\\Apes.sol:174"
          },
          {
            "contract": "ApesNFT",
            "label": "DENOMINATOR",
            "type": "t_uint256",
            "src": "contracts\\Apes.sol:175"
          },
          {
            "contract": "ApesNFT",
            "label": "bMintAvailable",
            "type": "t_bool",
            "src": "contracts\\Apes.sol:177"
          },
          {
            "contract": "ApesNFT",
            "label": "bStakingAvailable",
            "type": "t_bool",
            "src": "contracts\\Apes.sol:178"
          },
          {
            "contract": "ApesNFT",
            "label": "bBreedingAvailable",
            "type": "t_bool",
            "src": "contracts\\Apes.sol:179"
          },
          {
            "contract": "ApesNFT",
            "label": "apes",
            "type": "t_mapping(t_uint256,t_struct(ApesInfo)2632_storage)",
            "src": "contracts\\Apes.sol:181"
          },
          {
            "contract": "ApesNFT",
            "label": "_baseTokenURI",
            "type": "t_string_storage",
            "src": "contracts\\Apes.sol:183"
          },
          {
            "contract": "ApesNFT",
            "label": "_utilityToken",
            "type": "t_contract(IUtilityToken)2603",
            "src": "contracts\\Apes.sol:185"
          },
          {
            "contract": "ApesNFT",
            "label": "_pool",
            "type": "t_contract(IStakingPool)2618",
            "src": "contracts\\Apes.sol:186"
          }
        ],
        "types": {
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_address": {
            "label": "address"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_uint256,t_struct(ApesInfo)2632_storage)": {
            "label": "mapping(uint256 => struct ApesNFT.ApesInfo)"
          },
          "t_struct(ApesInfo)2632_storage": {
            "label": "struct ApesNFT.ApesInfo",
            "members": [
              {
                "label": "aType",
                "type": "t_enum(ApesType)2626"
              },
              {
                "label": "bStaked",
                "type": "t_bool"
              }
            ]
          },
          "t_enum(ApesType)2626": {
            "label": "enum ApesNFT.ApesType",
            "members": [
              "M1",
              "M2",
              "M3"
            ]
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_contract(IUtilityToken)2603": {
            "label": "contract IUtilityToken"
          },
          "t_contract(IStakingPool)2618": {
            "label": "contract IStakingPool"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)"
          },
          "t_mapping(t_string_memory_ptr,t_bool)": {
            "label": "mapping(string => bool)"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_array(t_uint256)46_storage": {
            "label": "uint256[46]"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "f60037d68c4660bb718c895d66a2cc00189eb96fce0085a6d15173495ee246f6": {
      "address": "0xFc4ed4126beFfD3eD08450cad01945154f3B0F90",
      "txHash": "0x86fbe96540f7483bb781ccc370273b03dfb0a9ddc7d52ec27bf8e22dae95c8eb",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:44"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:31"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\introspection\\ERC165Upgradeable.sol:36"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:25"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:28"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_owners",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:31"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:34"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenApprovals",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:37"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_operatorApprovals",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:40"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)44_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:431"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_ownedTokens",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721EnumerableUpgradeable.sol:25"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_ownedTokensIndex",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721EnumerableUpgradeable.sol:28"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_allTokens",
            "type": "t_array(t_uint256)dyn_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721EnumerableUpgradeable.sol:31"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_allTokensIndex",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721EnumerableUpgradeable.sol:34"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)46_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721EnumerableUpgradeable.sol:172"
          },
          {
            "contract": "Profile",
            "label": "bio",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "src": "contracts\\Apes.sol:19"
          },
          {
            "contract": "Profile",
            "label": "_tokenName",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "src": "contracts\\Apes.sol:22"
          },
          {
            "contract": "Profile",
            "label": "_nameReserved",
            "type": "t_mapping(t_string_memory_ptr,t_bool)",
            "src": "contracts\\Apes.sol:25"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:82"
          },
          {
            "contract": "ApesNFT",
            "label": "START_ID_BY_TYPE",
            "type": "t_array(t_uint256)dyn_storage",
            "src": "contracts\\Apes.sol:167"
          },
          {
            "contract": "ApesNFT",
            "label": "MAX_SUPPLY_BY_TYPE",
            "type": "t_array(t_uint256)dyn_storage",
            "src": "contracts\\Apes.sol:168"
          },
          {
            "contract": "ApesNFT",
            "label": "totalSupplyByType",
            "type": "t_array(t_uint256)dyn_storage",
            "src": "contracts\\Apes.sol:169"
          },
          {
            "contract": "ApesNFT",
            "label": "claimForFree",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts\\Apes.sol:173"
          },
          {
            "contract": "ApesNFT",
            "label": "totalSupplyForFree",
            "type": "t_uint256",
            "src": "contracts\\Apes.sol:174"
          },
          {
            "contract": "ApesNFT",
            "label": "royaltyReceiver",
            "type": "t_address",
            "src": "contracts\\Apes.sol:176"
          },
          {
            "contract": "ApesNFT",
            "label": "royaltyPercent",
            "type": "t_uint256",
            "src": "contracts\\Apes.sol:177"
          },
          {
            "contract": "ApesNFT",
            "label": "DENOMINATOR",
            "type": "t_uint256",
            "src": "contracts\\Apes.sol:178"
          },
          {
            "contract": "ApesNFT",
            "label": "bMintAvailable",
            "type": "t_bool",
            "src": "contracts\\Apes.sol:180"
          },
          {
            "contract": "ApesNFT",
            "label": "bStakingAvailable",
            "type": "t_bool",
            "src": "contracts\\Apes.sol:181"
          },
          {
            "contract": "ApesNFT",
            "label": "bBreedingAvailable",
            "type": "t_bool",
            "src": "contracts\\Apes.sol:182"
          },
          {
            "contract": "ApesNFT",
            "label": "apes",
            "type": "t_mapping(t_uint256,t_struct(ApesInfo)2948_storage)",
            "src": "contracts\\Apes.sol:184"
          },
          {
            "contract": "ApesNFT",
            "label": "_baseTokenURI",
            "type": "t_string_storage",
            "src": "contracts\\Apes.sol:186"
          },
          {
            "contract": "ApesNFT",
            "label": "_utilityToken",
            "type": "t_contract(IUtilityToken)2916",
            "src": "contracts\\Apes.sol:188"
          },
          {
            "contract": "ApesNFT",
            "label": "_pool",
            "type": "t_contract(IStakingPool)2931",
            "src": "contracts\\Apes.sol:189"
          }
        ],
        "types": {
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_address": {
            "label": "address"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_uint256,t_struct(ApesInfo)2948_storage)": {
            "label": "mapping(uint256 => struct ApesNFT.ApesInfo)"
          },
          "t_struct(ApesInfo)2948_storage": {
            "label": "struct ApesNFT.ApesInfo",
            "members": [
              {
                "label": "aType",
                "type": "t_enum(ApesType)2942"
              },
              {
                "label": "bStaked",
                "type": "t_bool"
              }
            ]
          },
          "t_enum(ApesType)2942": {
            "label": "enum ApesNFT.ApesType",
            "members": [
              "M1",
              "M2",
              "M3"
            ]
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_contract(IUtilityToken)2916": {
            "label": "contract IUtilityToken"
          },
          "t_contract(IStakingPool)2931": {
            "label": "contract IStakingPool"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)"
          },
          "t_mapping(t_string_memory_ptr,t_bool)": {
            "label": "mapping(string => bool)"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_array(t_uint256)46_storage": {
            "label": "uint256[46]"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "3344e9d839e7f39998377bfd04322c1cd4db3d57af1981bef4374dd753345d39": {
      "address": "0xf9bf4b2b79882E22C1a2aFAFfd942F6E88508153",
      "txHash": "0x972ff84b081d19b0d3ec4eff748aff14e978defe090c892bcd84e8d0da11187b",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:44"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:31"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\introspection\\ERC165Upgradeable.sol:36"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:25"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:28"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_owners",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:31"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:34"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenApprovals",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:37"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_operatorApprovals",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:40"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)44_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:431"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_ownedTokens",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721EnumerableUpgradeable.sol:25"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_ownedTokensIndex",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721EnumerableUpgradeable.sol:28"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_allTokens",
            "type": "t_array(t_uint256)dyn_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721EnumerableUpgradeable.sol:31"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_allTokensIndex",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721EnumerableUpgradeable.sol:34"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)46_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721EnumerableUpgradeable.sol:172"
          },
          {
            "contract": "Profile",
            "label": "bio",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "src": "contracts\\Apes.sol:19"
          },
          {
            "contract": "Profile",
            "label": "_tokenName",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "src": "contracts\\Apes.sol:22"
          },
          {
            "contract": "Profile",
            "label": "_nameReserved",
            "type": "t_mapping(t_string_memory_ptr,t_bool)",
            "src": "contracts\\Apes.sol:25"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:82"
          },
          {
            "contract": "ApesNFT",
            "label": "START_ID_BY_TYPE",
            "type": "t_array(t_uint256)dyn_storage",
            "src": "contracts\\Apes.sol:167"
          },
          {
            "contract": "ApesNFT",
            "label": "MAX_SUPPLY_BY_TYPE",
            "type": "t_array(t_uint256)dyn_storage",
            "src": "contracts\\Apes.sol:168"
          },
          {
            "contract": "ApesNFT",
            "label": "totalSupplyByType",
            "type": "t_array(t_uint256)dyn_storage",
            "src": "contracts\\Apes.sol:169"
          },
          {
            "contract": "ApesNFT",
            "label": "claimForFree",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts\\Apes.sol:173"
          },
          {
            "contract": "ApesNFT",
            "label": "totalSupplyForFree",
            "type": "t_uint256",
            "src": "contracts\\Apes.sol:174"
          },
          {
            "contract": "ApesNFT",
            "label": "royaltyReceiver",
            "type": "t_address",
            "src": "contracts\\Apes.sol:176"
          },
          {
            "contract": "ApesNFT",
            "label": "royaltyPercent",
            "type": "t_uint256",
            "src": "contracts\\Apes.sol:177"
          },
          {
            "contract": "ApesNFT",
            "label": "DENOMINATOR",
            "type": "t_uint256",
            "src": "contracts\\Apes.sol:178"
          },
          {
            "contract": "ApesNFT",
            "label": "bMintAvailable",
            "type": "t_bool",
            "src": "contracts\\Apes.sol:180"
          },
          {
            "contract": "ApesNFT",
            "label": "bStakingAvailable",
            "type": "t_bool",
            "src": "contracts\\Apes.sol:181"
          },
          {
            "contract": "ApesNFT",
            "label": "bBreedingAvailable",
            "type": "t_bool",
            "src": "contracts\\Apes.sol:182"
          },
          {
            "contract": "ApesNFT",
            "label": "apes",
            "type": "t_mapping(t_uint256,t_struct(ApesInfo)2948_storage)",
            "src": "contracts\\Apes.sol:184"
          },
          {
            "contract": "ApesNFT",
            "label": "_baseTokenURI",
            "type": "t_string_storage",
            "src": "contracts\\Apes.sol:186"
          },
          {
            "contract": "ApesNFT",
            "label": "_utilityToken",
            "type": "t_contract(IUtilityToken)2916",
            "src": "contracts\\Apes.sol:188"
          },
          {
            "contract": "ApesNFT",
            "label": "_pool",
            "type": "t_contract(IStakingPool)2931",
            "src": "contracts\\Apes.sol:189"
          }
        ],
        "types": {
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_address": {
            "label": "address"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_uint256,t_struct(ApesInfo)2948_storage)": {
            "label": "mapping(uint256 => struct ApesNFT.ApesInfo)"
          },
          "t_struct(ApesInfo)2948_storage": {
            "label": "struct ApesNFT.ApesInfo",
            "members": [
              {
                "label": "aType",
                "type": "t_enum(ApesType)2942"
              },
              {
                "label": "bStaked",
                "type": "t_bool"
              }
            ]
          },
          "t_enum(ApesType)2942": {
            "label": "enum ApesNFT.ApesType",
            "members": [
              "M1",
              "M2",
              "M3"
            ]
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_contract(IUtilityToken)2916": {
            "label": "contract IUtilityToken"
          },
          "t_contract(IStakingPool)2931": {
            "label": "contract IStakingPool"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)"
          },
          "t_mapping(t_string_memory_ptr,t_bool)": {
            "label": "mapping(string => bool)"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_array(t_uint256)46_storage": {
            "label": "uint256[46]"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "fde6f29af8dd46973a571ddb013465e3e6103f06f8e30f8aa186b4765e8f4a8e": {
      "address": "0x5CdAdDF9A81c36e864D5F2c8af0cF4c545cc5B8e",
      "txHash": "0x681e4d1068227b4892cffc82155165eac8597f11d804ad4ed04a7e18483c1517",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:44"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:31"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\introspection\\ERC165Upgradeable.sol:36"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:25"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:28"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_owners",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:31"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:34"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenApprovals",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:37"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_operatorApprovals",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:40"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)44_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:431"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_ownedTokens",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721EnumerableUpgradeable.sol:25"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_ownedTokensIndex",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721EnumerableUpgradeable.sol:28"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_allTokens",
            "type": "t_array(t_uint256)dyn_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721EnumerableUpgradeable.sol:31"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_allTokensIndex",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721EnumerableUpgradeable.sol:34"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)46_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721EnumerableUpgradeable.sol:172"
          },
          {
            "contract": "Profile",
            "label": "bio",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "src": "contracts\\Apes.sol:19"
          },
          {
            "contract": "Profile",
            "label": "_tokenName",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "src": "contracts\\Apes.sol:22"
          },
          {
            "contract": "Profile",
            "label": "_nameReserved",
            "type": "t_mapping(t_string_memory_ptr,t_bool)",
            "src": "contracts\\Apes.sol:25"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:82"
          },
          {
            "contract": "ApesNFT",
            "label": "START_ID_BY_TYPE",
            "type": "t_array(t_uint256)dyn_storage",
            "src": "contracts\\Apes.sol:167"
          },
          {
            "contract": "ApesNFT",
            "label": "MAX_SUPPLY_BY_TYPE",
            "type": "t_array(t_uint256)dyn_storage",
            "src": "contracts\\Apes.sol:168"
          },
          {
            "contract": "ApesNFT",
            "label": "totalSupplyByType",
            "type": "t_array(t_uint256)dyn_storage",
            "src": "contracts\\Apes.sol:169"
          },
          {
            "contract": "ApesNFT",
            "label": "claimForFree",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts\\Apes.sol:173"
          },
          {
            "contract": "ApesNFT",
            "label": "totalSupplyForFree",
            "type": "t_uint256",
            "src": "contracts\\Apes.sol:174"
          },
          {
            "contract": "ApesNFT",
            "label": "royaltyReceiver",
            "type": "t_address",
            "src": "contracts\\Apes.sol:176"
          },
          {
            "contract": "ApesNFT",
            "label": "royaltyPercent",
            "type": "t_uint256",
            "src": "contracts\\Apes.sol:177"
          },
          {
            "contract": "ApesNFT",
            "label": "DENOMINATOR",
            "type": "t_uint256",
            "src": "contracts\\Apes.sol:178"
          },
          {
            "contract": "ApesNFT",
            "label": "bMintAvailable",
            "type": "t_bool",
            "src": "contracts\\Apes.sol:180"
          },
          {
            "contract": "ApesNFT",
            "label": "bStakingAvailable",
            "type": "t_bool",
            "src": "contracts\\Apes.sol:181"
          },
          {
            "contract": "ApesNFT",
            "label": "bBreedingAvailable",
            "type": "t_bool",
            "src": "contracts\\Apes.sol:182"
          },
          {
            "contract": "ApesNFT",
            "label": "apes",
            "type": "t_mapping(t_uint256,t_struct(ApesInfo)2948_storage)",
            "src": "contracts\\Apes.sol:184"
          },
          {
            "contract": "ApesNFT",
            "label": "_baseTokenURI",
            "type": "t_string_storage",
            "src": "contracts\\Apes.sol:186"
          },
          {
            "contract": "ApesNFT",
            "label": "_utilityToken",
            "type": "t_contract(IUtilityToken)2916",
            "src": "contracts\\Apes.sol:188"
          },
          {
            "contract": "ApesNFT",
            "label": "_pool",
            "type": "t_contract(IStakingPool)2931",
            "src": "contracts\\Apes.sol:189"
          }
        ],
        "types": {
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_address": {
            "label": "address"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_uint256,t_struct(ApesInfo)2948_storage)": {
            "label": "mapping(uint256 => struct ApesNFT.ApesInfo)"
          },
          "t_struct(ApesInfo)2948_storage": {
            "label": "struct ApesNFT.ApesInfo",
            "members": [
              {
                "label": "aType",
                "type": "t_enum(ApesType)2942"
              },
              {
                "label": "bStaked",
                "type": "t_bool"
              }
            ]
          },
          "t_enum(ApesType)2942": {
            "label": "enum ApesNFT.ApesType",
            "members": [
              "M1",
              "M2",
              "M3"
            ]
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_contract(IUtilityToken)2916": {
            "label": "contract IUtilityToken"
          },
          "t_contract(IStakingPool)2931": {
            "label": "contract IStakingPool"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)"
          },
          "t_mapping(t_string_memory_ptr,t_bool)": {
            "label": "mapping(string => bool)"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_array(t_uint256)46_storage": {
            "label": "uint256[46]"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "8c9d8e418e7f87e97d08aea43de0b225357c27e6f75f4876b6855ed8d5b8bc09": {
      "address": "0x83C3fa8EfdE490A7D54f8eE927097fCCe4B9F7Ed",
      "txHash": "0xd8b5bc2c4cc4ff1359a59a88e6e746369e50f5732af7679212df0bd6b2cb0a49",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:44"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:31"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\introspection\\ERC165Upgradeable.sol:36"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:25"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:28"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_owners",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:31"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:34"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenApprovals",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:37"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_operatorApprovals",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:40"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)44_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:431"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_ownedTokens",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721EnumerableUpgradeable.sol:25"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_ownedTokensIndex",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721EnumerableUpgradeable.sol:28"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_allTokens",
            "type": "t_array(t_uint256)dyn_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721EnumerableUpgradeable.sol:31"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_allTokensIndex",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721EnumerableUpgradeable.sol:34"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)46_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721EnumerableUpgradeable.sol:172"
          },
          {
            "contract": "Profile",
            "label": "bio",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "src": "contracts\\Apes.sol:19"
          },
          {
            "contract": "Profile",
            "label": "_tokenName",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "src": "contracts\\Apes.sol:22"
          },
          {
            "contract": "Profile",
            "label": "_nameReserved",
            "type": "t_mapping(t_string_memory_ptr,t_bool)",
            "src": "contracts\\Apes.sol:25"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:82"
          },
          {
            "contract": "ApesNFT",
            "label": "START_ID_BY_TYPE",
            "type": "t_array(t_uint256)dyn_storage",
            "src": "contracts\\Apes.sol:167"
          },
          {
            "contract": "ApesNFT",
            "label": "MAX_SUPPLY_BY_TYPE",
            "type": "t_array(t_uint256)dyn_storage",
            "src": "contracts\\Apes.sol:168"
          },
          {
            "contract": "ApesNFT",
            "label": "totalSupplyByType",
            "type": "t_array(t_uint256)dyn_storage",
            "src": "contracts\\Apes.sol:169"
          },
          {
            "contract": "ApesNFT",
            "label": "claimForFree",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts\\Apes.sol:173"
          },
          {
            "contract": "ApesNFT",
            "label": "totalSupplyForFree",
            "type": "t_uint256",
            "src": "contracts\\Apes.sol:174"
          },
          {
            "contract": "ApesNFT",
            "label": "royaltyReceiver",
            "type": "t_address",
            "src": "contracts\\Apes.sol:176"
          },
          {
            "contract": "ApesNFT",
            "label": "royaltyPercent",
            "type": "t_uint256",
            "src": "contracts\\Apes.sol:177"
          },
          {
            "contract": "ApesNFT",
            "label": "DENOMINATOR",
            "type": "t_uint256",
            "src": "contracts\\Apes.sol:178"
          },
          {
            "contract": "ApesNFT",
            "label": "bMintAvailable",
            "type": "t_bool",
            "src": "contracts\\Apes.sol:180"
          },
          {
            "contract": "ApesNFT",
            "label": "bStakingAvailable",
            "type": "t_bool",
            "src": "contracts\\Apes.sol:181"
          },
          {
            "contract": "ApesNFT",
            "label": "bBreedingAvailable",
            "type": "t_bool",
            "src": "contracts\\Apes.sol:182"
          },
          {
            "contract": "ApesNFT",
            "label": "apes",
            "type": "t_mapping(t_uint256,t_struct(ApesInfo)2948_storage)",
            "src": "contracts\\Apes.sol:184"
          },
          {
            "contract": "ApesNFT",
            "label": "_baseTokenURI",
            "type": "t_string_storage",
            "src": "contracts\\Apes.sol:186"
          },
          {
            "contract": "ApesNFT",
            "label": "_utilityToken",
            "type": "t_contract(IUtilityToken)2916",
            "src": "contracts\\Apes.sol:188"
          },
          {
            "contract": "ApesNFT",
            "label": "_pool",
            "type": "t_contract(IStakingPool)2931",
            "src": "contracts\\Apes.sol:189"
          }
        ],
        "types": {
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_address": {
            "label": "address"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_uint256,t_struct(ApesInfo)2948_storage)": {
            "label": "mapping(uint256 => struct ApesNFT.ApesInfo)"
          },
          "t_struct(ApesInfo)2948_storage": {
            "label": "struct ApesNFT.ApesInfo",
            "members": [
              {
                "label": "aType",
                "type": "t_enum(ApesType)2942"
              },
              {
                "label": "bStaked",
                "type": "t_bool"
              }
            ]
          },
          "t_enum(ApesType)2942": {
            "label": "enum ApesNFT.ApesType",
            "members": [
              "M1",
              "M2",
              "M3"
            ]
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_contract(IUtilityToken)2916": {
            "label": "contract IUtilityToken"
          },
          "t_contract(IStakingPool)2931": {
            "label": "contract IStakingPool"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)"
          },
          "t_mapping(t_string_memory_ptr,t_bool)": {
            "label": "mapping(string => bool)"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_array(t_uint256)46_storage": {
            "label": "uint256[46]"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "89e7c467c66d68859c917412262e99cc5c6e1ec96c496e6622638613d5da6af4": {
      "address": "0x5a441d9c7c06007ec741a37E139827e21041300B",
      "txHash": "0x3f471de2b344c7e80cf0461641d9a692fb5b16172688273e8ba45721a1867b3d",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:44"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:31"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\introspection\\ERC165Upgradeable.sol:36"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:25"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:28"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_owners",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:31"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:34"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenApprovals",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:37"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_operatorApprovals",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:40"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)44_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:431"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_ownedTokens",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721EnumerableUpgradeable.sol:25"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_ownedTokensIndex",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721EnumerableUpgradeable.sol:28"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_allTokens",
            "type": "t_array(t_uint256)dyn_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721EnumerableUpgradeable.sol:31"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_allTokensIndex",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721EnumerableUpgradeable.sol:34"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)46_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721EnumerableUpgradeable.sol:172"
          },
          {
            "contract": "Profile",
            "label": "bio",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "src": "contracts\\Apes.sol:19"
          },
          {
            "contract": "Profile",
            "label": "_tokenName",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "src": "contracts\\Apes.sol:22"
          },
          {
            "contract": "Profile",
            "label": "_nameReserved",
            "type": "t_mapping(t_string_memory_ptr,t_bool)",
            "src": "contracts\\Apes.sol:25"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:82"
          },
          {
            "contract": "ApesNFT",
            "label": "START_ID_BY_TYPE",
            "type": "t_array(t_uint256)dyn_storage",
            "src": "contracts\\Apes.sol:167"
          },
          {
            "contract": "ApesNFT",
            "label": "MAX_SUPPLY_BY_TYPE",
            "type": "t_array(t_uint256)dyn_storage",
            "src": "contracts\\Apes.sol:168"
          },
          {
            "contract": "ApesNFT",
            "label": "totalSupplyByType",
            "type": "t_array(t_uint256)dyn_storage",
            "src": "contracts\\Apes.sol:169"
          },
          {
            "contract": "ApesNFT",
            "label": "claimForFree",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts\\Apes.sol:173"
          },
          {
            "contract": "ApesNFT",
            "label": "totalSupplyForFree",
            "type": "t_uint256",
            "src": "contracts\\Apes.sol:174"
          },
          {
            "contract": "ApesNFT",
            "label": "royaltyReceiver",
            "type": "t_address",
            "src": "contracts\\Apes.sol:176"
          },
          {
            "contract": "ApesNFT",
            "label": "royaltyPercent",
            "type": "t_uint256",
            "src": "contracts\\Apes.sol:177"
          },
          {
            "contract": "ApesNFT",
            "label": "DENOMINATOR",
            "type": "t_uint256",
            "src": "contracts\\Apes.sol:178"
          },
          {
            "contract": "ApesNFT",
            "label": "bMintAvailable",
            "type": "t_bool",
            "src": "contracts\\Apes.sol:180"
          },
          {
            "contract": "ApesNFT",
            "label": "bStakingAvailable",
            "type": "t_bool",
            "src": "contracts\\Apes.sol:181"
          },
          {
            "contract": "ApesNFT",
            "label": "bBreedingAvailable",
            "type": "t_bool",
            "src": "contracts\\Apes.sol:182"
          },
          {
            "contract": "ApesNFT",
            "label": "apes",
            "type": "t_mapping(t_uint256,t_struct(ApesInfo)2948_storage)",
            "src": "contracts\\Apes.sol:184"
          },
          {
            "contract": "ApesNFT",
            "label": "_baseTokenURI",
            "type": "t_string_storage",
            "src": "contracts\\Apes.sol:186"
          },
          {
            "contract": "ApesNFT",
            "label": "_utilityToken",
            "type": "t_contract(IUtilityToken)2916",
            "src": "contracts\\Apes.sol:188"
          },
          {
            "contract": "ApesNFT",
            "label": "_pool",
            "type": "t_contract(IStakingPool)2931",
            "src": "contracts\\Apes.sol:189"
          }
        ],
        "types": {
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_address": {
            "label": "address"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_uint256,t_struct(ApesInfo)2948_storage)": {
            "label": "mapping(uint256 => struct ApesNFT.ApesInfo)"
          },
          "t_struct(ApesInfo)2948_storage": {
            "label": "struct ApesNFT.ApesInfo",
            "members": [
              {
                "label": "aType",
                "type": "t_enum(ApesType)2942"
              },
              {
                "label": "bStaked",
                "type": "t_bool"
              }
            ]
          },
          "t_enum(ApesType)2942": {
            "label": "enum ApesNFT.ApesType",
            "members": [
              "M1",
              "M2",
              "M3"
            ]
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_contract(IUtilityToken)2916": {
            "label": "contract IUtilityToken"
          },
          "t_contract(IStakingPool)2931": {
            "label": "contract IStakingPool"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)"
          },
          "t_mapping(t_string_memory_ptr,t_bool)": {
            "label": "mapping(string => bool)"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_array(t_uint256)46_storage": {
            "label": "uint256[46]"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "7d2d09c34e65f9a36b6e9a3bff7bfce9aa5a6b78d8803644ba607e0fe821fd67": {
      "address": "0xA7D594a3E6186292F2EFcDE291A65FcceF2921a9",
      "txHash": "0x97625aa6ad6d97b2c01550220021610bf7f3859bf2e51752c82079c2fdf9cf6c",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:44"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:31"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\introspection\\ERC165Upgradeable.sol:36"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:25"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:28"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_owners",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:31"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:34"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenApprovals",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:37"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_operatorApprovals",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:40"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)44_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:431"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_ownedTokens",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721EnumerableUpgradeable.sol:25"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_ownedTokensIndex",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721EnumerableUpgradeable.sol:28"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_allTokens",
            "type": "t_array(t_uint256)dyn_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721EnumerableUpgradeable.sol:31"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_allTokensIndex",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721EnumerableUpgradeable.sol:34"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)46_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721EnumerableUpgradeable.sol:172"
          },
          {
            "contract": "Profile",
            "label": "bio",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "src": "contracts\\Apes.sol:19"
          },
          {
            "contract": "Profile",
            "label": "_tokenName",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "src": "contracts\\Apes.sol:22"
          },
          {
            "contract": "Profile",
            "label": "_nameReserved",
            "type": "t_mapping(t_string_memory_ptr,t_bool)",
            "src": "contracts\\Apes.sol:25"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:82"
          },
          {
            "contract": "ApesNFT",
            "label": "START_ID_BY_TYPE",
            "type": "t_array(t_uint256)dyn_storage",
            "src": "contracts\\Apes.sol:167"
          },
          {
            "contract": "ApesNFT",
            "label": "MAX_SUPPLY_BY_TYPE",
            "type": "t_array(t_uint256)dyn_storage",
            "src": "contracts\\Apes.sol:168"
          },
          {
            "contract": "ApesNFT",
            "label": "totalSupplyByType",
            "type": "t_array(t_uint256)dyn_storage",
            "src": "contracts\\Apes.sol:169"
          },
          {
            "contract": "ApesNFT",
            "label": "claimForFree",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts\\Apes.sol:173"
          },
          {
            "contract": "ApesNFT",
            "label": "totalSupplyForFree",
            "type": "t_uint256",
            "src": "contracts\\Apes.sol:174"
          },
          {
            "contract": "ApesNFT",
            "label": "royaltyReceiver",
            "type": "t_address",
            "src": "contracts\\Apes.sol:176"
          },
          {
            "contract": "ApesNFT",
            "label": "royaltyPercent",
            "type": "t_uint256",
            "src": "contracts\\Apes.sol:177"
          },
          {
            "contract": "ApesNFT",
            "label": "DENOMINATOR",
            "type": "t_uint256",
            "src": "contracts\\Apes.sol:178"
          },
          {
            "contract": "ApesNFT",
            "label": "bMintAvailable",
            "type": "t_bool",
            "src": "contracts\\Apes.sol:180"
          },
          {
            "contract": "ApesNFT",
            "label": "bStakingAvailable",
            "type": "t_bool",
            "src": "contracts\\Apes.sol:181"
          },
          {
            "contract": "ApesNFT",
            "label": "bBreedingAvailable",
            "type": "t_bool",
            "src": "contracts\\Apes.sol:182"
          },
          {
            "contract": "ApesNFT",
            "label": "apes",
            "type": "t_mapping(t_uint256,t_struct(ApesInfo)2948_storage)",
            "src": "contracts\\Apes.sol:184"
          },
          {
            "contract": "ApesNFT",
            "label": "_baseTokenURI",
            "type": "t_string_storage",
            "src": "contracts\\Apes.sol:186"
          },
          {
            "contract": "ApesNFT",
            "label": "_utilityToken",
            "type": "t_contract(IUtilityToken)2916",
            "src": "contracts\\Apes.sol:188"
          },
          {
            "contract": "ApesNFT",
            "label": "_pool",
            "type": "t_contract(IStakingPool)2931",
            "src": "contracts\\Apes.sol:189"
          }
        ],
        "types": {
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_address": {
            "label": "address"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_uint256,t_struct(ApesInfo)2948_storage)": {
            "label": "mapping(uint256 => struct ApesNFT.ApesInfo)"
          },
          "t_struct(ApesInfo)2948_storage": {
            "label": "struct ApesNFT.ApesInfo",
            "members": [
              {
                "label": "aType",
                "type": "t_enum(ApesType)2942"
              },
              {
                "label": "bStaked",
                "type": "t_bool"
              }
            ]
          },
          "t_enum(ApesType)2942": {
            "label": "enum ApesNFT.ApesType",
            "members": [
              "M1",
              "M2",
              "M3"
            ]
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_contract(IUtilityToken)2916": {
            "label": "contract IUtilityToken"
          },
          "t_contract(IStakingPool)2931": {
            "label": "contract IStakingPool"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)"
          },
          "t_mapping(t_string_memory_ptr,t_bool)": {
            "label": "mapping(string => bool)"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_array(t_uint256)46_storage": {
            "label": "uint256[46]"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "e67068fd9259f02d05f64436c3ffb3350996c2bebbc1d8bf507c029866d6152b": {
      "address": "0xE4d281F5388c7e3DcA919c73308a26f894034646",
      "txHash": "0xa41698241371c2abbb725bb8252e524fc91dce5417e9bc502e2811b0143aecbd",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:44"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:31"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\introspection\\ERC165Upgradeable.sol:36"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:25"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:28"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_owners",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:31"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:34"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenApprovals",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:37"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_operatorApprovals",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:40"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)44_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:431"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_ownedTokens",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721EnumerableUpgradeable.sol:25"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_ownedTokensIndex",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721EnumerableUpgradeable.sol:28"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_allTokens",
            "type": "t_array(t_uint256)dyn_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721EnumerableUpgradeable.sol:31"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_allTokensIndex",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721EnumerableUpgradeable.sol:34"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)46_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721EnumerableUpgradeable.sol:172"
          },
          {
            "contract": "Profile",
            "label": "bio",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "src": "contracts\\Apes.sol:19"
          },
          {
            "contract": "Profile",
            "label": "_tokenName",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "src": "contracts\\Apes.sol:22"
          },
          {
            "contract": "Profile",
            "label": "_nameReserved",
            "type": "t_mapping(t_string_memory_ptr,t_bool)",
            "src": "contracts\\Apes.sol:25"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:82"
          },
          {
            "contract": "ApesNFT",
            "label": "START_ID_BY_TYPE",
            "type": "t_array(t_uint256)dyn_storage",
            "src": "contracts\\Apes.sol:167"
          },
          {
            "contract": "ApesNFT",
            "label": "MAX_SUPPLY_BY_TYPE",
            "type": "t_array(t_uint256)dyn_storage",
            "src": "contracts\\Apes.sol:168"
          },
          {
            "contract": "ApesNFT",
            "label": "totalSupplyByType",
            "type": "t_array(t_uint256)dyn_storage",
            "src": "contracts\\Apes.sol:169"
          },
          {
            "contract": "ApesNFT",
            "label": "claimForFree",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts\\Apes.sol:173"
          },
          {
            "contract": "ApesNFT",
            "label": "totalSupplyForFree",
            "type": "t_uint256",
            "src": "contracts\\Apes.sol:174"
          },
          {
            "contract": "ApesNFT",
            "label": "royaltyReceiver",
            "type": "t_address",
            "src": "contracts\\Apes.sol:176"
          },
          {
            "contract": "ApesNFT",
            "label": "royaltyPercent",
            "type": "t_uint256",
            "src": "contracts\\Apes.sol:177"
          },
          {
            "contract": "ApesNFT",
            "label": "DENOMINATOR",
            "type": "t_uint256",
            "src": "contracts\\Apes.sol:178"
          },
          {
            "contract": "ApesNFT",
            "label": "bMintAvailable",
            "type": "t_bool",
            "src": "contracts\\Apes.sol:180"
          },
          {
            "contract": "ApesNFT",
            "label": "bStakingAvailable",
            "type": "t_bool",
            "src": "contracts\\Apes.sol:181"
          },
          {
            "contract": "ApesNFT",
            "label": "bBreedingAvailable",
            "type": "t_bool",
            "src": "contracts\\Apes.sol:182"
          },
          {
            "contract": "ApesNFT",
            "label": "apes",
            "type": "t_mapping(t_uint256,t_struct(ApesInfo)2948_storage)",
            "src": "contracts\\Apes.sol:184"
          },
          {
            "contract": "ApesNFT",
            "label": "_baseTokenURI",
            "type": "t_string_storage",
            "src": "contracts\\Apes.sol:186"
          },
          {
            "contract": "ApesNFT",
            "label": "_utilityToken",
            "type": "t_contract(IUtilityToken)2916",
            "src": "contracts\\Apes.sol:188"
          },
          {
            "contract": "ApesNFT",
            "label": "_pool",
            "type": "t_contract(IStakingPool)2931",
            "src": "contracts\\Apes.sol:189"
          }
        ],
        "types": {
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_address": {
            "label": "address"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_uint256,t_struct(ApesInfo)2948_storage)": {
            "label": "mapping(uint256 => struct ApesNFT.ApesInfo)"
          },
          "t_struct(ApesInfo)2948_storage": {
            "label": "struct ApesNFT.ApesInfo",
            "members": [
              {
                "label": "aType",
                "type": "t_enum(ApesType)2942"
              },
              {
                "label": "bStaked",
                "type": "t_bool"
              }
            ]
          },
          "t_enum(ApesType)2942": {
            "label": "enum ApesNFT.ApesType",
            "members": [
              "M1",
              "M2",
              "M3"
            ]
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_contract(IUtilityToken)2916": {
            "label": "contract IUtilityToken"
          },
          "t_contract(IStakingPool)2931": {
            "label": "contract IStakingPool"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)"
          },
          "t_mapping(t_string_memory_ptr,t_bool)": {
            "label": "mapping(string => bool)"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_array(t_uint256)46_storage": {
            "label": "uint256[46]"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "59766b9e2549ef09f498bd9350e14d0ad68ffe48c3bc8428e2bd3679c2d55692": {
      "address": "0x89897016967F80A5c9690F0c481C6a2Da2d70061",
      "txHash": "0xf0e2406e94e5eca822c49810fd2bb43388e1e987e3627ccec20f5d32571195de",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:44"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:31"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\introspection\\ERC165Upgradeable.sol:36"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:25"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:28"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_owners",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:31"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:34"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenApprovals",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:37"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_operatorApprovals",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:40"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)44_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:431"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_ownedTokens",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721EnumerableUpgradeable.sol:25"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_ownedTokensIndex",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721EnumerableUpgradeable.sol:28"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_allTokens",
            "type": "t_array(t_uint256)dyn_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721EnumerableUpgradeable.sol:31"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_allTokensIndex",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721EnumerableUpgradeable.sol:34"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)46_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721EnumerableUpgradeable.sol:172"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:82"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "_status",
            "type": "t_uint256",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\ReentrancyGuardUpgradeable.sol:68"
          },
          {
            "contract": "MintdropzERC721V3",
            "label": "MINTDROPZ_PROVENANCE",
            "type": "t_string_storage",
            "src": "contracts\\MintdropzERC721V3.sol:19"
          },
          {
            "contract": "MintdropzERC721V3",
            "label": "LICENSE_TEXT",
            "type": "t_string_storage",
            "src": "contracts\\MintdropzERC721V3.sol:20"
          },
          {
            "contract": "MintdropzERC721V3",
            "label": "licenseLocked",
            "type": "t_bool",
            "src": "contracts\\MintdropzERC721V3.sol:22"
          },
          {
            "contract": "MintdropzERC721V3",
            "label": "maxMintdropzPurchase",
            "type": "t_uint256",
            "src": "contracts\\MintdropzERC721V3.sol:24"
          },
          {
            "contract": "MintdropzERC721V3",
            "label": "MAX_MINTDROPZ",
            "type": "t_uint256",
            "src": "contracts\\MintdropzERC721V3.sol:25"
          },
          {
            "contract": "MintdropzERC721V3",
            "label": "mintdropzPrice",
            "type": "t_uint256",
            "src": "contracts\\MintdropzERC721V3.sol:26"
          },
          {
            "contract": "MintdropzERC721V3",
            "label": "royaltyReceiver",
            "type": "t_address",
            "src": "contracts\\MintdropzERC721V3.sol:28"
          },
          {
            "contract": "MintdropzERC721V3",
            "label": "royaltyPercent",
            "type": "t_uint256",
            "src": "contracts\\MintdropzERC721V3.sol:29"
          },
          {
            "contract": "MintdropzERC721V3",
            "label": "DENOMINATOR",
            "type": "t_uint256",
            "src": "contracts\\MintdropzERC721V3.sol:30"
          },
          {
            "contract": "MintdropzERC721V3",
            "label": "saleIsActive",
            "type": "t_bool",
            "src": "contracts\\MintdropzERC721V3.sol:32"
          },
          {
            "contract": "MintdropzERC721V3",
            "label": "mintdropzNames",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "src": "contracts\\MintdropzERC721V3.sol:34"
          },
          {
            "contract": "MintdropzERC721V3",
            "label": "mintdropzReserve",
            "type": "t_uint256",
            "src": "contracts\\MintdropzERC721V3.sol:35"
          },
          {
            "contract": "MintdropzERC721V3",
            "label": "baseURI",
            "type": "t_string_storage",
            "src": "contracts\\MintdropzERC721V3.sol:38"
          },
          {
            "contract": "MintdropzERC721V3",
            "label": "merkleTreeRoot",
            "type": "t_bytes32",
            "src": "contracts\\MintdropzERC721V3.sol:41"
          },
          {
            "contract": "MintdropzERC721V3",
            "label": "freeMintAmount",
            "type": "t_uint256",
            "src": "contracts\\MintdropzERC721V3.sol:42"
          },
          {
            "contract": "MintdropzERC721V3",
            "label": "maxFreeMintCnt",
            "type": "t_uint256",
            "src": "contracts\\MintdropzERC721V3.sol:43"
          },
          {
            "contract": "MintdropzERC721V3",
            "label": "freeMintedCnt",
            "type": "t_uint256",
            "src": "contracts\\MintdropzERC721V3.sol:44"
          },
          {
            "contract": "MintdropzERC721V3",
            "label": "claimFreeCnt",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts\\MintdropzERC721V3.sol:45"
          }
        ],
        "types": {
          "t_string_storage": {
            "label": "string"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_array(t_uint256)46_storage": {
            "label": "uint256[46]"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "082d4005fef04fc98877a8d8f853bec3e1d6f67bb56466bfab3c0d8d22eaa7b5": {
      "address": "0xD32d922fA3485D5634c976E83c512d5ea0843904",
      "txHash": "0x8421cc69239270cbb7137f547ed778ce4dd451874b897d0f3346ccc734476d77",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:44"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:31"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\introspection\\ERC165Upgradeable.sol:36"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:25"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:28"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_owners",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:31"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:34"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenApprovals",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:37"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_operatorApprovals",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:40"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)44_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:431"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_ownedTokens",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721EnumerableUpgradeable.sol:25"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_ownedTokensIndex",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721EnumerableUpgradeable.sol:28"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_allTokens",
            "type": "t_array(t_uint256)dyn_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721EnumerableUpgradeable.sol:31"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_allTokensIndex",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721EnumerableUpgradeable.sol:34"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)46_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721EnumerableUpgradeable.sol:172"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:82"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "_status",
            "type": "t_uint256",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\ReentrancyGuardUpgradeable.sol:68"
          },
          {
            "contract": "MintdropzERC721V3",
            "label": "MINTDROPZ_PROVENANCE",
            "type": "t_string_storage",
            "src": "contracts\\MintdropzERC721V3.sol:18"
          },
          {
            "contract": "MintdropzERC721V3",
            "label": "LICENSE_TEXT",
            "type": "t_string_storage",
            "src": "contracts\\MintdropzERC721V3.sol:19"
          },
          {
            "contract": "MintdropzERC721V3",
            "label": "licenseLocked",
            "type": "t_bool",
            "src": "contracts\\MintdropzERC721V3.sol:21"
          },
          {
            "contract": "MintdropzERC721V3",
            "label": "maxMintdropzPurchase",
            "type": "t_uint256",
            "src": "contracts\\MintdropzERC721V3.sol:23"
          },
          {
            "contract": "MintdropzERC721V3",
            "label": "MAX_MINTDROPZ",
            "type": "t_uint256",
            "src": "contracts\\MintdropzERC721V3.sol:24"
          },
          {
            "contract": "MintdropzERC721V3",
            "label": "mintdropzPrice",
            "type": "t_uint256",
            "src": "contracts\\MintdropzERC721V3.sol:25"
          },
          {
            "contract": "MintdropzERC721V3",
            "label": "royaltyReceiver",
            "type": "t_address",
            "src": "contracts\\MintdropzERC721V3.sol:27"
          },
          {
            "contract": "MintdropzERC721V3",
            "label": "royaltyPercent",
            "type": "t_uint256",
            "src": "contracts\\MintdropzERC721V3.sol:28"
          },
          {
            "contract": "MintdropzERC721V3",
            "label": "DENOMINATOR",
            "type": "t_uint256",
            "src": "contracts\\MintdropzERC721V3.sol:29"
          },
          {
            "contract": "MintdropzERC721V3",
            "label": "saleIsActive",
            "type": "t_bool",
            "src": "contracts\\MintdropzERC721V3.sol:31"
          },
          {
            "contract": "MintdropzERC721V3",
            "label": "mintdropzNames",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "src": "contracts\\MintdropzERC721V3.sol:33"
          },
          {
            "contract": "MintdropzERC721V3",
            "label": "mintdropzReserve",
            "type": "t_uint256",
            "src": "contracts\\MintdropzERC721V3.sol:34"
          },
          {
            "contract": "MintdropzERC721V3",
            "label": "baseURI",
            "type": "t_string_storage",
            "src": "contracts\\MintdropzERC721V3.sol:37"
          },
          {
            "contract": "MintdropzERC721V3",
            "label": "merkleTreeRoot",
            "type": "t_bytes32",
            "src": "contracts\\MintdropzERC721V3.sol:40"
          },
          {
            "contract": "MintdropzERC721V3",
            "label": "freeMintAmount",
            "type": "t_uint256",
            "src": "contracts\\MintdropzERC721V3.sol:41"
          },
          {
            "contract": "MintdropzERC721V3",
            "label": "maxFreeMintCnt",
            "type": "t_uint256",
            "src": "contracts\\MintdropzERC721V3.sol:42"
          },
          {
            "contract": "MintdropzERC721V3",
            "label": "freeMintedCnt",
            "type": "t_uint256",
            "src": "contracts\\MintdropzERC721V3.sol:43"
          },
          {
            "contract": "MintdropzERC721V3",
            "label": "claimFreeCnt",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts\\MintdropzERC721V3.sol:44"
          }
        ],
        "types": {
          "t_string_storage": {
            "label": "string"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_array(t_uint256)46_storage": {
            "label": "uint256[46]"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "1a783b0d378324d392cae818d972f02fc09acab7950f5cd7a6dd21df82643746": {
      "address": "0x15c9Edc0099C4ABEf3A43cda0FCBe5B795Dea562",
      "txHash": "0xa2e4427380d039691673d5a736f4760441e583e19995741fdf4681738dd3f753",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:44"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:31"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\introspection\\ERC165Upgradeable.sol:36"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:25"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:28"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_owners",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:31"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:34"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenApprovals",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:37"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_operatorApprovals",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:40"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)44_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:431"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_ownedTokens",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721EnumerableUpgradeable.sol:25"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_ownedTokensIndex",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721EnumerableUpgradeable.sol:28"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_allTokens",
            "type": "t_array(t_uint256)dyn_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721EnumerableUpgradeable.sol:31"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_allTokensIndex",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721EnumerableUpgradeable.sol:34"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)46_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721EnumerableUpgradeable.sol:172"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:82"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "_status",
            "type": "t_uint256",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\ReentrancyGuardUpgradeable.sol:68"
          },
          {
            "contract": "MintdropzERC721V4",
            "label": "MINTDROPZ_PROVENANCE",
            "type": "t_string_storage",
            "src": "contracts\\MintdropzERC721V4.sol:18"
          },
          {
            "contract": "MintdropzERC721V4",
            "label": "LICENSE_TEXT",
            "type": "t_string_storage",
            "src": "contracts\\MintdropzERC721V4.sol:19"
          },
          {
            "contract": "MintdropzERC721V4",
            "label": "licenseLocked",
            "type": "t_bool",
            "src": "contracts\\MintdropzERC721V4.sol:21"
          },
          {
            "contract": "MintdropzERC721V4",
            "label": "maxMintdropzPurchase",
            "type": "t_uint256",
            "src": "contracts\\MintdropzERC721V4.sol:23"
          },
          {
            "contract": "MintdropzERC721V4",
            "label": "MAX_MINTDROPZ",
            "type": "t_uint256",
            "src": "contracts\\MintdropzERC721V4.sol:24"
          },
          {
            "contract": "MintdropzERC721V4",
            "label": "mintdropzPrice",
            "type": "t_uint256",
            "src": "contracts\\MintdropzERC721V4.sol:25"
          },
          {
            "contract": "MintdropzERC721V4",
            "label": "royaltyReceiver",
            "type": "t_address",
            "src": "contracts\\MintdropzERC721V4.sol:27"
          },
          {
            "contract": "MintdropzERC721V4",
            "label": "royaltyPercent",
            "type": "t_uint256",
            "src": "contracts\\MintdropzERC721V4.sol:28"
          },
          {
            "contract": "MintdropzERC721V4",
            "label": "DENOMINATOR",
            "type": "t_uint256",
            "src": "contracts\\MintdropzERC721V4.sol:29"
          },
          {
            "contract": "MintdropzERC721V4",
            "label": "saleIsActive",
            "type": "t_bool",
            "src": "contracts\\MintdropzERC721V4.sol:31"
          },
          {
            "contract": "MintdropzERC721V4",
            "label": "mintdropzNames",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "src": "contracts\\MintdropzERC721V4.sol:33"
          },
          {
            "contract": "MintdropzERC721V4",
            "label": "mintdropzReserve",
            "type": "t_uint256",
            "src": "contracts\\MintdropzERC721V4.sol:34"
          },
          {
            "contract": "MintdropzERC721V4",
            "label": "baseURI",
            "type": "t_string_storage",
            "src": "contracts\\MintdropzERC721V4.sol:37"
          },
          {
            "contract": "MintdropzERC721V4",
            "label": "merkleTreeRoot",
            "type": "t_bytes32",
            "src": "contracts\\MintdropzERC721V4.sol:40"
          },
          {
            "contract": "MintdropzERC721V4",
            "label": "freeMintAmount",
            "type": "t_uint256",
            "src": "contracts\\MintdropzERC721V4.sol:41"
          },
          {
            "contract": "MintdropzERC721V4",
            "label": "maxFreeMintCnt",
            "type": "t_uint256",
            "src": "contracts\\MintdropzERC721V4.sol:42"
          },
          {
            "contract": "MintdropzERC721V4",
            "label": "claimFreeCnt",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts\\MintdropzERC721V4.sol:43"
          }
        ],
        "types": {
          "t_string_storage": {
            "label": "string"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_array(t_uint256)46_storage": {
            "label": "uint256[46]"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "112057171479280a82538dcfa24d820a38b3bd99543a2b5288230cccf8c38ad5": {
      "address": "0xba698e77905F3d45451F6b3fEd2503458aFd2c18",
      "txHash": "0xc7f06f9dd63d768e6fab1f1ca790e52f7337e324f684e12bcd7717e3a47e741b",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:44"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:31"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\introspection\\ERC165Upgradeable.sol:36"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:25"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:28"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_owners",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:31"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:34"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenApprovals",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:37"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_operatorApprovals",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:40"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)44_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:431"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_ownedTokens",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721EnumerableUpgradeable.sol:25"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_ownedTokensIndex",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721EnumerableUpgradeable.sol:28"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_allTokens",
            "type": "t_array(t_uint256)dyn_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721EnumerableUpgradeable.sol:31"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_allTokensIndex",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721EnumerableUpgradeable.sol:34"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)46_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721EnumerableUpgradeable.sol:172"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:82"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "_status",
            "type": "t_uint256",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\ReentrancyGuardUpgradeable.sol:68"
          },
          {
            "contract": "MintdropzERC721V4",
            "label": "MINTDROPZ_PROVENANCE",
            "type": "t_string_storage",
            "src": "contracts\\MintdropzERC721V4.sol:18"
          },
          {
            "contract": "MintdropzERC721V4",
            "label": "LICENSE_TEXT",
            "type": "t_string_storage",
            "src": "contracts\\MintdropzERC721V4.sol:19"
          },
          {
            "contract": "MintdropzERC721V4",
            "label": "licenseLocked",
            "type": "t_bool",
            "src": "contracts\\MintdropzERC721V4.sol:21"
          },
          {
            "contract": "MintdropzERC721V4",
            "label": "maxMintdropzPurchase",
            "type": "t_uint256",
            "src": "contracts\\MintdropzERC721V4.sol:23"
          },
          {
            "contract": "MintdropzERC721V4",
            "label": "MAX_MINTDROPZ",
            "type": "t_uint256",
            "src": "contracts\\MintdropzERC721V4.sol:24"
          },
          {
            "contract": "MintdropzERC721V4",
            "label": "mintdropzPrice",
            "type": "t_uint256",
            "src": "contracts\\MintdropzERC721V4.sol:25"
          },
          {
            "contract": "MintdropzERC721V4",
            "label": "royaltyReceiver",
            "type": "t_address",
            "src": "contracts\\MintdropzERC721V4.sol:27"
          },
          {
            "contract": "MintdropzERC721V4",
            "label": "royaltyPercent",
            "type": "t_uint256",
            "src": "contracts\\MintdropzERC721V4.sol:28"
          },
          {
            "contract": "MintdropzERC721V4",
            "label": "DENOMINATOR",
            "type": "t_uint256",
            "src": "contracts\\MintdropzERC721V4.sol:29"
          },
          {
            "contract": "MintdropzERC721V4",
            "label": "saleIsActive",
            "type": "t_bool",
            "src": "contracts\\MintdropzERC721V4.sol:31"
          },
          {
            "contract": "MintdropzERC721V4",
            "label": "mintdropzNames",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "src": "contracts\\MintdropzERC721V4.sol:33"
          },
          {
            "contract": "MintdropzERC721V4",
            "label": "mintdropzReserve",
            "type": "t_uint256",
            "src": "contracts\\MintdropzERC721V4.sol:34"
          },
          {
            "contract": "MintdropzERC721V4",
            "label": "baseURI",
            "type": "t_string_storage",
            "src": "contracts\\MintdropzERC721V4.sol:37"
          },
          {
            "contract": "MintdropzERC721V4",
            "label": "merkleTreeRoot",
            "type": "t_bytes32",
            "src": "contracts\\MintdropzERC721V4.sol:40"
          },
          {
            "contract": "MintdropzERC721V4",
            "label": "freeMintAmount",
            "type": "t_uint256",
            "src": "contracts\\MintdropzERC721V4.sol:41"
          },
          {
            "contract": "MintdropzERC721V4",
            "label": "maxFreeMintCnt",
            "type": "t_uint256",
            "src": "contracts\\MintdropzERC721V4.sol:42"
          },
          {
            "contract": "MintdropzERC721V4",
            "label": "claimFreeCnt",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts\\MintdropzERC721V4.sol:43"
          }
        ],
        "types": {
          "t_string_storage": {
            "label": "string"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_array(t_uint256)46_storage": {
            "label": "uint256[46]"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "54539cd0da245b417641077ba343e376089ee7ce94b903dc3b462efa1807e54b": {
      "address": "0xADce77846BFdb57BFADe99641b1866ee30D99d07",
      "txHash": "0x7ad1e3a105f3233534c7c74b406e160d1baf40ca62c7b36d91fa650f162296c1",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:44"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:31"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\introspection\\ERC165Upgradeable.sol:36"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:25"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:28"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_owners",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:31"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:34"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenApprovals",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:37"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_operatorApprovals",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:40"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)44_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:431"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_ownedTokens",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721EnumerableUpgradeable.sol:25"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_ownedTokensIndex",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721EnumerableUpgradeable.sol:28"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_allTokens",
            "type": "t_array(t_uint256)dyn_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721EnumerableUpgradeable.sol:31"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_allTokensIndex",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721EnumerableUpgradeable.sol:34"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)46_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721EnumerableUpgradeable.sol:172"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:82"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "_status",
            "type": "t_uint256",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\ReentrancyGuardUpgradeable.sol:68"
          },
          {
            "contract": "WealthyApesERC721",
            "label": "WEALTHYAPES_PROVENANCE",
            "type": "t_string_storage",
            "src": "contracts\\WealthyApesERC721.sol:18"
          },
          {
            "contract": "WealthyApesERC721",
            "label": "LICENSE_TEXT",
            "type": "t_string_storage",
            "src": "contracts\\WealthyApesERC721.sol:19"
          },
          {
            "contract": "WealthyApesERC721",
            "label": "licenseLocked",
            "type": "t_bool",
            "src": "contracts\\WealthyApesERC721.sol:21"
          },
          {
            "contract": "WealthyApesERC721",
            "label": "maxWealthyApesPurchase",
            "type": "t_uint256",
            "src": "contracts\\WealthyApesERC721.sol:23"
          },
          {
            "contract": "WealthyApesERC721",
            "label": "MAX_WEALTHYAPES",
            "type": "t_uint256",
            "src": "contracts\\WealthyApesERC721.sol:24"
          },
          {
            "contract": "WealthyApesERC721",
            "label": "wealthyApesPrice",
            "type": "t_uint256",
            "src": "contracts\\WealthyApesERC721.sol:25"
          },
          {
            "contract": "WealthyApesERC721",
            "label": "royaltyReceiver",
            "type": "t_address",
            "src": "contracts\\WealthyApesERC721.sol:27"
          },
          {
            "contract": "WealthyApesERC721",
            "label": "royaltyPercent",
            "type": "t_uint256",
            "src": "contracts\\WealthyApesERC721.sol:28"
          },
          {
            "contract": "WealthyApesERC721",
            "label": "DENOMINATOR",
            "type": "t_uint256",
            "src": "contracts\\WealthyApesERC721.sol:29"
          },
          {
            "contract": "WealthyApesERC721",
            "label": "saleIsActive",
            "type": "t_bool",
            "src": "contracts\\WealthyApesERC721.sol:31"
          },
          {
            "contract": "WealthyApesERC721",
            "label": "wealthyApesNames",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "src": "contracts\\WealthyApesERC721.sol:33"
          },
          {
            "contract": "WealthyApesERC721",
            "label": "wealthyApesReserve",
            "type": "t_uint256",
            "src": "contracts\\WealthyApesERC721.sol:34"
          },
          {
            "contract": "WealthyApesERC721",
            "label": "baseURI",
            "type": "t_string_storage",
            "src": "contracts\\WealthyApesERC721.sol:37"
          },
          {
            "contract": "WealthyApesERC721",
            "label": "merkleTreeRoot",
            "type": "t_bytes32",
            "src": "contracts\\WealthyApesERC721.sol:40"
          },
          {
            "contract": "WealthyApesERC721",
            "label": "freeMintAmount",
            "type": "t_uint256",
            "src": "contracts\\WealthyApesERC721.sol:41"
          },
          {
            "contract": "WealthyApesERC721",
            "label": "maxFreeMintCnt",
            "type": "t_uint256",
            "src": "contracts\\WealthyApesERC721.sol:42"
          },
          {
            "contract": "WealthyApesERC721",
            "label": "claimFreeCnt",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts\\WealthyApesERC721.sol:43"
          }
        ],
        "types": {
          "t_string_storage": {
            "label": "string"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_array(t_uint256)46_storage": {
            "label": "uint256[46]"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "55f02ddc8cd93468d637f210562e04fc1806b815ec6f44786b611363083e775d": {
      "address": "0x52024762D101C7dBd827ca491E9C65678A27F1b2",
      "txHash": "0x0efc7b2fa47a2c0a50dc32b837a56207814a51dc585adcfc5daf4d7fd65ec672",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:44"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:31"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\introspection\\ERC165Upgradeable.sol:36"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:25"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:28"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_owners",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:31"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:34"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenApprovals",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:37"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_operatorApprovals",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:40"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)44_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:431"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_ownedTokens",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721EnumerableUpgradeable.sol:25"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_ownedTokensIndex",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721EnumerableUpgradeable.sol:28"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_allTokens",
            "type": "t_array(t_uint256)dyn_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721EnumerableUpgradeable.sol:31"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_allTokensIndex",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721EnumerableUpgradeable.sol:34"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)46_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721EnumerableUpgradeable.sol:172"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:82"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "_status",
            "type": "t_uint256",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\ReentrancyGuardUpgradeable.sol:68"
          },
          {
            "contract": "WealthyApesERC721",
            "label": "WEALTHYAPES_PROVENANCE",
            "type": "t_string_storage",
            "src": "contracts\\WealthyApesERC721.sol:18"
          },
          {
            "contract": "WealthyApesERC721",
            "label": "LICENSE_TEXT",
            "type": "t_string_storage",
            "src": "contracts\\WealthyApesERC721.sol:19"
          },
          {
            "contract": "WealthyApesERC721",
            "label": "licenseLocked",
            "type": "t_bool",
            "src": "contracts\\WealthyApesERC721.sol:21"
          },
          {
            "contract": "WealthyApesERC721",
            "label": "maxWealthyApesPurchase",
            "type": "t_uint256",
            "src": "contracts\\WealthyApesERC721.sol:23"
          },
          {
            "contract": "WealthyApesERC721",
            "label": "MAX_WEALTHYAPES",
            "type": "t_uint256",
            "src": "contracts\\WealthyApesERC721.sol:24"
          },
          {
            "contract": "WealthyApesERC721",
            "label": "wealthyApesPrice",
            "type": "t_uint256",
            "src": "contracts\\WealthyApesERC721.sol:25"
          },
          {
            "contract": "WealthyApesERC721",
            "label": "royaltyReceiver",
            "type": "t_address",
            "src": "contracts\\WealthyApesERC721.sol:27"
          },
          {
            "contract": "WealthyApesERC721",
            "label": "royaltyPercent",
            "type": "t_uint256",
            "src": "contracts\\WealthyApesERC721.sol:28"
          },
          {
            "contract": "WealthyApesERC721",
            "label": "DENOMINATOR",
            "type": "t_uint256",
            "src": "contracts\\WealthyApesERC721.sol:29"
          },
          {
            "contract": "WealthyApesERC721",
            "label": "saleIsActive",
            "type": "t_bool",
            "src": "contracts\\WealthyApesERC721.sol:31"
          },
          {
            "contract": "WealthyApesERC721",
            "label": "wealthyApesNames",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "src": "contracts\\WealthyApesERC721.sol:33"
          },
          {
            "contract": "WealthyApesERC721",
            "label": "wealthyApesReserve",
            "type": "t_uint256",
            "src": "contracts\\WealthyApesERC721.sol:34"
          },
          {
            "contract": "WealthyApesERC721",
            "label": "baseURI",
            "type": "t_string_storage",
            "src": "contracts\\WealthyApesERC721.sol:37"
          },
          {
            "contract": "WealthyApesERC721",
            "label": "merkleTreeRoot",
            "type": "t_bytes32",
            "src": "contracts\\WealthyApesERC721.sol:40"
          },
          {
            "contract": "WealthyApesERC721",
            "label": "freeMintAmount",
            "type": "t_uint256",
            "src": "contracts\\WealthyApesERC721.sol:41"
          },
          {
            "contract": "WealthyApesERC721",
            "label": "maxFreeMintCnt",
            "type": "t_uint256",
            "src": "contracts\\WealthyApesERC721.sol:42"
          },
          {
            "contract": "WealthyApesERC721",
            "label": "claimFreeCnt",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts\\WealthyApesERC721.sol:43"
          }
        ],
        "types": {
          "t_string_storage": {
            "label": "string"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_array(t_uint256)46_storage": {
            "label": "uint256[46]"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "bed77b3cd7ccd6ac5f53485c77a4fd70e0050d37ce324244fffd0079af077b71": {
      "address": "0xfB30a3F2c4003eeBB21f1A0d52a11F0002a0B06d",
      "txHash": "0xbf1ad044b06101f4558185ee8f526f1227a68d3e21704144352daa85150b26d7",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:44"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:31"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\introspection\\ERC165Upgradeable.sol:36"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:25"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:28"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_owners",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:31"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:34"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenApprovals",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:37"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_operatorApprovals",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:40"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)44_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:431"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_ownedTokens",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721EnumerableUpgradeable.sol:25"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_ownedTokensIndex",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721EnumerableUpgradeable.sol:28"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_allTokens",
            "type": "t_array(t_uint256)dyn_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721EnumerableUpgradeable.sol:31"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_allTokensIndex",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721EnumerableUpgradeable.sol:34"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)46_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721EnumerableUpgradeable.sol:172"
          },
          {
            "contract": "Profile",
            "label": "bio",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "src": "contracts\\Apes.sol:19"
          },
          {
            "contract": "Profile",
            "label": "_tokenName",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "src": "contracts\\Apes.sol:22"
          },
          {
            "contract": "Profile",
            "label": "_nameReserved",
            "type": "t_mapping(t_string_memory_ptr,t_bool)",
            "src": "contracts\\Apes.sol:25"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:82"
          },
          {
            "contract": "ApesNFT",
            "label": "START_ID_BY_TYPE",
            "type": "t_array(t_uint256)dyn_storage",
            "src": "contracts\\Apes.sol:167"
          },
          {
            "contract": "ApesNFT",
            "label": "MAX_SUPPLY_BY_TYPE",
            "type": "t_array(t_uint256)dyn_storage",
            "src": "contracts\\Apes.sol:168"
          },
          {
            "contract": "ApesNFT",
            "label": "totalSupplyByType",
            "type": "t_array(t_uint256)dyn_storage",
            "src": "contracts\\Apes.sol:169"
          },
          {
            "contract": "ApesNFT",
            "label": "royaltyReceiver",
            "type": "t_address",
            "src": "contracts\\Apes.sol:174"
          },
          {
            "contract": "ApesNFT",
            "label": "royaltyPercent",
            "type": "t_uint256",
            "src": "contracts\\Apes.sol:175"
          },
          {
            "contract": "ApesNFT",
            "label": "DENOMINATOR",
            "type": "t_uint256",
            "src": "contracts\\Apes.sol:176"
          },
          {
            "contract": "ApesNFT",
            "label": "bMintAvailable",
            "type": "t_bool",
            "src": "contracts\\Apes.sol:178"
          },
          {
            "contract": "ApesNFT",
            "label": "bStakingAvailable",
            "type": "t_bool",
            "src": "contracts\\Apes.sol:179"
          },
          {
            "contract": "ApesNFT",
            "label": "bBreedingAvailable",
            "type": "t_bool",
            "src": "contracts\\Apes.sol:180"
          },
          {
            "contract": "ApesNFT",
            "label": "apes",
            "type": "t_mapping(t_uint256,t_struct(ApesInfo)2948_storage)",
            "src": "contracts\\Apes.sol:182"
          },
          {
            "contract": "ApesNFT",
            "label": "_baseTokenURI",
            "type": "t_string_storage",
            "src": "contracts\\Apes.sol:184"
          },
          {
            "contract": "ApesNFT",
            "label": "_utilityToken",
            "type": "t_contract(IUtilityToken)2916",
            "src": "contracts\\Apes.sol:186"
          },
          {
            "contract": "ApesNFT",
            "label": "_pool",
            "type": "t_contract(IStakingPool)2931",
            "src": "contracts\\Apes.sol:187"
          }
        ],
        "types": {
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_address": {
            "label": "address"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_uint256,t_struct(ApesInfo)2948_storage)": {
            "label": "mapping(uint256 => struct ApesNFT.ApesInfo)"
          },
          "t_struct(ApesInfo)2948_storage": {
            "label": "struct ApesNFT.ApesInfo",
            "members": [
              {
                "label": "aType",
                "type": "t_enum(ApesType)2942"
              },
              {
                "label": "bStaked",
                "type": "t_bool"
              }
            ]
          },
          "t_enum(ApesType)2942": {
            "label": "enum ApesNFT.ApesType",
            "members": [
              "M1",
              "M2",
              "M3"
            ]
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_contract(IUtilityToken)2916": {
            "label": "contract IUtilityToken"
          },
          "t_contract(IStakingPool)2931": {
            "label": "contract IStakingPool"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)"
          },
          "t_mapping(t_string_memory_ptr,t_bool)": {
            "label": "mapping(string => bool)"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_array(t_uint256)46_storage": {
            "label": "uint256[46]"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "2b5241ee95cdd6f8ed2a223e9fcae396ee50c3a625ddbd31ba0ff3bbdd4e19a4": {
      "address": "0x9E815d725dE9a1D0981C715925873C94Bb9F0a28",
      "txHash": "0xb940e0313eb5812e077041ec72456071eac9269585db990744ff938a5e036a96",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:44"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:31"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\introspection\\ERC165Upgradeable.sol:36"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:25"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:28"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_owners",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:31"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:34"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenApprovals",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:37"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_operatorApprovals",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:40"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)44_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:431"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_ownedTokens",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721EnumerableUpgradeable.sol:25"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_ownedTokensIndex",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721EnumerableUpgradeable.sol:28"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_allTokens",
            "type": "t_array(t_uint256)dyn_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721EnumerableUpgradeable.sol:31"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_allTokensIndex",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721EnumerableUpgradeable.sol:34"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)46_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721EnumerableUpgradeable.sol:172"
          },
          {
            "contract": "Profile",
            "label": "bio",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "src": "contracts\\Apes.sol:19"
          },
          {
            "contract": "Profile",
            "label": "_tokenName",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "src": "contracts\\Apes.sol:22"
          },
          {
            "contract": "Profile",
            "label": "_nameReserved",
            "type": "t_mapping(t_string_memory_ptr,t_bool)",
            "src": "contracts\\Apes.sol:25"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:82"
          },
          {
            "contract": "ApesNFT",
            "label": "START_ID_BY_TYPE",
            "type": "t_array(t_uint256)dyn_storage",
            "src": "contracts\\Apes.sol:167"
          },
          {
            "contract": "ApesNFT",
            "label": "MAX_SUPPLY_BY_TYPE",
            "type": "t_array(t_uint256)dyn_storage",
            "src": "contracts\\Apes.sol:168"
          },
          {
            "contract": "ApesNFT",
            "label": "totalSupplyByType",
            "type": "t_array(t_uint256)dyn_storage",
            "src": "contracts\\Apes.sol:169"
          },
          {
            "contract": "ApesNFT",
            "label": "royaltyReceiver",
            "type": "t_address",
            "src": "contracts\\Apes.sol:174"
          },
          {
            "contract": "ApesNFT",
            "label": "royaltyPercent",
            "type": "t_uint256",
            "src": "contracts\\Apes.sol:175"
          },
          {
            "contract": "ApesNFT",
            "label": "DENOMINATOR",
            "type": "t_uint256",
            "src": "contracts\\Apes.sol:176"
          },
          {
            "contract": "ApesNFT",
            "label": "bMintAvailable",
            "type": "t_bool",
            "src": "contracts\\Apes.sol:178"
          },
          {
            "contract": "ApesNFT",
            "label": "bStakingAvailable",
            "type": "t_bool",
            "src": "contracts\\Apes.sol:179"
          },
          {
            "contract": "ApesNFT",
            "label": "bBreedingAvailable",
            "type": "t_bool",
            "src": "contracts\\Apes.sol:180"
          },
          {
            "contract": "ApesNFT",
            "label": "apes",
            "type": "t_mapping(t_uint256,t_struct(ApesInfo)2948_storage)",
            "src": "contracts\\Apes.sol:182"
          },
          {
            "contract": "ApesNFT",
            "label": "_baseTokenURI",
            "type": "t_string_storage",
            "src": "contracts\\Apes.sol:184"
          },
          {
            "contract": "ApesNFT",
            "label": "_utilityToken",
            "type": "t_contract(IUtilityToken)2916",
            "src": "contracts\\Apes.sol:186"
          },
          {
            "contract": "ApesNFT",
            "label": "_pool",
            "type": "t_contract(IStakingPool)2931",
            "src": "contracts\\Apes.sol:187"
          }
        ],
        "types": {
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_address": {
            "label": "address"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_uint256,t_struct(ApesInfo)2948_storage)": {
            "label": "mapping(uint256 => struct ApesNFT.ApesInfo)"
          },
          "t_struct(ApesInfo)2948_storage": {
            "label": "struct ApesNFT.ApesInfo",
            "members": [
              {
                "label": "aType",
                "type": "t_enum(ApesType)2942"
              },
              {
                "label": "bStaked",
                "type": "t_bool"
              }
            ]
          },
          "t_enum(ApesType)2942": {
            "label": "enum ApesNFT.ApesType",
            "members": [
              "M1",
              "M2",
              "M3"
            ]
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_contract(IUtilityToken)2916": {
            "label": "contract IUtilityToken"
          },
          "t_contract(IStakingPool)2931": {
            "label": "contract IStakingPool"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)"
          },
          "t_mapping(t_string_memory_ptr,t_bool)": {
            "label": "mapping(string => bool)"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_array(t_uint256)46_storage": {
            "label": "uint256[46]"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "c9dcbbb954246bcf387fd58535951f4b46cc009777684768ba9a22bb6d6f4fe1": {
      "address": "0x5deaba17D08CFF83B16CB2172E1B40b312bCB366",
      "txHash": "0xfd90c447e64f85dbe44c790dc06a965d634c2ee76d21d2e0f92dc99a133ac26c",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:44"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:31"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\introspection\\ERC165Upgradeable.sol:36"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:25"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:28"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_owners",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:31"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:34"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenApprovals",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:37"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_operatorApprovals",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:40"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)44_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:431"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_ownedTokens",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721EnumerableUpgradeable.sol:25"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_ownedTokensIndex",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721EnumerableUpgradeable.sol:28"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_allTokens",
            "type": "t_array(t_uint256)dyn_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721EnumerableUpgradeable.sol:31"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_allTokensIndex",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721EnumerableUpgradeable.sol:34"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)46_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721EnumerableUpgradeable.sol:172"
          },
          {
            "contract": "Profile",
            "label": "bio",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "src": "contracts\\Apes.sol:19"
          },
          {
            "contract": "Profile",
            "label": "_tokenName",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "src": "contracts\\Apes.sol:22"
          },
          {
            "contract": "Profile",
            "label": "_nameReserved",
            "type": "t_mapping(t_string_memory_ptr,t_bool)",
            "src": "contracts\\Apes.sol:25"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:82"
          },
          {
            "contract": "ApesNFT",
            "label": "START_ID_BY_TYPE",
            "type": "t_array(t_uint256)dyn_storage",
            "src": "contracts\\Apes.sol:167"
          },
          {
            "contract": "ApesNFT",
            "label": "MAX_SUPPLY_BY_TYPE",
            "type": "t_array(t_uint256)dyn_storage",
            "src": "contracts\\Apes.sol:168"
          },
          {
            "contract": "ApesNFT",
            "label": "totalSupplyByType",
            "type": "t_array(t_uint256)dyn_storage",
            "src": "contracts\\Apes.sol:169"
          },
          {
            "contract": "ApesNFT",
            "label": "claimInFree",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts\\Apes.sol:174"
          },
          {
            "contract": "ApesNFT",
            "label": "royaltyReceiver",
            "type": "t_address",
            "src": "contracts\\Apes.sol:176"
          },
          {
            "contract": "ApesNFT",
            "label": "royaltyPercent",
            "type": "t_uint256",
            "src": "contracts\\Apes.sol:177"
          },
          {
            "contract": "ApesNFT",
            "label": "DENOMINATOR",
            "type": "t_uint256",
            "src": "contracts\\Apes.sol:178"
          },
          {
            "contract": "ApesNFT",
            "label": "bMintAvailable",
            "type": "t_bool",
            "src": "contracts\\Apes.sol:180"
          },
          {
            "contract": "ApesNFT",
            "label": "bStakingAvailable",
            "type": "t_bool",
            "src": "contracts\\Apes.sol:181"
          },
          {
            "contract": "ApesNFT",
            "label": "bBreedingAvailable",
            "type": "t_bool",
            "src": "contracts\\Apes.sol:182"
          },
          {
            "contract": "ApesNFT",
            "label": "apes",
            "type": "t_mapping(t_uint256,t_struct(ApesInfo)2948_storage)",
            "src": "contracts\\Apes.sol:184"
          },
          {
            "contract": "ApesNFT",
            "label": "_baseTokenURI",
            "type": "t_string_storage",
            "src": "contracts\\Apes.sol:186"
          },
          {
            "contract": "ApesNFT",
            "label": "_utilityToken",
            "type": "t_contract(IUtilityToken)2916",
            "src": "contracts\\Apes.sol:188"
          },
          {
            "contract": "ApesNFT",
            "label": "_pool",
            "type": "t_contract(IStakingPool)2931",
            "src": "contracts\\Apes.sol:189"
          }
        ],
        "types": {
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_address": {
            "label": "address"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_uint256,t_struct(ApesInfo)2948_storage)": {
            "label": "mapping(uint256 => struct ApesNFT.ApesInfo)"
          },
          "t_struct(ApesInfo)2948_storage": {
            "label": "struct ApesNFT.ApesInfo",
            "members": [
              {
                "label": "aType",
                "type": "t_enum(ApesType)2942"
              },
              {
                "label": "bStaked",
                "type": "t_bool"
              }
            ]
          },
          "t_enum(ApesType)2942": {
            "label": "enum ApesNFT.ApesType",
            "members": [
              "M1",
              "M2",
              "M3"
            ]
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_contract(IUtilityToken)2916": {
            "label": "contract IUtilityToken"
          },
          "t_contract(IStakingPool)2931": {
            "label": "contract IStakingPool"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)"
          },
          "t_mapping(t_string_memory_ptr,t_bool)": {
            "label": "mapping(string => bool)"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_array(t_uint256)46_storage": {
            "label": "uint256[46]"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "f0a143c604ee527a45d332ed0a47ec193868eb012ae5b442af1a20fd3e92c70d": {
      "address": "0x231E56d7D704c49CFC61198da13a53083381A244",
      "txHash": "0xae352bf1767147b909ab2b066e1089555c21c794588ab4d23adc265dae2e8d88",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:44"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:31"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\introspection\\ERC165Upgradeable.sol:36"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:25"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:28"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_owners",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:31"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:34"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenApprovals",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:37"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_operatorApprovals",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:40"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)44_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:431"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_ownedTokens",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721EnumerableUpgradeable.sol:25"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_ownedTokensIndex",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721EnumerableUpgradeable.sol:28"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_allTokens",
            "type": "t_array(t_uint256)dyn_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721EnumerableUpgradeable.sol:31"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_allTokensIndex",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721EnumerableUpgradeable.sol:34"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)46_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721EnumerableUpgradeable.sol:172"
          },
          {
            "contract": "Profile",
            "label": "bio",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "src": "contracts\\Apes.sol:19"
          },
          {
            "contract": "Profile",
            "label": "_tokenName",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "src": "contracts\\Apes.sol:22"
          },
          {
            "contract": "Profile",
            "label": "_nameReserved",
            "type": "t_mapping(t_string_memory_ptr,t_bool)",
            "src": "contracts\\Apes.sol:25"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:82"
          },
          {
            "contract": "ApesNFT",
            "label": "START_ID_BY_TYPE",
            "type": "t_array(t_uint256)dyn_storage",
            "src": "contracts\\Apes.sol:167"
          },
          {
            "contract": "ApesNFT",
            "label": "MAX_SUPPLY_BY_TYPE",
            "type": "t_array(t_uint256)dyn_storage",
            "src": "contracts\\Apes.sol:168"
          },
          {
            "contract": "ApesNFT",
            "label": "totalSupplyByType",
            "type": "t_array(t_uint256)dyn_storage",
            "src": "contracts\\Apes.sol:169"
          },
          {
            "contract": "ApesNFT",
            "label": "claimInFree",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts\\Apes.sol:174"
          },
          {
            "contract": "ApesNFT",
            "label": "royaltyReceiver",
            "type": "t_address",
            "src": "contracts\\Apes.sol:176"
          },
          {
            "contract": "ApesNFT",
            "label": "royaltyPercent",
            "type": "t_uint256",
            "src": "contracts\\Apes.sol:177"
          },
          {
            "contract": "ApesNFT",
            "label": "DENOMINATOR",
            "type": "t_uint256",
            "src": "contracts\\Apes.sol:178"
          },
          {
            "contract": "ApesNFT",
            "label": "bMintAvailable",
            "type": "t_bool",
            "src": "contracts\\Apes.sol:180"
          },
          {
            "contract": "ApesNFT",
            "label": "bStakingAvailable",
            "type": "t_bool",
            "src": "contracts\\Apes.sol:181"
          },
          {
            "contract": "ApesNFT",
            "label": "bBreedingAvailable",
            "type": "t_bool",
            "src": "contracts\\Apes.sol:182"
          },
          {
            "contract": "ApesNFT",
            "label": "apes",
            "type": "t_mapping(t_uint256,t_struct(ApesInfo)2948_storage)",
            "src": "contracts\\Apes.sol:184"
          },
          {
            "contract": "ApesNFT",
            "label": "_baseTokenURI",
            "type": "t_string_storage",
            "src": "contracts\\Apes.sol:186"
          },
          {
            "contract": "ApesNFT",
            "label": "_utilityToken",
            "type": "t_contract(IUtilityToken)2916",
            "src": "contracts\\Apes.sol:188"
          },
          {
            "contract": "ApesNFT",
            "label": "_pool",
            "type": "t_contract(IStakingPool)2931",
            "src": "contracts\\Apes.sol:189"
          }
        ],
        "types": {
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_address": {
            "label": "address"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_uint256,t_struct(ApesInfo)2948_storage)": {
            "label": "mapping(uint256 => struct ApesNFT.ApesInfo)"
          },
          "t_struct(ApesInfo)2948_storage": {
            "label": "struct ApesNFT.ApesInfo",
            "members": [
              {
                "label": "aType",
                "type": "t_enum(ApesType)2942"
              },
              {
                "label": "bStaked",
                "type": "t_bool"
              }
            ]
          },
          "t_enum(ApesType)2942": {
            "label": "enum ApesNFT.ApesType",
            "members": [
              "M1",
              "M2",
              "M3"
            ]
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_contract(IUtilityToken)2916": {
            "label": "contract IUtilityToken"
          },
          "t_contract(IStakingPool)2931": {
            "label": "contract IStakingPool"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)"
          },
          "t_mapping(t_string_memory_ptr,t_bool)": {
            "label": "mapping(string => bool)"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_array(t_uint256)46_storage": {
            "label": "uint256[46]"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "7e80b566d9fca39131adc0f89f1f19d2d14ed63c8aeeff7da7460aaa178bd838": {
      "address": "0x6D2C2E70B93129163CF00bFE6c77A3C2CfC3674e",
      "txHash": "0x3d9247525a96084eaf76e75003c5c015d3575835d239b3c97195406b70993a18",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:44"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:31"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\introspection\\ERC165Upgradeable.sol:36"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:25"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:28"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_owners",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:31"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:34"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenApprovals",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:37"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_operatorApprovals",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:40"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)44_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:431"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_ownedTokens",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721EnumerableUpgradeable.sol:25"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_ownedTokensIndex",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721EnumerableUpgradeable.sol:28"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_allTokens",
            "type": "t_array(t_uint256)dyn_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721EnumerableUpgradeable.sol:31"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_allTokensIndex",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721EnumerableUpgradeable.sol:34"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)46_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721EnumerableUpgradeable.sol:172"
          },
          {
            "contract": "Profile",
            "label": "bio",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "src": "contracts\\Apes.sol:19"
          },
          {
            "contract": "Profile",
            "label": "_tokenName",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "src": "contracts\\Apes.sol:22"
          },
          {
            "contract": "Profile",
            "label": "_nameReserved",
            "type": "t_mapping(t_string_memory_ptr,t_bool)",
            "src": "contracts\\Apes.sol:25"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:82"
          },
          {
            "contract": "ApesNFT",
            "label": "START_ID_BY_TYPE",
            "type": "t_array(t_uint256)dyn_storage",
            "src": "contracts\\Apes.sol:167"
          },
          {
            "contract": "ApesNFT",
            "label": "MAX_SUPPLY_BY_TYPE",
            "type": "t_array(t_uint256)dyn_storage",
            "src": "contracts\\Apes.sol:168"
          },
          {
            "contract": "ApesNFT",
            "label": "totalSupplyByType",
            "type": "t_array(t_uint256)dyn_storage",
            "src": "contracts\\Apes.sol:169"
          },
          {
            "contract": "ApesNFT",
            "label": "claimInFree",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts\\Apes.sol:174"
          },
          {
            "contract": "ApesNFT",
            "label": "royaltyReceiver",
            "type": "t_address",
            "src": "contracts\\Apes.sol:176"
          },
          {
            "contract": "ApesNFT",
            "label": "royaltyPercent",
            "type": "t_uint256",
            "src": "contracts\\Apes.sol:177"
          },
          {
            "contract": "ApesNFT",
            "label": "DENOMINATOR",
            "type": "t_uint256",
            "src": "contracts\\Apes.sol:178"
          },
          {
            "contract": "ApesNFT",
            "label": "bMintAvailable",
            "type": "t_bool",
            "src": "contracts\\Apes.sol:180"
          },
          {
            "contract": "ApesNFT",
            "label": "bStakingAvailable",
            "type": "t_bool",
            "src": "contracts\\Apes.sol:181"
          },
          {
            "contract": "ApesNFT",
            "label": "bBreedingAvailable",
            "type": "t_bool",
            "src": "contracts\\Apes.sol:182"
          },
          {
            "contract": "ApesNFT",
            "label": "apes",
            "type": "t_mapping(t_uint256,t_struct(ApesInfo)2948_storage)",
            "src": "contracts\\Apes.sol:184"
          },
          {
            "contract": "ApesNFT",
            "label": "_baseTokenURI",
            "type": "t_string_storage",
            "src": "contracts\\Apes.sol:186"
          },
          {
            "contract": "ApesNFT",
            "label": "_utilityToken",
            "type": "t_contract(IUtilityToken)2916",
            "src": "contracts\\Apes.sol:188"
          },
          {
            "contract": "ApesNFT",
            "label": "_pool",
            "type": "t_contract(IStakingPool)2931",
            "src": "contracts\\Apes.sol:189"
          }
        ],
        "types": {
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_address": {
            "label": "address"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_uint256,t_struct(ApesInfo)2948_storage)": {
            "label": "mapping(uint256 => struct ApesNFT.ApesInfo)"
          },
          "t_struct(ApesInfo)2948_storage": {
            "label": "struct ApesNFT.ApesInfo",
            "members": [
              {
                "label": "aType",
                "type": "t_enum(ApesType)2942"
              },
              {
                "label": "bStaked",
                "type": "t_bool"
              }
            ]
          },
          "t_enum(ApesType)2942": {
            "label": "enum ApesNFT.ApesType",
            "members": [
              "M1",
              "M2",
              "M3"
            ]
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_contract(IUtilityToken)2916": {
            "label": "contract IUtilityToken"
          },
          "t_contract(IStakingPool)2931": {
            "label": "contract IStakingPool"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)"
          },
          "t_mapping(t_string_memory_ptr,t_bool)": {
            "label": "mapping(string => bool)"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_array(t_uint256)46_storage": {
            "label": "uint256[46]"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "e266ab084e3efb62b3cf8edd09ba36e7d4d08a7fbf6df30e1bbd05ce7a8af71e": {
      "address": "0xee9cf8Cf786e6BbaE42Cc3A805fFC34FA127A40a",
      "txHash": "0x2fbc2a077f4b67033cbb4c636ec18cbc054459e0f96f3b53f676707832d230ac",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:44"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:31"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\introspection\\ERC165Upgradeable.sol:36"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:25"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:28"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_owners",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:31"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:34"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenApprovals",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:37"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_operatorApprovals",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:40"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)44_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:431"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_ownedTokens",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721EnumerableUpgradeable.sol:25"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_ownedTokensIndex",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721EnumerableUpgradeable.sol:28"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_allTokens",
            "type": "t_array(t_uint256)dyn_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721EnumerableUpgradeable.sol:31"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_allTokensIndex",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721EnumerableUpgradeable.sol:34"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)46_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721EnumerableUpgradeable.sol:172"
          },
          {
            "contract": "Profile",
            "label": "bio",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "src": "contracts\\Apes.sol:19"
          },
          {
            "contract": "Profile",
            "label": "_tokenName",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "src": "contracts\\Apes.sol:22"
          },
          {
            "contract": "Profile",
            "label": "_nameReserved",
            "type": "t_mapping(t_string_memory_ptr,t_bool)",
            "src": "contracts\\Apes.sol:25"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:82"
          },
          {
            "contract": "ApesNFT",
            "label": "START_ID_BY_TYPE",
            "type": "t_array(t_uint256)dyn_storage",
            "src": "contracts\\Apes.sol:167"
          },
          {
            "contract": "ApesNFT",
            "label": "MAX_SUPPLY_BY_TYPE",
            "type": "t_array(t_uint256)dyn_storage",
            "src": "contracts\\Apes.sol:168"
          },
          {
            "contract": "ApesNFT",
            "label": "totalSupplyByType",
            "type": "t_array(t_uint256)dyn_storage",
            "src": "contracts\\Apes.sol:169"
          },
          {
            "contract": "ApesNFT",
            "label": "claimInFree",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts\\Apes.sol:174"
          },
          {
            "contract": "ApesNFT",
            "label": "royaltyReceiver",
            "type": "t_address",
            "src": "contracts\\Apes.sol:176"
          },
          {
            "contract": "ApesNFT",
            "label": "royaltyPercent",
            "type": "t_uint256",
            "src": "contracts\\Apes.sol:177"
          },
          {
            "contract": "ApesNFT",
            "label": "DENOMINATOR",
            "type": "t_uint256",
            "src": "contracts\\Apes.sol:178"
          },
          {
            "contract": "ApesNFT",
            "label": "bMintAvailable",
            "type": "t_bool",
            "src": "contracts\\Apes.sol:180"
          },
          {
            "contract": "ApesNFT",
            "label": "bStakingAvailable",
            "type": "t_bool",
            "src": "contracts\\Apes.sol:181"
          },
          {
            "contract": "ApesNFT",
            "label": "bBreedingAvailable",
            "type": "t_bool",
            "src": "contracts\\Apes.sol:182"
          },
          {
            "contract": "ApesNFT",
            "label": "apes",
            "type": "t_mapping(t_uint256,t_struct(ApesInfo)2948_storage)",
            "src": "contracts\\Apes.sol:184"
          },
          {
            "contract": "ApesNFT",
            "label": "_baseTokenURI",
            "type": "t_string_storage",
            "src": "contracts\\Apes.sol:186"
          },
          {
            "contract": "ApesNFT",
            "label": "_utilityToken",
            "type": "t_contract(IUtilityToken)2916",
            "src": "contracts\\Apes.sol:188"
          },
          {
            "contract": "ApesNFT",
            "label": "_pool",
            "type": "t_contract(IStakingPool)2931",
            "src": "contracts\\Apes.sol:189"
          }
        ],
        "types": {
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_address": {
            "label": "address"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_uint256,t_struct(ApesInfo)2948_storage)": {
            "label": "mapping(uint256 => struct ApesNFT.ApesInfo)"
          },
          "t_struct(ApesInfo)2948_storage": {
            "label": "struct ApesNFT.ApesInfo",
            "members": [
              {
                "label": "aType",
                "type": "t_enum(ApesType)2942"
              },
              {
                "label": "bStaked",
                "type": "t_bool"
              }
            ]
          },
          "t_enum(ApesType)2942": {
            "label": "enum ApesNFT.ApesType",
            "members": [
              "M1",
              "M2",
              "M3"
            ]
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_contract(IUtilityToken)2916": {
            "label": "contract IUtilityToken"
          },
          "t_contract(IStakingPool)2931": {
            "label": "contract IStakingPool"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)"
          },
          "t_mapping(t_string_memory_ptr,t_bool)": {
            "label": "mapping(string => bool)"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_array(t_uint256)46_storage": {
            "label": "uint256[46]"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "c20ac27a4b19e2be0d8a37927618c51ab6ad201bc4ad3987406f083d0007f4ed": {
      "address": "0x2ad76462a7b215A29f7694F3B54bbF3DFfBA4D42",
      "txHash": "0x17a7deaa7def9016ab95cb14f25daf41674656dd453bd36b4dd9bec321699bd5",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:44"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:31"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\introspection\\ERC165Upgradeable.sol:36"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:25"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:28"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_owners",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:31"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:34"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenApprovals",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:37"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_operatorApprovals",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:40"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)44_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:431"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_ownedTokens",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721EnumerableUpgradeable.sol:25"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_ownedTokensIndex",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721EnumerableUpgradeable.sol:28"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_allTokens",
            "type": "t_array(t_uint256)dyn_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721EnumerableUpgradeable.sol:31"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_allTokensIndex",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721EnumerableUpgradeable.sol:34"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)46_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721EnumerableUpgradeable.sol:172"
          },
          {
            "contract": "Profile",
            "label": "bio",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "src": "contracts\\Apes.sol:19"
          },
          {
            "contract": "Profile",
            "label": "_tokenName",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "src": "contracts\\Apes.sol:22"
          },
          {
            "contract": "Profile",
            "label": "_nameReserved",
            "type": "t_mapping(t_string_memory_ptr,t_bool)",
            "src": "contracts\\Apes.sol:25"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:82"
          },
          {
            "contract": "ApesNFT",
            "label": "START_ID_BY_TYPE",
            "type": "t_array(t_uint256)dyn_storage",
            "src": "contracts\\Apes.sol:167"
          },
          {
            "contract": "ApesNFT",
            "label": "MAX_SUPPLY_BY_TYPE",
            "type": "t_array(t_uint256)dyn_storage",
            "src": "contracts\\Apes.sol:168"
          },
          {
            "contract": "ApesNFT",
            "label": "totalSupplyByType",
            "type": "t_array(t_uint256)dyn_storage",
            "src": "contracts\\Apes.sol:169"
          },
          {
            "contract": "ApesNFT",
            "label": "claimInFree",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts\\Apes.sol:174"
          },
          {
            "contract": "ApesNFT",
            "label": "royaltyReceiver",
            "type": "t_address",
            "src": "contracts\\Apes.sol:176"
          },
          {
            "contract": "ApesNFT",
            "label": "royaltyPercent",
            "type": "t_uint256",
            "src": "contracts\\Apes.sol:177"
          },
          {
            "contract": "ApesNFT",
            "label": "DENOMINATOR",
            "type": "t_uint256",
            "src": "contracts\\Apes.sol:178"
          },
          {
            "contract": "ApesNFT",
            "label": "bMintAvailable",
            "type": "t_bool",
            "src": "contracts\\Apes.sol:180"
          },
          {
            "contract": "ApesNFT",
            "label": "bStakingAvailable",
            "type": "t_bool",
            "src": "contracts\\Apes.sol:181"
          },
          {
            "contract": "ApesNFT",
            "label": "bBreedingAvailable",
            "type": "t_bool",
            "src": "contracts\\Apes.sol:182"
          },
          {
            "contract": "ApesNFT",
            "label": "apes",
            "type": "t_mapping(t_uint256,t_struct(ApesInfo)2948_storage)",
            "src": "contracts\\Apes.sol:184"
          },
          {
            "contract": "ApesNFT",
            "label": "_baseTokenURI",
            "type": "t_string_storage",
            "src": "contracts\\Apes.sol:186"
          },
          {
            "contract": "ApesNFT",
            "label": "_utilityToken",
            "type": "t_contract(IUtilityToken)2916",
            "src": "contracts\\Apes.sol:188"
          },
          {
            "contract": "ApesNFT",
            "label": "_pool",
            "type": "t_contract(IStakingPool)2931",
            "src": "contracts\\Apes.sol:189"
          }
        ],
        "types": {
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_address": {
            "label": "address"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_uint256,t_struct(ApesInfo)2948_storage)": {
            "label": "mapping(uint256 => struct ApesNFT.ApesInfo)"
          },
          "t_struct(ApesInfo)2948_storage": {
            "label": "struct ApesNFT.ApesInfo",
            "members": [
              {
                "label": "aType",
                "type": "t_enum(ApesType)2942"
              },
              {
                "label": "bStaked",
                "type": "t_bool"
              }
            ]
          },
          "t_enum(ApesType)2942": {
            "label": "enum ApesNFT.ApesType",
            "members": [
              "M1",
              "M2",
              "M3"
            ]
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_contract(IUtilityToken)2916": {
            "label": "contract IUtilityToken"
          },
          "t_contract(IStakingPool)2931": {
            "label": "contract IStakingPool"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)"
          },
          "t_mapping(t_string_memory_ptr,t_bool)": {
            "label": "mapping(string => bool)"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_array(t_uint256)46_storage": {
            "label": "uint256[46]"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "af4c1d0ca474580fa676493a45f90dba1fa0ba0c1098e9aa094f289db20ea452": {
      "address": "0x8eeD3F220E7DF125a02F16dd31E9Ca429d84B80e",
      "txHash": "0x1eb4e0996895c98091b378fc163abeca3e971b12a85798c5d5a6fb00d383331b",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:44"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:31"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\introspection\\ERC165Upgradeable.sol:36"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:25"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:28"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_owners",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:31"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:34"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenApprovals",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:37"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_operatorApprovals",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:40"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)44_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:431"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_ownedTokens",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721EnumerableUpgradeable.sol:25"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_ownedTokensIndex",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721EnumerableUpgradeable.sol:28"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_allTokens",
            "type": "t_array(t_uint256)dyn_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721EnumerableUpgradeable.sol:31"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_allTokensIndex",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721EnumerableUpgradeable.sol:34"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)46_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721EnumerableUpgradeable.sol:172"
          },
          {
            "contract": "Profile",
            "label": "bio",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "src": "contracts\\Apes.sol:19"
          },
          {
            "contract": "Profile",
            "label": "_tokenName",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "src": "contracts\\Apes.sol:22"
          },
          {
            "contract": "Profile",
            "label": "_nameReserved",
            "type": "t_mapping(t_string_memory_ptr,t_bool)",
            "src": "contracts\\Apes.sol:25"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:82"
          },
          {
            "contract": "ApesNFT",
            "label": "START_ID_BY_TYPE",
            "type": "t_array(t_uint256)dyn_storage",
            "src": "contracts\\Apes.sol:167"
          },
          {
            "contract": "ApesNFT",
            "label": "MAX_SUPPLY_BY_TYPE",
            "type": "t_array(t_uint256)dyn_storage",
            "src": "contracts\\Apes.sol:168"
          },
          {
            "contract": "ApesNFT",
            "label": "totalSupplyByType",
            "type": "t_array(t_uint256)dyn_storage",
            "src": "contracts\\Apes.sol:169"
          },
          {
            "contract": "ApesNFT",
            "label": "claimInFree",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts\\Apes.sol:174"
          },
          {
            "contract": "ApesNFT",
            "label": "royaltyReceiver",
            "type": "t_address",
            "src": "contracts\\Apes.sol:176"
          },
          {
            "contract": "ApesNFT",
            "label": "royaltyPercent",
            "type": "t_uint256",
            "src": "contracts\\Apes.sol:177"
          },
          {
            "contract": "ApesNFT",
            "label": "DENOMINATOR",
            "type": "t_uint256",
            "src": "contracts\\Apes.sol:178"
          },
          {
            "contract": "ApesNFT",
            "label": "bMintAvailable",
            "type": "t_bool",
            "src": "contracts\\Apes.sol:180"
          },
          {
            "contract": "ApesNFT",
            "label": "bStakingAvailable",
            "type": "t_bool",
            "src": "contracts\\Apes.sol:181"
          },
          {
            "contract": "ApesNFT",
            "label": "bBreedingAvailable",
            "type": "t_bool",
            "src": "contracts\\Apes.sol:182"
          },
          {
            "contract": "ApesNFT",
            "label": "apes",
            "type": "t_mapping(t_uint256,t_struct(ApesInfo)2948_storage)",
            "src": "contracts\\Apes.sol:184"
          },
          {
            "contract": "ApesNFT",
            "label": "_baseTokenURI",
            "type": "t_string_storage",
            "src": "contracts\\Apes.sol:186"
          },
          {
            "contract": "ApesNFT",
            "label": "_utilityToken",
            "type": "t_contract(IUtilityToken)2916",
            "src": "contracts\\Apes.sol:188"
          },
          {
            "contract": "ApesNFT",
            "label": "_pool",
            "type": "t_contract(IStakingPool)2931",
            "src": "contracts\\Apes.sol:189"
          }
        ],
        "types": {
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_address": {
            "label": "address"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_uint256,t_struct(ApesInfo)2948_storage)": {
            "label": "mapping(uint256 => struct ApesNFT.ApesInfo)"
          },
          "t_struct(ApesInfo)2948_storage": {
            "label": "struct ApesNFT.ApesInfo",
            "members": [
              {
                "label": "aType",
                "type": "t_enum(ApesType)2942"
              },
              {
                "label": "bStaked",
                "type": "t_bool"
              }
            ]
          },
          "t_enum(ApesType)2942": {
            "label": "enum ApesNFT.ApesType",
            "members": [
              "M1",
              "M2",
              "M3"
            ]
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_contract(IUtilityToken)2916": {
            "label": "contract IUtilityToken"
          },
          "t_contract(IStakingPool)2931": {
            "label": "contract IStakingPool"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)"
          },
          "t_mapping(t_string_memory_ptr,t_bool)": {
            "label": "mapping(string => bool)"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_array(t_uint256)46_storage": {
            "label": "uint256[46]"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "ce7fafd7267c63c82a81a0f1db279b4ce1bbe933ca7f380b0e842112e9fad2a7": {
      "address": "0xc28be68A3283A6E8E414ecb43c8Cdd2ba490906C",
      "txHash": "0x4c916194220c57e574a28420cfc05ad88ca99d0be9716ab7f0d45d1abb0c33ee",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:44"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:31"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\introspection\\ERC165Upgradeable.sol:36"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:25"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:28"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_owners",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:31"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:34"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenApprovals",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:37"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_operatorApprovals",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:40"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)44_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:431"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_ownedTokens",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721EnumerableUpgradeable.sol:25"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_ownedTokensIndex",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721EnumerableUpgradeable.sol:28"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_allTokens",
            "type": "t_array(t_uint256)dyn_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721EnumerableUpgradeable.sol:31"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_allTokensIndex",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721EnumerableUpgradeable.sol:34"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)46_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721EnumerableUpgradeable.sol:172"
          },
          {
            "contract": "Profile",
            "label": "bio",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "src": "contracts\\Apes.sol:19"
          },
          {
            "contract": "Profile",
            "label": "_tokenName",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "src": "contracts\\Apes.sol:22"
          },
          {
            "contract": "Profile",
            "label": "_nameReserved",
            "type": "t_mapping(t_string_memory_ptr,t_bool)",
            "src": "contracts\\Apes.sol:25"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:82"
          },
          {
            "contract": "ApesNFT",
            "label": "START_ID_BY_TYPE",
            "type": "t_array(t_uint256)dyn_storage",
            "src": "contracts\\Apes.sol:167"
          },
          {
            "contract": "ApesNFT",
            "label": "MAX_SUPPLY_BY_TYPE",
            "type": "t_array(t_uint256)dyn_storage",
            "src": "contracts\\Apes.sol:168"
          },
          {
            "contract": "ApesNFT",
            "label": "totalSupplyByType",
            "type": "t_array(t_uint256)dyn_storage",
            "src": "contracts\\Apes.sol:169"
          },
          {
            "contract": "ApesNFT",
            "label": "claimInFree",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts\\Apes.sol:174"
          },
          {
            "contract": "ApesNFT",
            "label": "royaltyReceiver",
            "type": "t_address",
            "src": "contracts\\Apes.sol:176"
          },
          {
            "contract": "ApesNFT",
            "label": "royaltyPercent",
            "type": "t_uint256",
            "src": "contracts\\Apes.sol:177"
          },
          {
            "contract": "ApesNFT",
            "label": "DENOMINATOR",
            "type": "t_uint256",
            "src": "contracts\\Apes.sol:178"
          },
          {
            "contract": "ApesNFT",
            "label": "bMintAvailable",
            "type": "t_bool",
            "src": "contracts\\Apes.sol:180"
          },
          {
            "contract": "ApesNFT",
            "label": "bStakingAvailable",
            "type": "t_bool",
            "src": "contracts\\Apes.sol:181"
          },
          {
            "contract": "ApesNFT",
            "label": "bBreedingAvailable",
            "type": "t_bool",
            "src": "contracts\\Apes.sol:182"
          },
          {
            "contract": "ApesNFT",
            "label": "apes",
            "type": "t_mapping(t_uint256,t_struct(ApesInfo)2948_storage)",
            "src": "contracts\\Apes.sol:184"
          },
          {
            "contract": "ApesNFT",
            "label": "_baseTokenURI",
            "type": "t_string_storage",
            "src": "contracts\\Apes.sol:186"
          },
          {
            "contract": "ApesNFT",
            "label": "_utilityToken",
            "type": "t_contract(IUtilityToken)2916",
            "src": "contracts\\Apes.sol:188"
          },
          {
            "contract": "ApesNFT",
            "label": "_pool",
            "type": "t_contract(IStakingPool)2931",
            "src": "contracts\\Apes.sol:189"
          }
        ],
        "types": {
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_address": {
            "label": "address"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_uint256,t_struct(ApesInfo)2948_storage)": {
            "label": "mapping(uint256 => struct ApesNFT.ApesInfo)"
          },
          "t_struct(ApesInfo)2948_storage": {
            "label": "struct ApesNFT.ApesInfo",
            "members": [
              {
                "label": "aType",
                "type": "t_enum(ApesType)2942"
              },
              {
                "label": "bStaked",
                "type": "t_bool"
              }
            ]
          },
          "t_enum(ApesType)2942": {
            "label": "enum ApesNFT.ApesType",
            "members": [
              "M1",
              "M2",
              "M3"
            ]
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_contract(IUtilityToken)2916": {
            "label": "contract IUtilityToken"
          },
          "t_contract(IStakingPool)2931": {
            "label": "contract IStakingPool"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)"
          },
          "t_mapping(t_string_memory_ptr,t_bool)": {
            "label": "mapping(string => bool)"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_array(t_uint256)46_storage": {
            "label": "uint256[46]"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "6865c464b8207c470d76841e57bbd251ea1421b361a7fbb57d050e6078733325": {
      "address": "0xEE622B0D6663fe8DfE7Bf30FAcC2a64D73950386",
      "txHash": "0x7e36afc9b278cde78b762d55d959e232e2e82eca382ead3b70463ecfde1b8104",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:44"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:31"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\introspection\\ERC165Upgradeable.sol:36"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:25"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:28"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_owners",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:31"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:34"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenApprovals",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:37"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_operatorApprovals",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:40"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)44_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:431"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_ownedTokens",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721EnumerableUpgradeable.sol:25"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_ownedTokensIndex",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721EnumerableUpgradeable.sol:28"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_allTokens",
            "type": "t_array(t_uint256)dyn_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721EnumerableUpgradeable.sol:31"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_allTokensIndex",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721EnumerableUpgradeable.sol:34"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)46_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721EnumerableUpgradeable.sol:172"
          },
          {
            "contract": "Profile",
            "label": "bio",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "src": "contracts\\Apes.sol:19"
          },
          {
            "contract": "Profile",
            "label": "_tokenName",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "src": "contracts\\Apes.sol:22"
          },
          {
            "contract": "Profile",
            "label": "_nameReserved",
            "type": "t_mapping(t_string_memory_ptr,t_bool)",
            "src": "contracts\\Apes.sol:25"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:82"
          },
          {
            "contract": "ApesNFT",
            "label": "START_ID_BY_TYPE",
            "type": "t_array(t_uint256)dyn_storage",
            "src": "contracts\\Apes.sol:167"
          },
          {
            "contract": "ApesNFT",
            "label": "MAX_SUPPLY_BY_TYPE",
            "type": "t_array(t_uint256)dyn_storage",
            "src": "contracts\\Apes.sol:168"
          },
          {
            "contract": "ApesNFT",
            "label": "totalSupplyByType",
            "type": "t_array(t_uint256)dyn_storage",
            "src": "contracts\\Apes.sol:169"
          },
          {
            "contract": "ApesNFT",
            "label": "claimInFree",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts\\Apes.sol:174"
          },
          {
            "contract": "ApesNFT",
            "label": "royaltyReceiver",
            "type": "t_address",
            "src": "contracts\\Apes.sol:176"
          },
          {
            "contract": "ApesNFT",
            "label": "royaltyPercent",
            "type": "t_uint256",
            "src": "contracts\\Apes.sol:177"
          },
          {
            "contract": "ApesNFT",
            "label": "DENOMINATOR",
            "type": "t_uint256",
            "src": "contracts\\Apes.sol:178"
          },
          {
            "contract": "ApesNFT",
            "label": "bMintAvailable",
            "type": "t_bool",
            "src": "contracts\\Apes.sol:180"
          },
          {
            "contract": "ApesNFT",
            "label": "bStakingAvailable",
            "type": "t_bool",
            "src": "contracts\\Apes.sol:181"
          },
          {
            "contract": "ApesNFT",
            "label": "bBreedingAvailable",
            "type": "t_bool",
            "src": "contracts\\Apes.sol:182"
          },
          {
            "contract": "ApesNFT",
            "label": "apes",
            "type": "t_mapping(t_uint256,t_struct(ApesInfo)2948_storage)",
            "src": "contracts\\Apes.sol:184"
          },
          {
            "contract": "ApesNFT",
            "label": "_baseTokenURI",
            "type": "t_string_storage",
            "src": "contracts\\Apes.sol:186"
          },
          {
            "contract": "ApesNFT",
            "label": "_utilityToken",
            "type": "t_contract(IUtilityToken)2916",
            "src": "contracts\\Apes.sol:188"
          },
          {
            "contract": "ApesNFT",
            "label": "_pool",
            "type": "t_contract(IStakingPool)2931",
            "src": "contracts\\Apes.sol:189"
          }
        ],
        "types": {
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_address": {
            "label": "address"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_uint256,t_struct(ApesInfo)2948_storage)": {
            "label": "mapping(uint256 => struct ApesNFT.ApesInfo)"
          },
          "t_struct(ApesInfo)2948_storage": {
            "label": "struct ApesNFT.ApesInfo",
            "members": [
              {
                "label": "aType",
                "type": "t_enum(ApesType)2942"
              },
              {
                "label": "bStaked",
                "type": "t_bool"
              }
            ]
          },
          "t_enum(ApesType)2942": {
            "label": "enum ApesNFT.ApesType",
            "members": [
              "M1",
              "M2",
              "M3"
            ]
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_contract(IUtilityToken)2916": {
            "label": "contract IUtilityToken"
          },
          "t_contract(IStakingPool)2931": {
            "label": "contract IStakingPool"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)"
          },
          "t_mapping(t_string_memory_ptr,t_bool)": {
            "label": "mapping(string => bool)"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_array(t_uint256)46_storage": {
            "label": "uint256[46]"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "9fa48f2c62cab8b468e573b1b14285c3f7fa264918b9ba0bdec92f92acae2330": {
      "address": "0x6146e7a0EB3b19408d6db32a1e58033AA98DC9cA",
      "txHash": "0x90e0dbcc3c2d58b1833d00cf9bb80c5a2e66453614b6821d3a1e31ea191ffd64",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:44"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:31"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\introspection\\ERC165Upgradeable.sol:36"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:25"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:28"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_owners",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:31"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:34"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenApprovals",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:37"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_operatorApprovals",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:40"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)44_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:431"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_ownedTokens",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721EnumerableUpgradeable.sol:25"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_ownedTokensIndex",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721EnumerableUpgradeable.sol:28"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_allTokens",
            "type": "t_array(t_uint256)dyn_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721EnumerableUpgradeable.sol:31"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_allTokensIndex",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721EnumerableUpgradeable.sol:34"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)46_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721EnumerableUpgradeable.sol:172"
          },
          {
            "contract": "Profile",
            "label": "bio",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "src": "contracts\\Apes.sol:19"
          },
          {
            "contract": "Profile",
            "label": "_tokenName",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "src": "contracts\\Apes.sol:22"
          },
          {
            "contract": "Profile",
            "label": "_nameReserved",
            "type": "t_mapping(t_string_memory_ptr,t_bool)",
            "src": "contracts\\Apes.sol:25"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:82"
          },
          {
            "contract": "ApesNFT",
            "label": "START_ID_BY_TYPE",
            "type": "t_array(t_uint256)dyn_storage",
            "src": "contracts\\Apes.sol:167"
          },
          {
            "contract": "ApesNFT",
            "label": "MAX_SUPPLY_BY_TYPE",
            "type": "t_array(t_uint256)dyn_storage",
            "src": "contracts\\Apes.sol:168"
          },
          {
            "contract": "ApesNFT",
            "label": "totalSupplyByType",
            "type": "t_array(t_uint256)dyn_storage",
            "src": "contracts\\Apes.sol:169"
          },
          {
            "contract": "ApesNFT",
            "label": "claimInFree",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts\\Apes.sol:174"
          },
          {
            "contract": "ApesNFT",
            "label": "royaltyReceiver",
            "type": "t_address",
            "src": "contracts\\Apes.sol:176"
          },
          {
            "contract": "ApesNFT",
            "label": "royaltyPercent",
            "type": "t_uint256",
            "src": "contracts\\Apes.sol:177"
          },
          {
            "contract": "ApesNFT",
            "label": "DENOMINATOR",
            "type": "t_uint256",
            "src": "contracts\\Apes.sol:178"
          },
          {
            "contract": "ApesNFT",
            "label": "bMintAvailable",
            "type": "t_bool",
            "src": "contracts\\Apes.sol:180"
          },
          {
            "contract": "ApesNFT",
            "label": "bStakingAvailable",
            "type": "t_bool",
            "src": "contracts\\Apes.sol:181"
          },
          {
            "contract": "ApesNFT",
            "label": "bBreedingAvailable",
            "type": "t_bool",
            "src": "contracts\\Apes.sol:182"
          },
          {
            "contract": "ApesNFT",
            "label": "apes",
            "type": "t_mapping(t_uint256,t_struct(ApesInfo)2948_storage)",
            "src": "contracts\\Apes.sol:184"
          },
          {
            "contract": "ApesNFT",
            "label": "_baseTokenURI",
            "type": "t_string_storage",
            "src": "contracts\\Apes.sol:186"
          },
          {
            "contract": "ApesNFT",
            "label": "_utilityToken",
            "type": "t_contract(IUtilityToken)2916",
            "src": "contracts\\Apes.sol:188"
          },
          {
            "contract": "ApesNFT",
            "label": "_pool",
            "type": "t_contract(IStakingPool)2931",
            "src": "contracts\\Apes.sol:189"
          }
        ],
        "types": {
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_address": {
            "label": "address"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_uint256,t_struct(ApesInfo)2948_storage)": {
            "label": "mapping(uint256 => struct ApesNFT.ApesInfo)"
          },
          "t_struct(ApesInfo)2948_storage": {
            "label": "struct ApesNFT.ApesInfo",
            "members": [
              {
                "label": "aType",
                "type": "t_enum(ApesType)2942"
              },
              {
                "label": "bStaked",
                "type": "t_bool"
              }
            ]
          },
          "t_enum(ApesType)2942": {
            "label": "enum ApesNFT.ApesType",
            "members": [
              "M1",
              "M2",
              "M3"
            ]
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_contract(IUtilityToken)2916": {
            "label": "contract IUtilityToken"
          },
          "t_contract(IStakingPool)2931": {
            "label": "contract IStakingPool"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)"
          },
          "t_mapping(t_string_memory_ptr,t_bool)": {
            "label": "mapping(string => bool)"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_array(t_uint256)46_storage": {
            "label": "uint256[46]"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "42ca76e1af1cf67fd5bfdfef8fbda8529d6c723d2c331493633785aa5c5610cf": {
      "address": "0x0a1afc22CB77a6bB1B1e4f615615B38F2E0170C4",
      "txHash": "0xdec3f9967e395631335783238e480dbb7ce70844dcdb98cf18011a64ef2dcaed",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:44"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:31"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\introspection\\ERC165Upgradeable.sol:36"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:25"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:28"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_owners",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:31"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:34"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenApprovals",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:37"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_operatorApprovals",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:40"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)44_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:431"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_ownedTokens",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721EnumerableUpgradeable.sol:25"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_ownedTokensIndex",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721EnumerableUpgradeable.sol:28"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_allTokens",
            "type": "t_array(t_uint256)dyn_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721EnumerableUpgradeable.sol:31"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_allTokensIndex",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721EnumerableUpgradeable.sol:34"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)46_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721EnumerableUpgradeable.sol:172"
          },
          {
            "contract": "Profile",
            "label": "bio",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "src": "contracts\\Apes.sol:19"
          },
          {
            "contract": "Profile",
            "label": "_tokenName",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "src": "contracts\\Apes.sol:22"
          },
          {
            "contract": "Profile",
            "label": "_nameReserved",
            "type": "t_mapping(t_string_memory_ptr,t_bool)",
            "src": "contracts\\Apes.sol:25"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:82"
          },
          {
            "contract": "ApesNFT",
            "label": "START_ID_BY_TYPE",
            "type": "t_array(t_uint256)dyn_storage",
            "src": "contracts\\Apes.sol:167"
          },
          {
            "contract": "ApesNFT",
            "label": "MAX_SUPPLY_BY_TYPE",
            "type": "t_array(t_uint256)dyn_storage",
            "src": "contracts\\Apes.sol:168"
          },
          {
            "contract": "ApesNFT",
            "label": "totalSupplyByType",
            "type": "t_array(t_uint256)dyn_storage",
            "src": "contracts\\Apes.sol:169"
          },
          {
            "contract": "ApesNFT",
            "label": "claimInFree",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts\\Apes.sol:174"
          },
          {
            "contract": "ApesNFT",
            "label": "royaltyReceiver",
            "type": "t_address",
            "src": "contracts\\Apes.sol:176"
          },
          {
            "contract": "ApesNFT",
            "label": "royaltyPercent",
            "type": "t_uint256",
            "src": "contracts\\Apes.sol:177"
          },
          {
            "contract": "ApesNFT",
            "label": "DENOMINATOR",
            "type": "t_uint256",
            "src": "contracts\\Apes.sol:178"
          },
          {
            "contract": "ApesNFT",
            "label": "bMintAvailable",
            "type": "t_bool",
            "src": "contracts\\Apes.sol:180"
          },
          {
            "contract": "ApesNFT",
            "label": "bStakingAvailable",
            "type": "t_bool",
            "src": "contracts\\Apes.sol:181"
          },
          {
            "contract": "ApesNFT",
            "label": "bBreedingAvailable",
            "type": "t_bool",
            "src": "contracts\\Apes.sol:182"
          },
          {
            "contract": "ApesNFT",
            "label": "apes",
            "type": "t_mapping(t_uint256,t_struct(ApesInfo)2948_storage)",
            "src": "contracts\\Apes.sol:184"
          },
          {
            "contract": "ApesNFT",
            "label": "_baseTokenURI",
            "type": "t_string_storage",
            "src": "contracts\\Apes.sol:186"
          },
          {
            "contract": "ApesNFT",
            "label": "_utilityToken",
            "type": "t_contract(IUtilityToken)2916",
            "src": "contracts\\Apes.sol:188"
          },
          {
            "contract": "ApesNFT",
            "label": "_pool",
            "type": "t_contract(IStakingPool)2931",
            "src": "contracts\\Apes.sol:189"
          }
        ],
        "types": {
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_address": {
            "label": "address"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_uint256,t_struct(ApesInfo)2948_storage)": {
            "label": "mapping(uint256 => struct ApesNFT.ApesInfo)"
          },
          "t_struct(ApesInfo)2948_storage": {
            "label": "struct ApesNFT.ApesInfo",
            "members": [
              {
                "label": "aType",
                "type": "t_enum(ApesType)2942"
              },
              {
                "label": "bStaked",
                "type": "t_bool"
              }
            ]
          },
          "t_enum(ApesType)2942": {
            "label": "enum ApesNFT.ApesType",
            "members": [
              "M1",
              "M2",
              "M3"
            ]
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_contract(IUtilityToken)2916": {
            "label": "contract IUtilityToken"
          },
          "t_contract(IStakingPool)2931": {
            "label": "contract IStakingPool"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)"
          },
          "t_mapping(t_string_memory_ptr,t_bool)": {
            "label": "mapping(string => bool)"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_array(t_uint256)46_storage": {
            "label": "uint256[46]"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "0b22cc0bd276a7242ed09454ec084daeb31ac77891db9e3474e7beaaac8b74ef": {
      "address": "0xB7A7ac02819c8fF43299C92Ebe0892283D400131",
      "txHash": "0xb346c9d4624ac242181af9387ba22212348bc679f7262b1036b938cfff70ee3f",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:44"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:31"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\introspection\\ERC165Upgradeable.sol:36"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:25"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:28"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_owners",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:31"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:34"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenApprovals",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:37"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_operatorApprovals",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:40"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)44_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:431"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_ownedTokens",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721EnumerableUpgradeable.sol:25"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_ownedTokensIndex",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721EnumerableUpgradeable.sol:28"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_allTokens",
            "type": "t_array(t_uint256)dyn_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721EnumerableUpgradeable.sol:31"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_allTokensIndex",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721EnumerableUpgradeable.sol:34"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)46_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721EnumerableUpgradeable.sol:172"
          },
          {
            "contract": "Profile",
            "label": "bio",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "src": "contracts\\Apes.sol:19"
          },
          {
            "contract": "Profile",
            "label": "_tokenName",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "src": "contracts\\Apes.sol:22"
          },
          {
            "contract": "Profile",
            "label": "_nameReserved",
            "type": "t_mapping(t_string_memory_ptr,t_bool)",
            "src": "contracts\\Apes.sol:25"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:82"
          },
          {
            "contract": "ApesNFT",
            "label": "START_ID_BY_TYPE",
            "type": "t_array(t_uint256)dyn_storage",
            "src": "contracts\\Apes.sol:167"
          },
          {
            "contract": "ApesNFT",
            "label": "MAX_SUPPLY_BY_TYPE",
            "type": "t_array(t_uint256)dyn_storage",
            "src": "contracts\\Apes.sol:168"
          },
          {
            "contract": "ApesNFT",
            "label": "totalSupplyByType",
            "type": "t_array(t_uint256)dyn_storage",
            "src": "contracts\\Apes.sol:169"
          },
          {
            "contract": "ApesNFT",
            "label": "claimInFree",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts\\Apes.sol:174"
          },
          {
            "contract": "ApesNFT",
            "label": "royaltyReceiver",
            "type": "t_address",
            "src": "contracts\\Apes.sol:176"
          },
          {
            "contract": "ApesNFT",
            "label": "royaltyPercent",
            "type": "t_uint256",
            "src": "contracts\\Apes.sol:177"
          },
          {
            "contract": "ApesNFT",
            "label": "DENOMINATOR",
            "type": "t_uint256",
            "src": "contracts\\Apes.sol:178"
          },
          {
            "contract": "ApesNFT",
            "label": "bMintAvailable",
            "type": "t_bool",
            "src": "contracts\\Apes.sol:180"
          },
          {
            "contract": "ApesNFT",
            "label": "bStakingAvailable",
            "type": "t_bool",
            "src": "contracts\\Apes.sol:181"
          },
          {
            "contract": "ApesNFT",
            "label": "bBreedingAvailable",
            "type": "t_bool",
            "src": "contracts\\Apes.sol:182"
          },
          {
            "contract": "ApesNFT",
            "label": "apes",
            "type": "t_mapping(t_uint256,t_struct(ApesInfo)2948_storage)",
            "src": "contracts\\Apes.sol:184"
          },
          {
            "contract": "ApesNFT",
            "label": "_baseTokenURI",
            "type": "t_string_storage",
            "src": "contracts\\Apes.sol:186"
          },
          {
            "contract": "ApesNFT",
            "label": "_utilityToken",
            "type": "t_contract(IUtilityToken)2916",
            "src": "contracts\\Apes.sol:188"
          },
          {
            "contract": "ApesNFT",
            "label": "_pool",
            "type": "t_contract(IStakingPool)2931",
            "src": "contracts\\Apes.sol:189"
          }
        ],
        "types": {
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_address": {
            "label": "address"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_uint256,t_struct(ApesInfo)2948_storage)": {
            "label": "mapping(uint256 => struct ApesNFT.ApesInfo)"
          },
          "t_struct(ApesInfo)2948_storage": {
            "label": "struct ApesNFT.ApesInfo",
            "members": [
              {
                "label": "aType",
                "type": "t_enum(ApesType)2942"
              },
              {
                "label": "bStaked",
                "type": "t_bool"
              }
            ]
          },
          "t_enum(ApesType)2942": {
            "label": "enum ApesNFT.ApesType",
            "members": [
              "M1",
              "M2",
              "M3"
            ]
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_contract(IUtilityToken)2916": {
            "label": "contract IUtilityToken"
          },
          "t_contract(IStakingPool)2931": {
            "label": "contract IStakingPool"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)"
          },
          "t_mapping(t_string_memory_ptr,t_bool)": {
            "label": "mapping(string => bool)"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_array(t_uint256)46_storage": {
            "label": "uint256[46]"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "952450a45cc224a1ebc4af3c026bd68cc929c621b90511af28633af985eb2507": {
      "address": "0x42F2ceA181A149862979526179DB127049be5d1b",
      "txHash": "0x8978f745101c6460dff7039796e527c0e16d98ff3f161198412d54c1d10286fa",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:44"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:31"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\introspection\\ERC165Upgradeable.sol:36"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:25"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:28"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_owners",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:31"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:34"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenApprovals",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:37"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_operatorApprovals",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:40"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)44_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:431"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_ownedTokens",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721EnumerableUpgradeable.sol:25"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_ownedTokensIndex",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721EnumerableUpgradeable.sol:28"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_allTokens",
            "type": "t_array(t_uint256)dyn_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721EnumerableUpgradeable.sol:31"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_allTokensIndex",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721EnumerableUpgradeable.sol:34"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)46_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721EnumerableUpgradeable.sol:172"
          },
          {
            "contract": "Profile",
            "label": "bio",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "src": "contracts\\Apes.sol:19"
          },
          {
            "contract": "Profile",
            "label": "_tokenName",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "src": "contracts\\Apes.sol:22"
          },
          {
            "contract": "Profile",
            "label": "_nameReserved",
            "type": "t_mapping(t_string_memory_ptr,t_bool)",
            "src": "contracts\\Apes.sol:25"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:82"
          },
          {
            "contract": "ApesNFT",
            "label": "START_ID_BY_TYPE",
            "type": "t_array(t_uint256)dyn_storage",
            "src": "contracts\\Apes.sol:167"
          },
          {
            "contract": "ApesNFT",
            "label": "MAX_SUPPLY_BY_TYPE",
            "type": "t_array(t_uint256)dyn_storage",
            "src": "contracts\\Apes.sol:168"
          },
          {
            "contract": "ApesNFT",
            "label": "totalSupplyByType",
            "type": "t_array(t_uint256)dyn_storage",
            "src": "contracts\\Apes.sol:169"
          },
          {
            "contract": "ApesNFT",
            "label": "claimInFree",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts\\Apes.sol:174"
          },
          {
            "contract": "ApesNFT",
            "label": "royaltyReceiver",
            "type": "t_address",
            "src": "contracts\\Apes.sol:176"
          },
          {
            "contract": "ApesNFT",
            "label": "royaltyPercent",
            "type": "t_uint256",
            "src": "contracts\\Apes.sol:177"
          },
          {
            "contract": "ApesNFT",
            "label": "DENOMINATOR",
            "type": "t_uint256",
            "src": "contracts\\Apes.sol:178"
          },
          {
            "contract": "ApesNFT",
            "label": "bMintAvailable",
            "type": "t_bool",
            "src": "contracts\\Apes.sol:180"
          },
          {
            "contract": "ApesNFT",
            "label": "bStakingAvailable",
            "type": "t_bool",
            "src": "contracts\\Apes.sol:181"
          },
          {
            "contract": "ApesNFT",
            "label": "bBreedingAvailable",
            "type": "t_bool",
            "src": "contracts\\Apes.sol:182"
          },
          {
            "contract": "ApesNFT",
            "label": "apes",
            "type": "t_mapping(t_uint256,t_struct(ApesInfo)2948_storage)",
            "src": "contracts\\Apes.sol:184"
          },
          {
            "contract": "ApesNFT",
            "label": "_baseTokenURI",
            "type": "t_string_storage",
            "src": "contracts\\Apes.sol:186"
          },
          {
            "contract": "ApesNFT",
            "label": "_utilityToken",
            "type": "t_contract(IUtilityToken)2916",
            "src": "contracts\\Apes.sol:188"
          },
          {
            "contract": "ApesNFT",
            "label": "_pool",
            "type": "t_contract(IStakingPool)2931",
            "src": "contracts\\Apes.sol:189"
          }
        ],
        "types": {
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_address": {
            "label": "address"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_uint256,t_struct(ApesInfo)2948_storage)": {
            "label": "mapping(uint256 => struct ApesNFT.ApesInfo)"
          },
          "t_struct(ApesInfo)2948_storage": {
            "label": "struct ApesNFT.ApesInfo",
            "members": [
              {
                "label": "aType",
                "type": "t_enum(ApesType)2942"
              },
              {
                "label": "bStaked",
                "type": "t_bool"
              }
            ]
          },
          "t_enum(ApesType)2942": {
            "label": "enum ApesNFT.ApesType",
            "members": [
              "M1",
              "M2",
              "M3"
            ]
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_contract(IUtilityToken)2916": {
            "label": "contract IUtilityToken"
          },
          "t_contract(IStakingPool)2931": {
            "label": "contract IStakingPool"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)"
          },
          "t_mapping(t_string_memory_ptr,t_bool)": {
            "label": "mapping(string => bool)"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_array(t_uint256)46_storage": {
            "label": "uint256[46]"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "88a108967d91c1a8fd2495476eb699964800bf88529f0607302bd933f792a9be": {
      "address": "0x1Af37e9dBae934B625aA5b8c9746C4e1cE8b6DEA",
      "txHash": "0x54b96bf486777acb3adb49ea83ed0819052dfca9b7a1bec28fa407c143675822",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:44"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:31"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\introspection\\ERC165Upgradeable.sol:36"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:25"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:28"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_owners",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:31"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:34"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenApprovals",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:37"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_operatorApprovals",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:40"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)44_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:431"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_ownedTokens",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721EnumerableUpgradeable.sol:25"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_ownedTokensIndex",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721EnumerableUpgradeable.sol:28"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_allTokens",
            "type": "t_array(t_uint256)dyn_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721EnumerableUpgradeable.sol:31"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_allTokensIndex",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721EnumerableUpgradeable.sol:34"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)46_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721EnumerableUpgradeable.sol:172"
          },
          {
            "contract": "Profile",
            "label": "bio",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "src": "contracts\\Apes.sol:19"
          },
          {
            "contract": "Profile",
            "label": "_tokenName",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "src": "contracts\\Apes.sol:22"
          },
          {
            "contract": "Profile",
            "label": "_nameReserved",
            "type": "t_mapping(t_string_memory_ptr,t_bool)",
            "src": "contracts\\Apes.sol:25"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:82"
          },
          {
            "contract": "ApesNFT",
            "label": "START_ID_BY_TYPE",
            "type": "t_array(t_uint256)dyn_storage",
            "src": "contracts\\Apes.sol:167"
          },
          {
            "contract": "ApesNFT",
            "label": "MAX_SUPPLY_BY_TYPE",
            "type": "t_array(t_uint256)dyn_storage",
            "src": "contracts\\Apes.sol:168"
          },
          {
            "contract": "ApesNFT",
            "label": "totalSupplyByType",
            "type": "t_array(t_uint256)dyn_storage",
            "src": "contracts\\Apes.sol:169"
          },
          {
            "contract": "ApesNFT",
            "label": "claimInFree",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts\\Apes.sol:174"
          },
          {
            "contract": "ApesNFT",
            "label": "royaltyReceiver",
            "type": "t_address",
            "src": "contracts\\Apes.sol:176"
          },
          {
            "contract": "ApesNFT",
            "label": "royaltyPercent",
            "type": "t_uint256",
            "src": "contracts\\Apes.sol:177"
          },
          {
            "contract": "ApesNFT",
            "label": "DENOMINATOR",
            "type": "t_uint256",
            "src": "contracts\\Apes.sol:178"
          },
          {
            "contract": "ApesNFT",
            "label": "bMintAvailable",
            "type": "t_bool",
            "src": "contracts\\Apes.sol:180"
          },
          {
            "contract": "ApesNFT",
            "label": "bStakingAvailable",
            "type": "t_bool",
            "src": "contracts\\Apes.sol:181"
          },
          {
            "contract": "ApesNFT",
            "label": "bBreedingAvailable",
            "type": "t_bool",
            "src": "contracts\\Apes.sol:182"
          },
          {
            "contract": "ApesNFT",
            "label": "apes",
            "type": "t_mapping(t_uint256,t_struct(ApesInfo)2948_storage)",
            "src": "contracts\\Apes.sol:184"
          },
          {
            "contract": "ApesNFT",
            "label": "_baseTokenURI",
            "type": "t_string_storage",
            "src": "contracts\\Apes.sol:186"
          },
          {
            "contract": "ApesNFT",
            "label": "_utilityToken",
            "type": "t_contract(IUtilityToken)2916",
            "src": "contracts\\Apes.sol:188"
          },
          {
            "contract": "ApesNFT",
            "label": "_pool",
            "type": "t_contract(IStakingPool)2931",
            "src": "contracts\\Apes.sol:189"
          }
        ],
        "types": {
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_address": {
            "label": "address"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_uint256,t_struct(ApesInfo)2948_storage)": {
            "label": "mapping(uint256 => struct ApesNFT.ApesInfo)"
          },
          "t_struct(ApesInfo)2948_storage": {
            "label": "struct ApesNFT.ApesInfo",
            "members": [
              {
                "label": "aType",
                "type": "t_enum(ApesType)2942"
              },
              {
                "label": "bStaked",
                "type": "t_bool"
              }
            ]
          },
          "t_enum(ApesType)2942": {
            "label": "enum ApesNFT.ApesType",
            "members": [
              "M1",
              "M2",
              "M3"
            ]
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_contract(IUtilityToken)2916": {
            "label": "contract IUtilityToken"
          },
          "t_contract(IStakingPool)2931": {
            "label": "contract IStakingPool"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)"
          },
          "t_mapping(t_string_memory_ptr,t_bool)": {
            "label": "mapping(string => bool)"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_array(t_uint256)46_storage": {
            "label": "uint256[46]"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "f53e3d9c6ddca6a423c28c15bd8cfa110d3912325004c9c674bd6e0c4c4499cc": {
      "address": "0xDB0c4f30FA2AF1f6932Ca0d691c44c9C26cBe86C",
      "txHash": "0x397a74d55e7cb9f6f8017d3944da856ace67e75267d0fd6766ea45465bef160d",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:44"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:31"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\introspection\\ERC165Upgradeable.sol:36"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:25"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:28"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_owners",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:31"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:34"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenApprovals",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:37"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_operatorApprovals",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:40"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)44_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:431"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_ownedTokens",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721EnumerableUpgradeable.sol:25"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_ownedTokensIndex",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721EnumerableUpgradeable.sol:28"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_allTokens",
            "type": "t_array(t_uint256)dyn_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721EnumerableUpgradeable.sol:31"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_allTokensIndex",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721EnumerableUpgradeable.sol:34"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)46_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721EnumerableUpgradeable.sol:172"
          },
          {
            "contract": "Profile",
            "label": "bio",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "src": "contracts\\Apes.sol:19"
          },
          {
            "contract": "Profile",
            "label": "_tokenName",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "src": "contracts\\Apes.sol:22"
          },
          {
            "contract": "Profile",
            "label": "_nameReserved",
            "type": "t_mapping(t_string_memory_ptr,t_bool)",
            "src": "contracts\\Apes.sol:25"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:82"
          },
          {
            "contract": "ApesNFT",
            "label": "START_ID_BY_TYPE",
            "type": "t_array(t_uint256)dyn_storage",
            "src": "contracts\\Apes.sol:167"
          },
          {
            "contract": "ApesNFT",
            "label": "MAX_SUPPLY_BY_TYPE",
            "type": "t_array(t_uint256)dyn_storage",
            "src": "contracts\\Apes.sol:168"
          },
          {
            "contract": "ApesNFT",
            "label": "totalSupplyByType",
            "type": "t_array(t_uint256)dyn_storage",
            "src": "contracts\\Apes.sol:169"
          },
          {
            "contract": "ApesNFT",
            "label": "claimInFree",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts\\Apes.sol:174"
          },
          {
            "contract": "ApesNFT",
            "label": "royaltyReceiver",
            "type": "t_address",
            "src": "contracts\\Apes.sol:176"
          },
          {
            "contract": "ApesNFT",
            "label": "royaltyPercent",
            "type": "t_uint256",
            "src": "contracts\\Apes.sol:177"
          },
          {
            "contract": "ApesNFT",
            "label": "DENOMINATOR",
            "type": "t_uint256",
            "src": "contracts\\Apes.sol:178"
          },
          {
            "contract": "ApesNFT",
            "label": "bMintAvailable",
            "type": "t_bool",
            "src": "contracts\\Apes.sol:180"
          },
          {
            "contract": "ApesNFT",
            "label": "bStakingAvailable",
            "type": "t_bool",
            "src": "contracts\\Apes.sol:181"
          },
          {
            "contract": "ApesNFT",
            "label": "bBreedingAvailable",
            "type": "t_bool",
            "src": "contracts\\Apes.sol:182"
          },
          {
            "contract": "ApesNFT",
            "label": "apes",
            "type": "t_mapping(t_uint256,t_struct(ApesInfo)2948_storage)",
            "src": "contracts\\Apes.sol:184"
          },
          {
            "contract": "ApesNFT",
            "label": "_baseTokenURI",
            "type": "t_string_storage",
            "src": "contracts\\Apes.sol:186"
          },
          {
            "contract": "ApesNFT",
            "label": "_utilityToken",
            "type": "t_contract(IUtilityToken)2916",
            "src": "contracts\\Apes.sol:188"
          },
          {
            "contract": "ApesNFT",
            "label": "_pool",
            "type": "t_contract(IStakingPool)2931",
            "src": "contracts\\Apes.sol:189"
          }
        ],
        "types": {
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_address": {
            "label": "address"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_uint256,t_struct(ApesInfo)2948_storage)": {
            "label": "mapping(uint256 => struct ApesNFT.ApesInfo)"
          },
          "t_struct(ApesInfo)2948_storage": {
            "label": "struct ApesNFT.ApesInfo",
            "members": [
              {
                "label": "aType",
                "type": "t_enum(ApesType)2942"
              },
              {
                "label": "bStaked",
                "type": "t_bool"
              }
            ]
          },
          "t_enum(ApesType)2942": {
            "label": "enum ApesNFT.ApesType",
            "members": [
              "M1",
              "M2",
              "M3"
            ]
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_contract(IUtilityToken)2916": {
            "label": "contract IUtilityToken"
          },
          "t_contract(IStakingPool)2931": {
            "label": "contract IStakingPool"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)"
          },
          "t_mapping(t_string_memory_ptr,t_bool)": {
            "label": "mapping(string => bool)"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_array(t_uint256)46_storage": {
            "label": "uint256[46]"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "062812dbd3a1f8788d2bd9a98a54fb79a369a872fd5dd0393a73c70e8a2c3f60": {
      "address": "0xe3Cc883087a8874C5f719d171cE361a4c4b7FD66",
      "txHash": "0x60de40dd9047872670340fc12d15a020ca99d1c9ec91ca885bbf863f67f54b9e",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:44"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:31"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\introspection\\ERC165Upgradeable.sol:36"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:25"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:28"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_owners",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:31"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:34"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenApprovals",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:37"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_operatorApprovals",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:40"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)44_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:431"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_ownedTokens",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721EnumerableUpgradeable.sol:25"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_ownedTokensIndex",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721EnumerableUpgradeable.sol:28"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_allTokens",
            "type": "t_array(t_uint256)dyn_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721EnumerableUpgradeable.sol:31"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_allTokensIndex",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721EnumerableUpgradeable.sol:34"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)46_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721EnumerableUpgradeable.sol:172"
          },
          {
            "contract": "Profile",
            "label": "bio",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "src": "contracts\\Apes.sol:19"
          },
          {
            "contract": "Profile",
            "label": "_tokenName",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "src": "contracts\\Apes.sol:22"
          },
          {
            "contract": "Profile",
            "label": "_nameReserved",
            "type": "t_mapping(t_string_memory_ptr,t_bool)",
            "src": "contracts\\Apes.sol:25"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:82"
          },
          {
            "contract": "ApesNFT",
            "label": "START_ID_BY_TYPE",
            "type": "t_array(t_uint256)dyn_storage",
            "src": "contracts\\Apes.sol:167"
          },
          {
            "contract": "ApesNFT",
            "label": "MAX_SUPPLY_BY_TYPE",
            "type": "t_array(t_uint256)dyn_storage",
            "src": "contracts\\Apes.sol:168"
          },
          {
            "contract": "ApesNFT",
            "label": "totalSupplyByType",
            "type": "t_array(t_uint256)dyn_storage",
            "src": "contracts\\Apes.sol:169"
          },
          {
            "contract": "ApesNFT",
            "label": "claimInFree",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts\\Apes.sol:174"
          },
          {
            "contract": "ApesNFT",
            "label": "royaltyReceiver",
            "type": "t_address",
            "src": "contracts\\Apes.sol:176"
          },
          {
            "contract": "ApesNFT",
            "label": "royaltyPercent",
            "type": "t_uint256",
            "src": "contracts\\Apes.sol:177"
          },
          {
            "contract": "ApesNFT",
            "label": "DENOMINATOR",
            "type": "t_uint256",
            "src": "contracts\\Apes.sol:178"
          },
          {
            "contract": "ApesNFT",
            "label": "bMintAvailable",
            "type": "t_bool",
            "src": "contracts\\Apes.sol:180"
          },
          {
            "contract": "ApesNFT",
            "label": "bStakingAvailable",
            "type": "t_bool",
            "src": "contracts\\Apes.sol:181"
          },
          {
            "contract": "ApesNFT",
            "label": "bBreedingAvailable",
            "type": "t_bool",
            "src": "contracts\\Apes.sol:182"
          },
          {
            "contract": "ApesNFT",
            "label": "apes",
            "type": "t_mapping(t_uint256,t_struct(ApesInfo)2948_storage)",
            "src": "contracts\\Apes.sol:184"
          },
          {
            "contract": "ApesNFT",
            "label": "_baseTokenURI",
            "type": "t_string_storage",
            "src": "contracts\\Apes.sol:186"
          },
          {
            "contract": "ApesNFT",
            "label": "_utilityToken",
            "type": "t_contract(IUtilityToken)2916",
            "src": "contracts\\Apes.sol:188"
          },
          {
            "contract": "ApesNFT",
            "label": "_pool",
            "type": "t_contract(IStakingPool)2931",
            "src": "contracts\\Apes.sol:189"
          }
        ],
        "types": {
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_address": {
            "label": "address"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_uint256,t_struct(ApesInfo)2948_storage)": {
            "label": "mapping(uint256 => struct ApesNFT.ApesInfo)"
          },
          "t_struct(ApesInfo)2948_storage": {
            "label": "struct ApesNFT.ApesInfo",
            "members": [
              {
                "label": "aType",
                "type": "t_enum(ApesType)2942"
              },
              {
                "label": "bStaked",
                "type": "t_bool"
              }
            ]
          },
          "t_enum(ApesType)2942": {
            "label": "enum ApesNFT.ApesType",
            "members": [
              "M1",
              "M2",
              "M3"
            ]
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_contract(IUtilityToken)2916": {
            "label": "contract IUtilityToken"
          },
          "t_contract(IStakingPool)2931": {
            "label": "contract IStakingPool"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)"
          },
          "t_mapping(t_string_memory_ptr,t_bool)": {
            "label": "mapping(string => bool)"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_array(t_uint256)46_storage": {
            "label": "uint256[46]"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "9f026c00efc68b06c95165508d8b115d04bc4f292032e4fb92705ada1ec8561c": {
      "address": "0x4c6DEb6D348b7c1683AC1365cDF6Ab782cF34ba8",
      "txHash": "0x21d81de2ff23361c847368ac3496e6f66d49edcd1a846242b5ecafbbc7c4c834",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:44"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:31"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\introspection\\ERC165Upgradeable.sol:36"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:25"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:28"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_owners",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:31"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:34"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenApprovals",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:37"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_operatorApprovals",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:40"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)44_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:431"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_ownedTokens",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721EnumerableUpgradeable.sol:25"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_ownedTokensIndex",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721EnumerableUpgradeable.sol:28"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_allTokens",
            "type": "t_array(t_uint256)dyn_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721EnumerableUpgradeable.sol:31"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_allTokensIndex",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721EnumerableUpgradeable.sol:34"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)46_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721EnumerableUpgradeable.sol:172"
          },
          {
            "contract": "Profile",
            "label": "bio",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "src": "contracts\\Apes.sol:19"
          },
          {
            "contract": "Profile",
            "label": "_tokenName",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "src": "contracts\\Apes.sol:22"
          },
          {
            "contract": "Profile",
            "label": "_nameReserved",
            "type": "t_mapping(t_string_memory_ptr,t_bool)",
            "src": "contracts\\Apes.sol:25"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:82"
          },
          {
            "contract": "ApesNFT",
            "label": "START_ID_BY_TYPE",
            "type": "t_array(t_uint256)dyn_storage",
            "src": "contracts\\Apes.sol:167"
          },
          {
            "contract": "ApesNFT",
            "label": "MAX_SUPPLY_BY_TYPE",
            "type": "t_array(t_uint256)dyn_storage",
            "src": "contracts\\Apes.sol:168"
          },
          {
            "contract": "ApesNFT",
            "label": "totalSupplyByType",
            "type": "t_array(t_uint256)dyn_storage",
            "src": "contracts\\Apes.sol:169"
          },
          {
            "contract": "ApesNFT",
            "label": "claimInFree",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts\\Apes.sol:174"
          },
          {
            "contract": "ApesNFT",
            "label": "royaltyReceiver",
            "type": "t_address",
            "src": "contracts\\Apes.sol:176"
          },
          {
            "contract": "ApesNFT",
            "label": "royaltyPercent",
            "type": "t_uint256",
            "src": "contracts\\Apes.sol:177"
          },
          {
            "contract": "ApesNFT",
            "label": "DENOMINATOR",
            "type": "t_uint256",
            "src": "contracts\\Apes.sol:178"
          },
          {
            "contract": "ApesNFT",
            "label": "bMintAvailable",
            "type": "t_bool",
            "src": "contracts\\Apes.sol:180"
          },
          {
            "contract": "ApesNFT",
            "label": "bStakingAvailable",
            "type": "t_bool",
            "src": "contracts\\Apes.sol:181"
          },
          {
            "contract": "ApesNFT",
            "label": "bBreedingAvailable",
            "type": "t_bool",
            "src": "contracts\\Apes.sol:182"
          },
          {
            "contract": "ApesNFT",
            "label": "apes",
            "type": "t_mapping(t_uint256,t_struct(ApesInfo)2948_storage)",
            "src": "contracts\\Apes.sol:184"
          },
          {
            "contract": "ApesNFT",
            "label": "_baseTokenURI",
            "type": "t_string_storage",
            "src": "contracts\\Apes.sol:186"
          },
          {
            "contract": "ApesNFT",
            "label": "_utilityToken",
            "type": "t_contract(IUtilityToken)2916",
            "src": "contracts\\Apes.sol:188"
          },
          {
            "contract": "ApesNFT",
            "label": "_pool",
            "type": "t_contract(IStakingPool)2931",
            "src": "contracts\\Apes.sol:189"
          }
        ],
        "types": {
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_address": {
            "label": "address"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_uint256,t_struct(ApesInfo)2948_storage)": {
            "label": "mapping(uint256 => struct ApesNFT.ApesInfo)"
          },
          "t_struct(ApesInfo)2948_storage": {
            "label": "struct ApesNFT.ApesInfo",
            "members": [
              {
                "label": "aType",
                "type": "t_enum(ApesType)2942"
              },
              {
                "label": "bStaked",
                "type": "t_bool"
              }
            ]
          },
          "t_enum(ApesType)2942": {
            "label": "enum ApesNFT.ApesType",
            "members": [
              "M1",
              "M2",
              "M3"
            ]
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_contract(IUtilityToken)2916": {
            "label": "contract IUtilityToken"
          },
          "t_contract(IStakingPool)2931": {
            "label": "contract IStakingPool"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)"
          },
          "t_mapping(t_string_memory_ptr,t_bool)": {
            "label": "mapping(string => bool)"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_array(t_uint256)46_storage": {
            "label": "uint256[46]"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "eeb052e9ffb2829b9fc95ed2fc645bfbb70355d761251366d916d7a6a6a67722": {
      "address": "0xC8fE6163A5920061d356a837A67ef99F7d379922",
      "txHash": "0x6632db087ad2ef70aebd724c1ef1ced778d09af970fc7a75a98a3fa68b8e5ceb",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:44"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:31"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\introspection\\ERC165Upgradeable.sol:36"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:25"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:28"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_owners",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:31"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:34"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenApprovals",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:37"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_operatorApprovals",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:40"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)44_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:431"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_ownedTokens",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721EnumerableUpgradeable.sol:25"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_ownedTokensIndex",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721EnumerableUpgradeable.sol:28"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_allTokens",
            "type": "t_array(t_uint256)dyn_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721EnumerableUpgradeable.sol:31"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_allTokensIndex",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721EnumerableUpgradeable.sol:34"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)46_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721EnumerableUpgradeable.sol:172"
          },
          {
            "contract": "Profile",
            "label": "bio",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "src": "contracts\\Apes.sol:19"
          },
          {
            "contract": "Profile",
            "label": "_tokenName",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "src": "contracts\\Apes.sol:22"
          },
          {
            "contract": "Profile",
            "label": "_nameReserved",
            "type": "t_mapping(t_string_memory_ptr,t_bool)",
            "src": "contracts\\Apes.sol:25"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:82"
          },
          {
            "contract": "ApesNFT",
            "label": "START_ID_BY_TYPE",
            "type": "t_array(t_uint256)dyn_storage",
            "src": "contracts\\Apes.sol:167"
          },
          {
            "contract": "ApesNFT",
            "label": "MAX_SUPPLY_BY_TYPE",
            "type": "t_array(t_uint256)dyn_storage",
            "src": "contracts\\Apes.sol:168"
          },
          {
            "contract": "ApesNFT",
            "label": "totalSupplyByType",
            "type": "t_array(t_uint256)dyn_storage",
            "src": "contracts\\Apes.sol:169"
          },
          {
            "contract": "ApesNFT",
            "label": "claimInFree",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts\\Apes.sol:174"
          },
          {
            "contract": "ApesNFT",
            "label": "royaltyReceiver",
            "type": "t_address",
            "src": "contracts\\Apes.sol:176"
          },
          {
            "contract": "ApesNFT",
            "label": "royaltyPercent",
            "type": "t_uint256",
            "src": "contracts\\Apes.sol:177"
          },
          {
            "contract": "ApesNFT",
            "label": "DENOMINATOR",
            "type": "t_uint256",
            "src": "contracts\\Apes.sol:178"
          },
          {
            "contract": "ApesNFT",
            "label": "bMintAvailable",
            "type": "t_bool",
            "src": "contracts\\Apes.sol:180"
          },
          {
            "contract": "ApesNFT",
            "label": "bStakingAvailable",
            "type": "t_bool",
            "src": "contracts\\Apes.sol:181"
          },
          {
            "contract": "ApesNFT",
            "label": "bBreedingAvailable",
            "type": "t_bool",
            "src": "contracts\\Apes.sol:182"
          },
          {
            "contract": "ApesNFT",
            "label": "apes",
            "type": "t_mapping(t_uint256,t_struct(ApesInfo)2948_storage)",
            "src": "contracts\\Apes.sol:184"
          },
          {
            "contract": "ApesNFT",
            "label": "_baseTokenURI",
            "type": "t_string_storage",
            "src": "contracts\\Apes.sol:186"
          },
          {
            "contract": "ApesNFT",
            "label": "_utilityToken",
            "type": "t_contract(IUtilityToken)2916",
            "src": "contracts\\Apes.sol:188"
          },
          {
            "contract": "ApesNFT",
            "label": "_pool",
            "type": "t_contract(IStakingPool)2931",
            "src": "contracts\\Apes.sol:189"
          }
        ],
        "types": {
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_address": {
            "label": "address"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_uint256,t_struct(ApesInfo)2948_storage)": {
            "label": "mapping(uint256 => struct ApesNFT.ApesInfo)"
          },
          "t_struct(ApesInfo)2948_storage": {
            "label": "struct ApesNFT.ApesInfo",
            "members": [
              {
                "label": "aType",
                "type": "t_enum(ApesType)2942"
              },
              {
                "label": "bStaked",
                "type": "t_bool"
              }
            ]
          },
          "t_enum(ApesType)2942": {
            "label": "enum ApesNFT.ApesType",
            "members": [
              "M1",
              "M2",
              "M3"
            ]
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_contract(IUtilityToken)2916": {
            "label": "contract IUtilityToken"
          },
          "t_contract(IStakingPool)2931": {
            "label": "contract IStakingPool"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)"
          },
          "t_mapping(t_string_memory_ptr,t_bool)": {
            "label": "mapping(string => bool)"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_array(t_uint256)46_storage": {
            "label": "uint256[46]"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "16f43c898bbeae5403dd9c8d489352af25aa44a2dae013db708ee08e007b3a82": {
      "address": "0xf4CF0fDF20f021762D19B052a0F2e2c366eF7a2B",
      "txHash": "0x6dac0c26e9f7a11f02340e1bad24de9ca007cae13886a63d45766cceda1d3a2a",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:44"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:31"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\introspection\\ERC165Upgradeable.sol:36"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:25"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:28"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_owners",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:31"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:34"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenApprovals",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:37"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_operatorApprovals",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:40"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)44_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:431"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_ownedTokens",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721EnumerableUpgradeable.sol:25"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_ownedTokensIndex",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721EnumerableUpgradeable.sol:28"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_allTokens",
            "type": "t_array(t_uint256)dyn_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721EnumerableUpgradeable.sol:31"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_allTokensIndex",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721EnumerableUpgradeable.sol:34"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)46_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721EnumerableUpgradeable.sol:172"
          },
          {
            "contract": "Profile",
            "label": "bio",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "src": "contracts\\Apes.sol:19"
          },
          {
            "contract": "Profile",
            "label": "_tokenName",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "src": "contracts\\Apes.sol:22"
          },
          {
            "contract": "Profile",
            "label": "_nameReserved",
            "type": "t_mapping(t_string_memory_ptr,t_bool)",
            "src": "contracts\\Apes.sol:25"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:82"
          },
          {
            "contract": "ApesNFT",
            "label": "START_ID_BY_TYPE",
            "type": "t_array(t_uint256)dyn_storage",
            "src": "contracts\\Apes.sol:167"
          },
          {
            "contract": "ApesNFT",
            "label": "MAX_SUPPLY_BY_TYPE",
            "type": "t_array(t_uint256)dyn_storage",
            "src": "contracts\\Apes.sol:168"
          },
          {
            "contract": "ApesNFT",
            "label": "totalSupplyByType",
            "type": "t_array(t_uint256)dyn_storage",
            "src": "contracts\\Apes.sol:169"
          },
          {
            "contract": "ApesNFT",
            "label": "claimInFree",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts\\Apes.sol:174"
          },
          {
            "contract": "ApesNFT",
            "label": "royaltyReceiver",
            "type": "t_address",
            "src": "contracts\\Apes.sol:176"
          },
          {
            "contract": "ApesNFT",
            "label": "royaltyPercent",
            "type": "t_uint256",
            "src": "contracts\\Apes.sol:177"
          },
          {
            "contract": "ApesNFT",
            "label": "DENOMINATOR",
            "type": "t_uint256",
            "src": "contracts\\Apes.sol:178"
          },
          {
            "contract": "ApesNFT",
            "label": "bMintAvailable",
            "type": "t_bool",
            "src": "contracts\\Apes.sol:180"
          },
          {
            "contract": "ApesNFT",
            "label": "bStakingAvailable",
            "type": "t_bool",
            "src": "contracts\\Apes.sol:181"
          },
          {
            "contract": "ApesNFT",
            "label": "bBreedingAvailable",
            "type": "t_bool",
            "src": "contracts\\Apes.sol:182"
          },
          {
            "contract": "ApesNFT",
            "label": "apes",
            "type": "t_mapping(t_uint256,t_struct(ApesInfo)2948_storage)",
            "src": "contracts\\Apes.sol:184"
          },
          {
            "contract": "ApesNFT",
            "label": "_baseTokenURI",
            "type": "t_string_storage",
            "src": "contracts\\Apes.sol:186"
          },
          {
            "contract": "ApesNFT",
            "label": "_utilityToken",
            "type": "t_contract(IUtilityToken)2916",
            "src": "contracts\\Apes.sol:188"
          },
          {
            "contract": "ApesNFT",
            "label": "_pool",
            "type": "t_contract(IStakingPool)2931",
            "src": "contracts\\Apes.sol:189"
          }
        ],
        "types": {
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_address": {
            "label": "address"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_uint256,t_struct(ApesInfo)2948_storage)": {
            "label": "mapping(uint256 => struct ApesNFT.ApesInfo)"
          },
          "t_struct(ApesInfo)2948_storage": {
            "label": "struct ApesNFT.ApesInfo",
            "members": [
              {
                "label": "aType",
                "type": "t_enum(ApesType)2942"
              },
              {
                "label": "bStaked",
                "type": "t_bool"
              }
            ]
          },
          "t_enum(ApesType)2942": {
            "label": "enum ApesNFT.ApesType",
            "members": [
              "M1",
              "M2",
              "M3"
            ]
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_contract(IUtilityToken)2916": {
            "label": "contract IUtilityToken"
          },
          "t_contract(IStakingPool)2931": {
            "label": "contract IStakingPool"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)"
          },
          "t_mapping(t_string_memory_ptr,t_bool)": {
            "label": "mapping(string => bool)"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_array(t_uint256)46_storage": {
            "label": "uint256[46]"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "82c3aa8d00d0104a1d974cf52e49cfad6d1698a63f53bdf7c042d66a6021361f": {
      "address": "0xA5134223aEc4De8b8327918A16782B89FE9E6596",
      "txHash": "0x8cc2988431812fe83fa559fc6c3aa78a6c7a4fb91b4aa4b184cfbf9216cae2e6",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:44"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:31"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\introspection\\ERC165Upgradeable.sol:36"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:25"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:28"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_owners",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:31"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:34"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenApprovals",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:37"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_operatorApprovals",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:40"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)44_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:431"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_ownedTokens",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721EnumerableUpgradeable.sol:25"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_ownedTokensIndex",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721EnumerableUpgradeable.sol:28"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_allTokens",
            "type": "t_array(t_uint256)dyn_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721EnumerableUpgradeable.sol:31"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_allTokensIndex",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721EnumerableUpgradeable.sol:34"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)46_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721EnumerableUpgradeable.sol:172"
          },
          {
            "contract": "Profile",
            "label": "bio",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "src": "contracts\\Apes.sol:19"
          },
          {
            "contract": "Profile",
            "label": "_tokenName",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "src": "contracts\\Apes.sol:22"
          },
          {
            "contract": "Profile",
            "label": "_nameReserved",
            "type": "t_mapping(t_string_memory_ptr,t_bool)",
            "src": "contracts\\Apes.sol:25"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:82"
          },
          {
            "contract": "ApesNFT",
            "label": "START_ID_BY_TYPE",
            "type": "t_array(t_uint256)dyn_storage",
            "src": "contracts\\Apes.sol:167"
          },
          {
            "contract": "ApesNFT",
            "label": "MAX_SUPPLY_BY_TYPE",
            "type": "t_array(t_uint256)dyn_storage",
            "src": "contracts\\Apes.sol:168"
          },
          {
            "contract": "ApesNFT",
            "label": "totalSupplyByType",
            "type": "t_array(t_uint256)dyn_storage",
            "src": "contracts\\Apes.sol:169"
          },
          {
            "contract": "ApesNFT",
            "label": "claimInFree",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts\\Apes.sol:174"
          },
          {
            "contract": "ApesNFT",
            "label": "royaltyReceiver",
            "type": "t_address",
            "src": "contracts\\Apes.sol:176"
          },
          {
            "contract": "ApesNFT",
            "label": "royaltyPercent",
            "type": "t_uint256",
            "src": "contracts\\Apes.sol:177"
          },
          {
            "contract": "ApesNFT",
            "label": "DENOMINATOR",
            "type": "t_uint256",
            "src": "contracts\\Apes.sol:178"
          },
          {
            "contract": "ApesNFT",
            "label": "bMintAvailable",
            "type": "t_bool",
            "src": "contracts\\Apes.sol:180"
          },
          {
            "contract": "ApesNFT",
            "label": "bStakingAvailable",
            "type": "t_bool",
            "src": "contracts\\Apes.sol:181"
          },
          {
            "contract": "ApesNFT",
            "label": "bBreedingAvailable",
            "type": "t_bool",
            "src": "contracts\\Apes.sol:182"
          },
          {
            "contract": "ApesNFT",
            "label": "apes",
            "type": "t_mapping(t_uint256,t_struct(ApesInfo)2948_storage)",
            "src": "contracts\\Apes.sol:184"
          },
          {
            "contract": "ApesNFT",
            "label": "_baseTokenURI",
            "type": "t_string_storage",
            "src": "contracts\\Apes.sol:186"
          },
          {
            "contract": "ApesNFT",
            "label": "_utilityToken",
            "type": "t_contract(IUtilityToken)2916",
            "src": "contracts\\Apes.sol:188"
          },
          {
            "contract": "ApesNFT",
            "label": "_pool",
            "type": "t_contract(IStakingPool)2931",
            "src": "contracts\\Apes.sol:189"
          }
        ],
        "types": {
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_address": {
            "label": "address"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_uint256,t_struct(ApesInfo)2948_storage)": {
            "label": "mapping(uint256 => struct ApesNFT.ApesInfo)"
          },
          "t_struct(ApesInfo)2948_storage": {
            "label": "struct ApesNFT.ApesInfo",
            "members": [
              {
                "label": "aType",
                "type": "t_enum(ApesType)2942"
              },
              {
                "label": "bStaked",
                "type": "t_bool"
              }
            ]
          },
          "t_enum(ApesType)2942": {
            "label": "enum ApesNFT.ApesType",
            "members": [
              "M1",
              "M2",
              "M3"
            ]
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_contract(IUtilityToken)2916": {
            "label": "contract IUtilityToken"
          },
          "t_contract(IStakingPool)2931": {
            "label": "contract IStakingPool"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)"
          },
          "t_mapping(t_string_memory_ptr,t_bool)": {
            "label": "mapping(string => bool)"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_array(t_uint256)46_storage": {
            "label": "uint256[46]"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "46e8754c5fbf7611daf9c9c8184c76bbc2b0b2aef9feed99be13e04981c065e4": {
      "address": "0x2616E3fEaFcea7b26bBdbB2E7C348074F97C0072",
      "txHash": "0xe47fa273b6d094612921155234b3b301649b073cf88a70a8c116b5d17cd13499",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:44"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:31"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:82"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\introspection\\ERC165Upgradeable.sol:36"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:25"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:28"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_owners",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:31"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:34"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenApprovals",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:37"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_operatorApprovals",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:40"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)44_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:431"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_ownedTokens",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721EnumerableUpgradeable.sol:25"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_ownedTokensIndex",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721EnumerableUpgradeable.sol:28"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_allTokens",
            "type": "t_array(t_uint256)dyn_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721EnumerableUpgradeable.sol:31"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_allTokensIndex",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721EnumerableUpgradeable.sol:34"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)46_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721EnumerableUpgradeable.sol:172"
          },
          {
            "contract": "Profile",
            "label": "bio",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "src": "contracts\\Apes.sol:19"
          },
          {
            "contract": "Profile",
            "label": "_tokenName",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "src": "contracts\\Apes.sol:22"
          },
          {
            "contract": "Profile",
            "label": "_nameReserved",
            "type": "t_mapping(t_string_memory_ptr,t_bool)",
            "src": "contracts\\Apes.sol:25"
          },
          {
            "contract": "ApesNFT",
            "label": "START_ID_BY_TYPE",
            "type": "t_array(t_uint256)dyn_storage",
            "src": "contracts\\Apes.sol:167"
          },
          {
            "contract": "ApesNFT",
            "label": "MAX_SUPPLY_BY_TYPE",
            "type": "t_array(t_uint256)dyn_storage",
            "src": "contracts\\Apes.sol:168"
          },
          {
            "contract": "ApesNFT",
            "label": "totalSupplyByType",
            "type": "t_array(t_uint256)dyn_storage",
            "src": "contracts\\Apes.sol:169"
          },
          {
            "contract": "ApesNFT",
            "label": "claimInFree",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts\\Apes.sol:174"
          },
          {
            "contract": "ApesNFT",
            "label": "royaltyReceiver",
            "type": "t_address",
            "src": "contracts\\Apes.sol:176"
          },
          {
            "contract": "ApesNFT",
            "label": "royaltyPercent",
            "type": "t_uint256",
            "src": "contracts\\Apes.sol:177"
          },
          {
            "contract": "ApesNFT",
            "label": "DENOMINATOR",
            "type": "t_uint256",
            "src": "contracts\\Apes.sol:178"
          },
          {
            "contract": "ApesNFT",
            "label": "bMintAvailable",
            "type": "t_bool",
            "src": "contracts\\Apes.sol:180"
          },
          {
            "contract": "ApesNFT",
            "label": "bStakingAvailable",
            "type": "t_bool",
            "src": "contracts\\Apes.sol:181"
          },
          {
            "contract": "ApesNFT",
            "label": "bBreedingAvailable",
            "type": "t_bool",
            "src": "contracts\\Apes.sol:182"
          },
          {
            "contract": "ApesNFT",
            "label": "apes",
            "type": "t_mapping(t_uint256,t_struct(ApesInfo)2948_storage)",
            "src": "contracts\\Apes.sol:184"
          },
          {
            "contract": "ApesNFT",
            "label": "_baseTokenURI",
            "type": "t_string_storage",
            "src": "contracts\\Apes.sol:186"
          },
          {
            "contract": "ApesNFT",
            "label": "_utilityToken",
            "type": "t_contract(IUtilityToken)2916",
            "src": "contracts\\Apes.sol:188"
          },
          {
            "contract": "ApesNFT",
            "label": "_pool",
            "type": "t_contract(IStakingPool)2931",
            "src": "contracts\\Apes.sol:189"
          }
        ],
        "types": {
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_address": {
            "label": "address"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_uint256,t_struct(ApesInfo)2948_storage)": {
            "label": "mapping(uint256 => struct ApesNFT.ApesInfo)"
          },
          "t_struct(ApesInfo)2948_storage": {
            "label": "struct ApesNFT.ApesInfo",
            "members": [
              {
                "label": "aType",
                "type": "t_enum(ApesType)2942"
              },
              {
                "label": "bStaked",
                "type": "t_bool"
              }
            ]
          },
          "t_enum(ApesType)2942": {
            "label": "enum ApesNFT.ApesType",
            "members": [
              "M1",
              "M2",
              "M3"
            ]
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_contract(IUtilityToken)2916": {
            "label": "contract IUtilityToken"
          },
          "t_contract(IStakingPool)2931": {
            "label": "contract IStakingPool"
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)"
          },
          "t_mapping(t_string_memory_ptr,t_bool)": {
            "label": "mapping(string => bool)"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_array(t_uint256)46_storage": {
            "label": "uint256[46]"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          }
        }
      }
    },
    "46e53f29478e3eda5ef021681e4d7cea8cad1174166a163a9d959e07af9fa536": {
      "address": "0x7deAe277D8aA8510e77Ba9e3655a3b63c5714Bd8",
      "txHash": "0xb439070e8f0cf62831089c9910068a1a604e877670bf46cb6b859275fed3468a",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:44"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:31"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\introspection\\ERC165Upgradeable.sol:36"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:25"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:28"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_owners",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:31"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:34"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenApprovals",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:37"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_operatorApprovals",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:40"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)44_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:431"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_ownedTokens",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721EnumerableUpgradeable.sol:25"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_ownedTokensIndex",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721EnumerableUpgradeable.sol:28"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_allTokens",
            "type": "t_array(t_uint256)dyn_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721EnumerableUpgradeable.sol:31"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_allTokensIndex",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721EnumerableUpgradeable.sol:34"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)46_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721EnumerableUpgradeable.sol:172"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:82"
          },
          {
            "contract": "ApesNFT",
            "label": "START_ID_BY_TYPE",
            "type": "t_array(t_uint256)dyn_storage",
            "src": "contracts\\Apes.sol:167"
          },
          {
            "contract": "ApesNFT",
            "label": "MAX_SUPPLY_BY_TYPE",
            "type": "t_array(t_uint256)dyn_storage",
            "src": "contracts\\Apes.sol:168"
          },
          {
            "contract": "ApesNFT",
            "label": "totalSupplyByType",
            "type": "t_array(t_uint256)dyn_storage",
            "src": "contracts\\Apes.sol:169"
          },
          {
            "contract": "ApesNFT",
            "label": "claimInFree",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts\\Apes.sol:174"
          },
          {
            "contract": "ApesNFT",
            "label": "royaltyReceiver",
            "type": "t_address",
            "src": "contracts\\Apes.sol:176"
          },
          {
            "contract": "ApesNFT",
            "label": "royaltyPercent",
            "type": "t_uint256",
            "src": "contracts\\Apes.sol:177"
          },
          {
            "contract": "ApesNFT",
            "label": "DENOMINATOR",
            "type": "t_uint256",
            "src": "contracts\\Apes.sol:178"
          },
          {
            "contract": "ApesNFT",
            "label": "bMintAvailable",
            "type": "t_bool",
            "src": "contracts\\Apes.sol:180"
          },
          {
            "contract": "ApesNFT",
            "label": "bStakingAvailable",
            "type": "t_bool",
            "src": "contracts\\Apes.sol:181"
          },
          {
            "contract": "ApesNFT",
            "label": "bBreedingAvailable",
            "type": "t_bool",
            "src": "contracts\\Apes.sol:182"
          },
          {
            "contract": "ApesNFT",
            "label": "apes",
            "type": "t_mapping(t_uint256,t_struct(ApesInfo)2530_storage)",
            "src": "contracts\\Apes.sol:184"
          },
          {
            "contract": "ApesNFT",
            "label": "_baseTokenURI",
            "type": "t_string_storage",
            "src": "contracts\\Apes.sol:186"
          },
          {
            "contract": "ApesNFT",
            "label": "_utilityToken",
            "type": "t_contract(IUtilityToken)2498",
            "src": "contracts\\Apes.sol:188"
          },
          {
            "contract": "ApesNFT",
            "label": "_pool",
            "type": "t_contract(IStakingPool)2513",
            "src": "contracts\\Apes.sol:189"
          }
        ],
        "types": {
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_address": {
            "label": "address"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_uint256,t_struct(ApesInfo)2530_storage)": {
            "label": "mapping(uint256 => struct ApesNFT.ApesInfo)"
          },
          "t_struct(ApesInfo)2530_storage": {
            "label": "struct ApesNFT.ApesInfo",
            "members": [
              {
                "label": "aType",
                "type": "t_enum(ApesType)2524"
              },
              {
                "label": "bStaked",
                "type": "t_bool"
              }
            ]
          },
          "t_enum(ApesType)2524": {
            "label": "enum ApesNFT.ApesType",
            "members": [
              "M1",
              "M2",
              "M3"
            ]
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_contract(IUtilityToken)2498": {
            "label": "contract IUtilityToken"
          },
          "t_contract(IStakingPool)2513": {
            "label": "contract IStakingPool"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_array(t_uint256)46_storage": {
            "label": "uint256[46]"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "0e2511559022dbfea3f3e6131e846bfd5ff5013431d7ad852c73eb68d72870ba": {
      "address": "0xb0152627fa01e3805A8248669A9D7D4b61F4cB9E",
      "txHash": "0xcca10046cd26269b737cd3fe7192396a4e8080afb7aca5d3c6a2cb9a537e00ee",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:44"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:31"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\introspection\\ERC165Upgradeable.sol:36"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:25"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:28"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_owners",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:31"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:34"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenApprovals",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:37"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_operatorApprovals",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:40"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)44_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:431"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_ownedTokens",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721EnumerableUpgradeable.sol:25"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_ownedTokensIndex",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721EnumerableUpgradeable.sol:28"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_allTokens",
            "type": "t_array(t_uint256)dyn_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721EnumerableUpgradeable.sol:31"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_allTokensIndex",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721EnumerableUpgradeable.sol:34"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)46_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721EnumerableUpgradeable.sol:172"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:82"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "_status",
            "type": "t_uint256",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\ReentrancyGuardUpgradeable.sol:68"
          },
          {
            "contract": "WealthyApesERC721",
            "label": "WEALTHYAPES_PROVENANCE",
            "type": "t_string_storage",
            "src": "contracts\\WealthyApesERC721.sol:18"
          },
          {
            "contract": "WealthyApesERC721",
            "label": "LICENSE_TEXT",
            "type": "t_string_storage",
            "src": "contracts\\WealthyApesERC721.sol:19"
          },
          {
            "contract": "WealthyApesERC721",
            "label": "licenseLocked",
            "type": "t_bool",
            "src": "contracts\\WealthyApesERC721.sol:21"
          },
          {
            "contract": "WealthyApesERC721",
            "label": "maxWealthyApesPurchase",
            "type": "t_uint256",
            "src": "contracts\\WealthyApesERC721.sol:23"
          },
          {
            "contract": "WealthyApesERC721",
            "label": "MAX_WEALTHYAPES",
            "type": "t_uint256",
            "src": "contracts\\WealthyApesERC721.sol:24"
          },
          {
            "contract": "WealthyApesERC721",
            "label": "wealthyApesPrice",
            "type": "t_uint256",
            "src": "contracts\\WealthyApesERC721.sol:25"
          },
          {
            "contract": "WealthyApesERC721",
            "label": "royaltyReceiver",
            "type": "t_address",
            "src": "contracts\\WealthyApesERC721.sol:27"
          },
          {
            "contract": "WealthyApesERC721",
            "label": "royaltyPercent",
            "type": "t_uint256",
            "src": "contracts\\WealthyApesERC721.sol:28"
          },
          {
            "contract": "WealthyApesERC721",
            "label": "DENOMINATOR",
            "type": "t_uint256",
            "src": "contracts\\WealthyApesERC721.sol:29"
          },
          {
            "contract": "WealthyApesERC721",
            "label": "saleIsActive",
            "type": "t_bool",
            "src": "contracts\\WealthyApesERC721.sol:31"
          },
          {
            "contract": "WealthyApesERC721",
            "label": "wealthyApesNames",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "src": "contracts\\WealthyApesERC721.sol:33"
          },
          {
            "contract": "WealthyApesERC721",
            "label": "wealthyApesReserve",
            "type": "t_uint256",
            "src": "contracts\\WealthyApesERC721.sol:34"
          },
          {
            "contract": "WealthyApesERC721",
            "label": "baseURI",
            "type": "t_string_storage",
            "src": "contracts\\WealthyApesERC721.sol:37"
          },
          {
            "contract": "WealthyApesERC721",
            "label": "merkleTreeRoot",
            "type": "t_bytes32",
            "src": "contracts\\WealthyApesERC721.sol:40"
          },
          {
            "contract": "WealthyApesERC721",
            "label": "freeMintAmount",
            "type": "t_uint256",
            "src": "contracts\\WealthyApesERC721.sol:41"
          },
          {
            "contract": "WealthyApesERC721",
            "label": "maxFreeMintCnt",
            "type": "t_uint256",
            "src": "contracts\\WealthyApesERC721.sol:42"
          },
          {
            "contract": "WealthyApesERC721",
            "label": "claimFreeCnt",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts\\WealthyApesERC721.sol:43"
          }
        ],
        "types": {
          "t_string_storage": {
            "label": "string"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_array(t_uint256)46_storage": {
            "label": "uint256[46]"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "55ccc18b3440078a00d41b3480d6995b80cac9d5c19a65d40235212879b8f2f3": {
      "address": "0xEE544BE3d20306F3EbEca3aB76F1C6819b2b32EA",
      "txHash": "0xc125fc3ba8c8e358f54cded31cc9c6854d20c183607f2fdeaf6b7efae8f53b14",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:44"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:31"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\introspection\\ERC165Upgradeable.sol:36"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:25"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:28"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_owners",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:31"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:34"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenApprovals",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:37"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_operatorApprovals",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:40"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)44_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:431"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_ownedTokens",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721EnumerableUpgradeable.sol:25"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_ownedTokensIndex",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721EnumerableUpgradeable.sol:28"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_allTokens",
            "type": "t_array(t_uint256)dyn_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721EnumerableUpgradeable.sol:31"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_allTokensIndex",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721EnumerableUpgradeable.sol:34"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)46_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721EnumerableUpgradeable.sol:172"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:82"
          },
          {
            "contract": "ApesNFT",
            "label": "START_ID_BY_TYPE",
            "type": "t_array(t_uint256)dyn_storage",
            "src": "contracts\\Apes.sol:172"
          },
          {
            "contract": "ApesNFT",
            "label": "MAX_SUPPLY_BY_TYPE",
            "type": "t_array(t_uint256)dyn_storage",
            "src": "contracts\\Apes.sol:173"
          },
          {
            "contract": "ApesNFT",
            "label": "totalSupplyByType",
            "type": "t_array(t_uint256)dyn_storage",
            "src": "contracts\\Apes.sol:174"
          },
          {
            "contract": "ApesNFT",
            "label": "claimInFree",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts\\Apes.sol:179"
          },
          {
            "contract": "ApesNFT",
            "label": "royaltyReceiver",
            "type": "t_address",
            "src": "contracts\\Apes.sol:181"
          },
          {
            "contract": "ApesNFT",
            "label": "royaltyPercent",
            "type": "t_uint256",
            "src": "contracts\\Apes.sol:182"
          },
          {
            "contract": "ApesNFT",
            "label": "DENOMINATOR",
            "type": "t_uint256",
            "src": "contracts\\Apes.sol:183"
          },
          {
            "contract": "ApesNFT",
            "label": "bMintAvailable",
            "type": "t_bool",
            "src": "contracts\\Apes.sol:185"
          },
          {
            "contract": "ApesNFT",
            "label": "bStakingAvailable",
            "type": "t_bool",
            "src": "contracts\\Apes.sol:186"
          },
          {
            "contract": "ApesNFT",
            "label": "bBreedingAvailable",
            "type": "t_bool",
            "src": "contracts\\Apes.sol:187"
          },
          {
            "contract": "ApesNFT",
            "label": "apes",
            "type": "t_mapping(t_uint256,t_struct(ApesInfo)2591_storage)",
            "src": "contracts\\Apes.sol:189"
          },
          {
            "contract": "ApesNFT",
            "label": "_baseTokenURI",
            "type": "t_string_storage",
            "src": "contracts\\Apes.sol:191"
          },
          {
            "contract": "ApesNFT",
            "label": "_utilityToken",
            "type": "t_contract(IUtilityToken)2557",
            "src": "contracts\\Apes.sol:193"
          },
          {
            "contract": "ApesNFT",
            "label": "_pool",
            "type": "t_contract(IStakingPool)2572",
            "src": "contracts\\Apes.sol:194"
          }
        ],
        "types": {
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_address": {
            "label": "address"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_uint256,t_struct(ApesInfo)2591_storage)": {
            "label": "mapping(uint256 => struct ApesNFT.ApesInfo)"
          },
          "t_struct(ApesInfo)2591_storage": {
            "label": "struct ApesNFT.ApesInfo",
            "members": [
              {
                "label": "aType",
                "type": "t_enum(ApesType)2585"
              },
              {
                "label": "bStaked",
                "type": "t_bool"
              }
            ]
          },
          "t_enum(ApesType)2585": {
            "label": "enum ApesNFT.ApesType",
            "members": [
              "M1",
              "M2",
              "M3"
            ]
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_contract(IUtilityToken)2557": {
            "label": "contract IUtilityToken"
          },
          "t_contract(IStakingPool)2572": {
            "label": "contract IStakingPool"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_array(t_uint256)46_storage": {
            "label": "uint256[46]"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "a29eaa09da2a3ff5ee7440619be6b2d85400d4164c0edd783aac770a04fb5b47": {
      "address": "0xc76570015db4de8622Afa599534CA8cf870764e8",
      "txHash": "0x67ecee7e57960f447ebfe2f24c778b094ee1cf6cb1cc69a3d42e07e02d85a297",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:44"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:31"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\introspection\\ERC165Upgradeable.sol:36"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:25"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:28"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_owners",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:31"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:34"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenApprovals",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:37"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_operatorApprovals",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:40"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)44_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:431"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_ownedTokens",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721EnumerableUpgradeable.sol:25"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_ownedTokensIndex",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721EnumerableUpgradeable.sol:28"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_allTokens",
            "type": "t_array(t_uint256)dyn_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721EnumerableUpgradeable.sol:31"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_allTokensIndex",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721EnumerableUpgradeable.sol:34"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)46_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721EnumerableUpgradeable.sol:172"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:82"
          },
          {
            "contract": "ApesNFT",
            "label": "START_ID_BY_TYPE",
            "type": "t_array(t_uint256)dyn_storage",
            "src": "contracts\\Apes.sol:170"
          },
          {
            "contract": "ApesNFT",
            "label": "MAX_SUPPLY_BY_TYPE",
            "type": "t_array(t_uint256)dyn_storage",
            "src": "contracts\\Apes.sol:171"
          },
          {
            "contract": "ApesNFT",
            "label": "totalSupplyByType",
            "type": "t_array(t_uint256)dyn_storage",
            "src": "contracts\\Apes.sol:172"
          },
          {
            "contract": "ApesNFT",
            "label": "claimInFree",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts\\Apes.sol:177"
          },
          {
            "contract": "ApesNFT",
            "label": "royaltyReceiver",
            "type": "t_address",
            "src": "contracts\\Apes.sol:179"
          },
          {
            "contract": "ApesNFT",
            "label": "royaltyPercent",
            "type": "t_uint256",
            "src": "contracts\\Apes.sol:180"
          },
          {
            "contract": "ApesNFT",
            "label": "DENOMINATOR",
            "type": "t_uint256",
            "src": "contracts\\Apes.sol:181"
          },
          {
            "contract": "ApesNFT",
            "label": "bMintAvailable",
            "type": "t_bool",
            "src": "contracts\\Apes.sol:183"
          },
          {
            "contract": "ApesNFT",
            "label": "bStakingAvailable",
            "type": "t_bool",
            "src": "contracts\\Apes.sol:184"
          },
          {
            "contract": "ApesNFT",
            "label": "bBreedingAvailable",
            "type": "t_bool",
            "src": "contracts\\Apes.sol:185"
          },
          {
            "contract": "ApesNFT",
            "label": "apes",
            "type": "t_mapping(t_uint256,t_struct(ApesInfo)2588_storage)",
            "src": "contracts\\Apes.sol:187"
          },
          {
            "contract": "ApesNFT",
            "label": "_baseTokenURI",
            "type": "t_string_storage",
            "src": "contracts\\Apes.sol:189"
          },
          {
            "contract": "ApesNFT",
            "label": "_utilityToken",
            "type": "t_contract(IUtilityToken)2556",
            "src": "contracts\\Apes.sol:191"
          },
          {
            "contract": "ApesNFT",
            "label": "_pool",
            "type": "t_contract(IStakingPool)2571",
            "src": "contracts\\Apes.sol:192"
          }
        ],
        "types": {
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_address": {
            "label": "address"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_uint256,t_struct(ApesInfo)2588_storage)": {
            "label": "mapping(uint256 => struct ApesNFT.ApesInfo)"
          },
          "t_struct(ApesInfo)2588_storage": {
            "label": "struct ApesNFT.ApesInfo",
            "members": [
              {
                "label": "aType",
                "type": "t_enum(ApesType)2582"
              },
              {
                "label": "bStaked",
                "type": "t_bool"
              }
            ]
          },
          "t_enum(ApesType)2582": {
            "label": "enum ApesNFT.ApesType",
            "members": [
              "M1",
              "M2",
              "M3"
            ]
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_contract(IUtilityToken)2556": {
            "label": "contract IUtilityToken"
          },
          "t_contract(IStakingPool)2571": {
            "label": "contract IStakingPool"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_array(t_uint256)46_storage": {
            "label": "uint256[46]"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "07c7ae04f14f86730f6daee642fa4b7867ab33cf1487c06f1be84915003081ac": {
      "address": "0x952C1838b8e2557AdAfbE5fCC1931cBE754401dd",
      "txHash": "0x76f8a7ed8708a473ede23a80f545098a71e718df81e3cf04e172c38af09d270c",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:44"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:31"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\introspection\\ERC165Upgradeable.sol:36"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:25"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:28"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_owners",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:31"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:34"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenApprovals",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:37"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_operatorApprovals",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:40"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)44_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:431"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_ownedTokens",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721EnumerableUpgradeable.sol:25"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_ownedTokensIndex",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721EnumerableUpgradeable.sol:28"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_allTokens",
            "type": "t_array(t_uint256)dyn_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721EnumerableUpgradeable.sol:31"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_allTokensIndex",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721EnumerableUpgradeable.sol:34"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)46_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721EnumerableUpgradeable.sol:172"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:82"
          },
          {
            "contract": "ApesNFT",
            "label": "START_ID_BY_TYPE",
            "type": "t_array(t_uint256)dyn_storage",
            "src": "contracts\\Apes.sol:169"
          },
          {
            "contract": "ApesNFT",
            "label": "MAX_SUPPLY_BY_TYPE",
            "type": "t_array(t_uint256)dyn_storage",
            "src": "contracts\\Apes.sol:170"
          },
          {
            "contract": "ApesNFT",
            "label": "totalSupplyByType",
            "type": "t_array(t_uint256)dyn_storage",
            "src": "contracts\\Apes.sol:171"
          },
          {
            "contract": "ApesNFT",
            "label": "claimInFree",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts\\Apes.sol:176"
          },
          {
            "contract": "ApesNFT",
            "label": "royaltyReceiver",
            "type": "t_address",
            "src": "contracts\\Apes.sol:178"
          },
          {
            "contract": "ApesNFT",
            "label": "royaltyPercent",
            "type": "t_uint256",
            "src": "contracts\\Apes.sol:179"
          },
          {
            "contract": "ApesNFT",
            "label": "DENOMINATOR",
            "type": "t_uint256",
            "src": "contracts\\Apes.sol:180"
          },
          {
            "contract": "ApesNFT",
            "label": "bMintAvailable",
            "type": "t_bool",
            "src": "contracts\\Apes.sol:182"
          },
          {
            "contract": "ApesNFT",
            "label": "bStakingAvailable",
            "type": "t_bool",
            "src": "contracts\\Apes.sol:183"
          },
          {
            "contract": "ApesNFT",
            "label": "bBreedingAvailable",
            "type": "t_bool",
            "src": "contracts\\Apes.sol:184"
          },
          {
            "contract": "ApesNFT",
            "label": "apes",
            "type": "t_mapping(t_uint256,t_struct(ApesInfo)2588_storage)",
            "src": "contracts\\Apes.sol:186"
          },
          {
            "contract": "ApesNFT",
            "label": "_baseTokenURI",
            "type": "t_string_storage",
            "src": "contracts\\Apes.sol:188"
          },
          {
            "contract": "ApesNFT",
            "label": "_utilityToken",
            "type": "t_contract(IUtilityToken)2556",
            "src": "contracts\\Apes.sol:190"
          },
          {
            "contract": "ApesNFT",
            "label": "_pool",
            "type": "t_contract(IStakingPool)2571",
            "src": "contracts\\Apes.sol:191"
          }
        ],
        "types": {
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_address": {
            "label": "address"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_uint256,t_struct(ApesInfo)2588_storage)": {
            "label": "mapping(uint256 => struct ApesNFT.ApesInfo)"
          },
          "t_struct(ApesInfo)2588_storage": {
            "label": "struct ApesNFT.ApesInfo",
            "members": [
              {
                "label": "aType",
                "type": "t_enum(ApesType)2582"
              },
              {
                "label": "bStaked",
                "type": "t_bool"
              }
            ]
          },
          "t_enum(ApesType)2582": {
            "label": "enum ApesNFT.ApesType",
            "members": [
              "M1",
              "M2",
              "M3"
            ]
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_contract(IUtilityToken)2556": {
            "label": "contract IUtilityToken"
          },
          "t_contract(IStakingPool)2571": {
            "label": "contract IStakingPool"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_array(t_uint256)46_storage": {
            "label": "uint256[46]"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "40d25d2bcc9364e299544177deda7c95d91841952816cea0af909544f58a74cc": {
      "address": "0xF4F3a1dB244a09dc200D097814a297bB64803A6f",
      "txHash": "0x586a8c119fff3daf3631eee015a90bc8eb20dbffc08337c802af2ccdcfccbe44",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:44"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:31"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\introspection\\ERC165Upgradeable.sol:36"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:25"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:28"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_owners",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:31"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:34"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenApprovals",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:37"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_operatorApprovals",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:40"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)44_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:431"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_ownedTokens",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721EnumerableUpgradeable.sol:25"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_ownedTokensIndex",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721EnumerableUpgradeable.sol:28"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_allTokens",
            "type": "t_array(t_uint256)dyn_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721EnumerableUpgradeable.sol:31"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_allTokensIndex",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721EnumerableUpgradeable.sol:34"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)46_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721EnumerableUpgradeable.sol:172"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:82"
          },
          {
            "contract": "ApesNFT",
            "label": "START_ID_BY_TYPE",
            "type": "t_array(t_uint256)dyn_storage",
            "src": "contracts\\Apes.sol:52"
          },
          {
            "contract": "ApesNFT",
            "label": "MAX_SUPPLY_BY_TYPE",
            "type": "t_array(t_uint256)dyn_storage",
            "src": "contracts\\Apes.sol:53"
          },
          {
            "contract": "ApesNFT",
            "label": "totalSupplyByType",
            "type": "t_array(t_uint256)dyn_storage",
            "src": "contracts\\Apes.sol:54"
          },
          {
            "contract": "ApesNFT",
            "label": "claimInFree",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts\\Apes.sol:59"
          },
          {
            "contract": "ApesNFT",
            "label": "royaltyReceiver",
            "type": "t_address",
            "src": "contracts\\Apes.sol:61"
          },
          {
            "contract": "ApesNFT",
            "label": "royaltyPercent",
            "type": "t_uint256",
            "src": "contracts\\Apes.sol:62"
          },
          {
            "contract": "ApesNFT",
            "label": "DENOMINATOR",
            "type": "t_uint256",
            "src": "contracts\\Apes.sol:63"
          },
          {
            "contract": "ApesNFT",
            "label": "bMintAvailable",
            "type": "t_bool",
            "src": "contracts\\Apes.sol:65"
          },
          {
            "contract": "ApesNFT",
            "label": "bStakingAvailable",
            "type": "t_bool",
            "src": "contracts\\Apes.sol:66"
          },
          {
            "contract": "ApesNFT",
            "label": "bBreedingAvailable",
            "type": "t_bool",
            "src": "contracts\\Apes.sol:67"
          },
          {
            "contract": "ApesNFT",
            "label": "apes",
            "type": "t_mapping(t_uint256,t_struct(ApesInfo)2588_storage)",
            "src": "contracts\\Apes.sol:69"
          },
          {
            "contract": "ApesNFT",
            "label": "_baseTokenURI",
            "type": "t_string_storage",
            "src": "contracts\\Apes.sol:71"
          },
          {
            "contract": "ApesNFT",
            "label": "_utilityToken",
            "type": "t_contract(IUtilityToken)2556",
            "src": "contracts\\Apes.sol:73"
          },
          {
            "contract": "ApesNFT",
            "label": "_pool",
            "type": "t_contract(IStakingPool)2571",
            "src": "contracts\\Apes.sol:74"
          }
        ],
        "types": {
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_address": {
            "label": "address"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_uint256,t_struct(ApesInfo)2588_storage)": {
            "label": "mapping(uint256 => struct ApesNFT.ApesInfo)"
          },
          "t_struct(ApesInfo)2588_storage": {
            "label": "struct ApesNFT.ApesInfo",
            "members": [
              {
                "label": "aType",
                "type": "t_enum(ApesType)2582"
              },
              {
                "label": "bStaked",
                "type": "t_bool"
              }
            ]
          },
          "t_enum(ApesType)2582": {
            "label": "enum ApesNFT.ApesType",
            "members": [
              "M1",
              "M2",
              "M3"
            ]
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_contract(IUtilityToken)2556": {
            "label": "contract IUtilityToken"
          },
          "t_contract(IStakingPool)2571": {
            "label": "contract IStakingPool"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_array(t_uint256)46_storage": {
            "label": "uint256[46]"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "744e58739b9010d551bf0c7048914a38f4b1b95a00c84e5c0d8fd78f307ef500": {
      "address": "0xB39b9dea60119827bca5Ff554d369951328f01DE",
      "txHash": "0x83310505ac24627aa8cc28a819c5f21e2e448299389460ef3292d7c8eb23503d",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:44"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:31"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\introspection\\ERC165Upgradeable.sol:36"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:25"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:28"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_owners",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:31"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:34"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenApprovals",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:37"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_operatorApprovals",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:40"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)44_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:431"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_ownedTokens",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721EnumerableUpgradeable.sol:25"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_ownedTokensIndex",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721EnumerableUpgradeable.sol:28"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_allTokens",
            "type": "t_array(t_uint256)dyn_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721EnumerableUpgradeable.sol:31"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_allTokensIndex",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721EnumerableUpgradeable.sol:34"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)46_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721EnumerableUpgradeable.sol:172"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:82"
          },
          {
            "contract": "ApesNFT",
            "label": "START_ID_BY_TYPE",
            "type": "t_array(t_uint256)dyn_storage",
            "src": "contracts\\Apes.sol:52"
          },
          {
            "contract": "ApesNFT",
            "label": "MAX_SUPPLY_BY_TYPE",
            "type": "t_array(t_uint256)dyn_storage",
            "src": "contracts\\Apes.sol:53"
          },
          {
            "contract": "ApesNFT",
            "label": "totalSupplyByType",
            "type": "t_array(t_uint256)dyn_storage",
            "src": "contracts\\Apes.sol:54"
          },
          {
            "contract": "ApesNFT",
            "label": "claimInFree",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts\\Apes.sol:59"
          },
          {
            "contract": "ApesNFT",
            "label": "royaltyReceiver",
            "type": "t_address",
            "src": "contracts\\Apes.sol:61"
          },
          {
            "contract": "ApesNFT",
            "label": "royaltyPercent",
            "type": "t_uint256",
            "src": "contracts\\Apes.sol:62"
          },
          {
            "contract": "ApesNFT",
            "label": "DENOMINATOR",
            "type": "t_uint256",
            "src": "contracts\\Apes.sol:63"
          },
          {
            "contract": "ApesNFT",
            "label": "bMintAvailable",
            "type": "t_bool",
            "src": "contracts\\Apes.sol:65"
          },
          {
            "contract": "ApesNFT",
            "label": "bStakingAvailable",
            "type": "t_bool",
            "src": "contracts\\Apes.sol:66"
          },
          {
            "contract": "ApesNFT",
            "label": "bBreedingAvailable",
            "type": "t_bool",
            "src": "contracts\\Apes.sol:67"
          },
          {
            "contract": "ApesNFT",
            "label": "apes",
            "type": "t_mapping(t_uint256,t_struct(ApesInfo)2588_storage)",
            "src": "contracts\\Apes.sol:69"
          },
          {
            "contract": "ApesNFT",
            "label": "_baseTokenURI",
            "type": "t_string_storage",
            "src": "contracts\\Apes.sol:71"
          },
          {
            "contract": "ApesNFT",
            "label": "_utilityToken",
            "type": "t_contract(IUtilityToken)2556",
            "src": "contracts\\Apes.sol:73"
          },
          {
            "contract": "ApesNFT",
            "label": "_pool",
            "type": "t_contract(IStakingPool)2571",
            "src": "contracts\\Apes.sol:74"
          }
        ],
        "types": {
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_address": {
            "label": "address"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_uint256,t_struct(ApesInfo)2588_storage)": {
            "label": "mapping(uint256 => struct ApesNFT.ApesInfo)"
          },
          "t_struct(ApesInfo)2588_storage": {
            "label": "struct ApesNFT.ApesInfo",
            "members": [
              {
                "label": "aType",
                "type": "t_enum(ApesType)2582"
              },
              {
                "label": "bStaked",
                "type": "t_bool"
              }
            ]
          },
          "t_enum(ApesType)2582": {
            "label": "enum ApesNFT.ApesType",
            "members": [
              "M1",
              "M2",
              "M3"
            ]
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_contract(IUtilityToken)2556": {
            "label": "contract IUtilityToken"
          },
          "t_contract(IStakingPool)2571": {
            "label": "contract IStakingPool"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_array(t_uint256)46_storage": {
            "label": "uint256[46]"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "a1df325115cda3451e2e635229b53a4fed35d99096a6768a3572a417a17751a5": {
      "address": "0x80a5c88BBC9C349cF1738bF775e94Ae4be99210e",
      "txHash": "0xdf8c43b027f5db5ea877205d7e5f76ca289a07d4c572db8be8ef3cd083a7ff01",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:44"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:31"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\introspection\\ERC165Upgradeable.sol:36"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:25"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:28"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_owners",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:31"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:34"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenApprovals",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:37"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_operatorApprovals",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:40"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)44_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:431"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_ownedTokens",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721EnumerableUpgradeable.sol:25"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_ownedTokensIndex",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721EnumerableUpgradeable.sol:28"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_allTokens",
            "type": "t_array(t_uint256)dyn_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721EnumerableUpgradeable.sol:31"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_allTokensIndex",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721EnumerableUpgradeable.sol:34"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)46_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721EnumerableUpgradeable.sol:172"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:82"
          },
          {
            "contract": "ApesNFT",
            "label": "START_ID_BY_TYPE",
            "type": "t_array(t_uint256)dyn_storage",
            "src": "contracts\\Apes.sol:48"
          },
          {
            "contract": "ApesNFT",
            "label": "MAX_SUPPLY_BY_TYPE",
            "type": "t_array(t_uint256)dyn_storage",
            "src": "contracts\\Apes.sol:49"
          },
          {
            "contract": "ApesNFT",
            "label": "totalSupplyByType",
            "type": "t_array(t_uint256)dyn_storage",
            "src": "contracts\\Apes.sol:50"
          },
          {
            "contract": "ApesNFT",
            "label": "claimInFree",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts\\Apes.sol:55"
          },
          {
            "contract": "ApesNFT",
            "label": "royaltyReceiver",
            "type": "t_address",
            "src": "contracts\\Apes.sol:57"
          },
          {
            "contract": "ApesNFT",
            "label": "royaltyPercent",
            "type": "t_uint256",
            "src": "contracts\\Apes.sol:58"
          },
          {
            "contract": "ApesNFT",
            "label": "DENOMINATOR",
            "type": "t_uint256",
            "src": "contracts\\Apes.sol:59"
          },
          {
            "contract": "ApesNFT",
            "label": "bMintAvailable",
            "type": "t_bool",
            "src": "contracts\\Apes.sol:61"
          },
          {
            "contract": "ApesNFT",
            "label": "bStakingAvailable",
            "type": "t_bool",
            "src": "contracts\\Apes.sol:62"
          },
          {
            "contract": "ApesNFT",
            "label": "bBreedingAvailable",
            "type": "t_bool",
            "src": "contracts\\Apes.sol:63"
          },
          {
            "contract": "ApesNFT",
            "label": "apes",
            "type": "t_mapping(t_uint256,t_struct(ApesInfo)2588_storage)",
            "src": "contracts\\Apes.sol:65"
          },
          {
            "contract": "ApesNFT",
            "label": "_baseTokenURI",
            "type": "t_string_storage",
            "src": "contracts\\Apes.sol:67"
          },
          {
            "contract": "ApesNFT",
            "label": "_utilityToken",
            "type": "t_contract(IUtilityToken)2556",
            "src": "contracts\\Apes.sol:69"
          },
          {
            "contract": "ApesNFT",
            "label": "_pool",
            "type": "t_contract(IStakingPool)2571",
            "src": "contracts\\Apes.sol:70"
          }
        ],
        "types": {
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_address": {
            "label": "address"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_uint256,t_struct(ApesInfo)2588_storage)": {
            "label": "mapping(uint256 => struct ApesNFT.ApesInfo)"
          },
          "t_struct(ApesInfo)2588_storage": {
            "label": "struct ApesNFT.ApesInfo",
            "members": [
              {
                "label": "aType",
                "type": "t_enum(ApesType)2582"
              },
              {
                "label": "bStaked",
                "type": "t_bool"
              }
            ]
          },
          "t_enum(ApesType)2582": {
            "label": "enum ApesNFT.ApesType",
            "members": [
              "M1",
              "M2",
              "M3"
            ]
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_contract(IUtilityToken)2556": {
            "label": "contract IUtilityToken"
          },
          "t_contract(IStakingPool)2571": {
            "label": "contract IStakingPool"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_array(t_uint256)46_storage": {
            "label": "uint256[46]"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "e4ab737e304de8c22e4f5648c2562cbdddff388c029adbdb3f2df5ace5d84f5c": {
      "address": "0x0F5b389C84Be87aE58537303cB7d07A8E20032fC",
      "txHash": "0xaf92c3c70d2e48c2c6c51894119b2dc4b1f9ee072b8f806de508ff2a7d18b912",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:44"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:31"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\introspection\\ERC165Upgradeable.sol:36"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:25"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:28"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_owners",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:31"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:34"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenApprovals",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:37"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_operatorApprovals",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:40"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)44_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:431"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_ownedTokens",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721EnumerableUpgradeable.sol:25"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_ownedTokensIndex",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721EnumerableUpgradeable.sol:28"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_allTokens",
            "type": "t_array(t_uint256)dyn_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721EnumerableUpgradeable.sol:31"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_allTokensIndex",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721EnumerableUpgradeable.sol:34"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)46_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721EnumerableUpgradeable.sol:172"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:82"
          },
          {
            "contract": "ApesNFT",
            "label": "START_ID_BY_TYPE",
            "type": "t_array(t_uint256)dyn_storage",
            "src": "contracts\\Apes.sol:48"
          },
          {
            "contract": "ApesNFT",
            "label": "MAX_SUPPLY_BY_TYPE",
            "type": "t_array(t_uint256)dyn_storage",
            "src": "contracts\\Apes.sol:49"
          },
          {
            "contract": "ApesNFT",
            "label": "totalSupplyByType",
            "type": "t_array(t_uint256)dyn_storage",
            "src": "contracts\\Apes.sol:50"
          },
          {
            "contract": "ApesNFT",
            "label": "claimInFree",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts\\Apes.sol:55"
          },
          {
            "contract": "ApesNFT",
            "label": "royaltyReceiver",
            "type": "t_address",
            "src": "contracts\\Apes.sol:57"
          },
          {
            "contract": "ApesNFT",
            "label": "royaltyPercent",
            "type": "t_uint256",
            "src": "contracts\\Apes.sol:58"
          },
          {
            "contract": "ApesNFT",
            "label": "DENOMINATOR",
            "type": "t_uint256",
            "src": "contracts\\Apes.sol:59"
          },
          {
            "contract": "ApesNFT",
            "label": "bMintAvailable",
            "type": "t_bool",
            "src": "contracts\\Apes.sol:61"
          },
          {
            "contract": "ApesNFT",
            "label": "bStakingAvailable",
            "type": "t_bool",
            "src": "contracts\\Apes.sol:62"
          },
          {
            "contract": "ApesNFT",
            "label": "bBreedingAvailable",
            "type": "t_bool",
            "src": "contracts\\Apes.sol:63"
          },
          {
            "contract": "ApesNFT",
            "label": "apes",
            "type": "t_mapping(t_uint256,t_struct(ApesInfo)2588_storage)",
            "src": "contracts\\Apes.sol:65"
          },
          {
            "contract": "ApesNFT",
            "label": "_baseTokenURI",
            "type": "t_string_storage",
            "src": "contracts\\Apes.sol:67"
          },
          {
            "contract": "ApesNFT",
            "label": "_utilityToken",
            "type": "t_contract(IUtilityToken)2556",
            "src": "contracts\\Apes.sol:69"
          },
          {
            "contract": "ApesNFT",
            "label": "_pool",
            "type": "t_contract(IStakingPool)2571",
            "src": "contracts\\Apes.sol:70"
          }
        ],
        "types": {
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_address": {
            "label": "address"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_uint256,t_struct(ApesInfo)2588_storage)": {
            "label": "mapping(uint256 => struct ApesNFT.ApesInfo)"
          },
          "t_struct(ApesInfo)2588_storage": {
            "label": "struct ApesNFT.ApesInfo",
            "members": [
              {
                "label": "aType",
                "type": "t_enum(ApesType)2582"
              },
              {
                "label": "bStaked",
                "type": "t_bool"
              }
            ]
          },
          "t_enum(ApesType)2582": {
            "label": "enum ApesNFT.ApesType",
            "members": [
              "M1",
              "M2",
              "M3"
            ]
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_contract(IUtilityToken)2556": {
            "label": "contract IUtilityToken"
          },
          "t_contract(IStakingPool)2571": {
            "label": "contract IStakingPool"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_array(t_uint256)46_storage": {
            "label": "uint256[46]"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "bd54f1eb74d7b620c3052f64549ba971b3b6063bad1b6b12880da9a49647e0d0": {
      "address": "0xaFc4C5C55917735591DD0Fdb84426C7EC810d616",
      "txHash": "0x0d8aa58eca48f910b9ca1bd0975ca119bee2d6d3f51106d51e014c3743e4c337",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:44"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:31"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\introspection\\ERC165Upgradeable.sol:36"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:25"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:28"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_owners",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:31"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:34"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenApprovals",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:37"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_operatorApprovals",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:40"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)44_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:431"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_ownedTokens",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721EnumerableUpgradeable.sol:25"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_ownedTokensIndex",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721EnumerableUpgradeable.sol:28"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_allTokens",
            "type": "t_array(t_uint256)dyn_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721EnumerableUpgradeable.sol:31"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_allTokensIndex",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721EnumerableUpgradeable.sol:34"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)46_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721EnumerableUpgradeable.sol:172"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:82"
          },
          {
            "contract": "ApesNFT",
            "label": "START_ID_BY_TYPE",
            "type": "t_array(t_uint256)dyn_storage",
            "src": "contracts\\Apes.sol:48"
          },
          {
            "contract": "ApesNFT",
            "label": "MAX_SUPPLY_BY_TYPE",
            "type": "t_array(t_uint256)dyn_storage",
            "src": "contracts\\Apes.sol:49"
          },
          {
            "contract": "ApesNFT",
            "label": "totalSupplyByType",
            "type": "t_array(t_uint256)dyn_storage",
            "src": "contracts\\Apes.sol:50"
          },
          {
            "contract": "ApesNFT",
            "label": "claimInFree",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts\\Apes.sol:55"
          },
          {
            "contract": "ApesNFT",
            "label": "royaltyReceiver",
            "type": "t_address",
            "src": "contracts\\Apes.sol:57"
          },
          {
            "contract": "ApesNFT",
            "label": "royaltyPercent",
            "type": "t_uint256",
            "src": "contracts\\Apes.sol:58"
          },
          {
            "contract": "ApesNFT",
            "label": "DENOMINATOR",
            "type": "t_uint256",
            "src": "contracts\\Apes.sol:59"
          },
          {
            "contract": "ApesNFT",
            "label": "bMintAvailable",
            "type": "t_bool",
            "src": "contracts\\Apes.sol:61"
          },
          {
            "contract": "ApesNFT",
            "label": "bStakingAvailable",
            "type": "t_bool",
            "src": "contracts\\Apes.sol:62"
          },
          {
            "contract": "ApesNFT",
            "label": "bBreedingAvailable",
            "type": "t_bool",
            "src": "contracts\\Apes.sol:63"
          },
          {
            "contract": "ApesNFT",
            "label": "apes",
            "type": "t_mapping(t_uint256,t_struct(ApesInfo)2588_storage)",
            "src": "contracts\\Apes.sol:65"
          },
          {
            "contract": "ApesNFT",
            "label": "_baseTokenURI",
            "type": "t_string_storage",
            "src": "contracts\\Apes.sol:67"
          },
          {
            "contract": "ApesNFT",
            "label": "_utilityToken",
            "type": "t_contract(IUtilityToken)2556",
            "src": "contracts\\Apes.sol:69"
          },
          {
            "contract": "ApesNFT",
            "label": "_pool",
            "type": "t_contract(IStakingPool)2571",
            "src": "contracts\\Apes.sol:70"
          }
        ],
        "types": {
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_address": {
            "label": "address"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_uint256,t_struct(ApesInfo)2588_storage)": {
            "label": "mapping(uint256 => struct ApesNFT.ApesInfo)"
          },
          "t_struct(ApesInfo)2588_storage": {
            "label": "struct ApesNFT.ApesInfo",
            "members": [
              {
                "label": "aType",
                "type": "t_enum(ApesType)2582"
              },
              {
                "label": "bStaked",
                "type": "t_bool"
              }
            ]
          },
          "t_enum(ApesType)2582": {
            "label": "enum ApesNFT.ApesType",
            "members": [
              "M1",
              "M2",
              "M3"
            ]
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_contract(IUtilityToken)2556": {
            "label": "contract IUtilityToken"
          },
          "t_contract(IStakingPool)2571": {
            "label": "contract IStakingPool"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_array(t_uint256)46_storage": {
            "label": "uint256[46]"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    }
  }
}
